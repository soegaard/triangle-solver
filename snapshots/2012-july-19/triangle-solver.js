
// The following contains the Whalesong runtime.


(function(window, undefined) {
    // dyoo: this library has been modified slightly so it checks to see
    // if window.jQuery has already been installed.  This is to prevent an ugly issue
    // with regards to a memory leak if one tries to repeatedly load jQuery.
    // NOTE: this portion of the file (jquery-protect-header.js) is intentionally
    // unbalanced.  It'll be closed up by jquery-protect-footer.js.
    if (!window.jQuery) {
/*! jQuery v1.6.3 http://jquery.com/ | http://jquery.org/license */
(function(a,b){function cu(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cr(a){if(!cg[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ch||(ch=c.createElement("iframe"),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),ci.close();d=ci.createElement(a),ci.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ch)}cg[a]=e}return cg[a]}function cq(a,b){var c={};f.each(cm.concat.apply([],cm.slice(0,b)),function(){c[this]=a});return c}function cp(){cn=b}function co(){setTimeout(cp,0);return cn=f.now()}function cf(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ce(){try{return new a.XMLHttpRequest}catch(b){}}function b$(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function bZ(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function bY(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bA.test(a)?d(a,e):bY(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)bY(a+"["+e+"]",b[e],c,d);else d(a,b)}function bX(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bW(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bP,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bW(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bW(a,c,d,e,"*",g));return l}function bV(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bL),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function by(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bt:bu;if(d>0){c!=="border"&&f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bv(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&&f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function bl(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bd,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bk(a){f.nodeName(a,"input")?bj(a):"getElementsByTagName"in a&&f.grep(a.getElementsByTagName("input"),bj)}function bj(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bi(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bh(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bg(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i<j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bf(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function V(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(Q.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function U(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function M(a,b){return(a&&a!=="*"?a+".":"")+b.replace(y,"`").replace(z,"&")}function L(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&&a.type==="click")){a.namespace&&(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i<s.length;i++)g=s[i],g.origType.replace(w,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j<k;j++){m=e[j];for(i=0;i<s.length;i++){g=s[i];if(m.selector===g.selector&&(!n||n.test(g.namespace))&&!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&&f.contains(h,d)&&(d=h);(!d||d!==h)&&p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j<k;j++){e=p[j];if(c&&e.level>c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&&(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function J(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&&d[0].preventDefault()}function D(){return!0}function C(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&&(d==="queue"||!f.data(a,g,b,!0))&&(d==="mark"||!f.data(a,h,b,!0))&&setTimeout(function(){!f.data(a,g,b,!0)&&!f.data(a,h,b,!0)&&(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(j,"$1-$2").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function K(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(K,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z]|[0-9])/ig,x=/^-ms-/,y=function(a,b){return(b+"").toUpperCase()},z=d.userAgent,A,B,C,D=Object.prototype.toString,E=Object.prototype.hasOwnProperty,F=Array.prototype.push,G=Array.prototype.slice,H=String.prototype.trim,I=Array.prototype.indexOf,J={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.3",length:0,size:function(){return this.length},toArray:function(){return G.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?F.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),B.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(G.apply(this,arguments),"slice",G.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:F,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;B.resolveWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!B){B=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",C,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",C),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&K()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):J[D.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!E.call(a,"constructor")&&!E.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||E.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(x,"ms-").replace(w,y)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:H?function(a){return a==null?"":H.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?F.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(!b)return-1;if(I)return I.call(b,a);for(var c=0,d=b.length;c<d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=G.call(arguments,2),g=function(){return a.apply(c,f.concat(G.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")<0&&v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),A=e.uaMatch(z),A.browser&&(e.browser[A.browser]=!0,e.browser.version=A.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?C=function(){c.removeEventListener("DOMContentLoaded",C,!1),e.ready()}:c.attachEvent&&(C=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",C),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&&(k=b,b=0);for(g=0,h=c.length;g<h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&&a.push(i);k&&e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&&!b&&!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&&f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g+"With"](this===b?d:this,[h])}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&&a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length>1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred();if(d>1){for(;c<d;c++)b[c]&&f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&&g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   <link><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type=checkbox>",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&&a.attachEvent&&a.fireEvent&&(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.firstChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},m&&f.extend(p,{position:"absolute",left:"-1000px",top:"-1000px"});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&&(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="<div style='width:4px;'></div>",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&&q[0].offsetHeight===0,a.innerHTML="",c.defaultView&&c.defaultView.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0),o.innerHTML="",n.removeChild(o);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([a-z])([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i=f.expando,j=typeof c=="string",k=a.nodeType,l=k?f.cache:a,m=k?a[f.expando]:a[f.expando]&&f.expando;if((!m||e&&m&&l[m]&&!l[m][i])&&j&&d===b)return;m||(k?a[f.expando]=m=++f.uuid:m=f.expando),l[m]||(l[m]={},k||(l[m].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?l[m][i]=f.extend(l[m][i],c):l[m]=f.extend(l[m],c);g=l[m],e&&(g[i]||(g[i]={}),g=g[i]),d!==b&&(g[f.camelCase(c)]=d);if(c==="events"&&!g[c])return g[i]&&g[i].events;j?(h=g[c],h==null&&(h=g[f.camelCase(c)])):h=g;return h}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e=f.expando,g=a.nodeType,h=g?f.cache:a,i=g?a[f.expando]:f.expando;if(!h[i])return;if(b){d=c?h[i][e]:h[i];if(d){d[b]||(b=f.camelCase(b)),delete d[b];if(!l(d))return}}if(c){delete h[i][e];if(!l(h[i]))return}var j=h[i][e];f.support.deleteExpando||!h.setInterval?delete h[i]:h[i]=null,j?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=j):g&&(f.support.deleteExpando?delete a[f.expando]:a.removeAttribute?a.removeAttribute(f.expando):a[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h<i;h++)g=e[h].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&&this.length&&(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&&j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&&(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&&(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&&(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u,v;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(o);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(o);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(n," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(n," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&&"get"in c&&(d=c.get(e,"value"))!==b)return d;d=e.value;return typeof d=="string"?d.replace(p,""):d==null?"":d}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c<0)return null;for(var h=g?c:0,i=g?c+1:e.length;h<i;h++){var j=e[h];if(j.selected&&(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&&(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&&!d.length&&e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&&c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);j&&(c=f.attrFix[c]||c,i=f.attrHooks[c],i||(t.test(c)?i=v:u&&(i=u)));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&&"set"in i&&j&&(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&&"get"in i&&j&&(h=i.get(a,c))!==null)return h;h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&&(b=f.attrFix[b]||b,f.attr(a,b,""),a.removeAttribute(b),t.test(b)&&(c=f.propFix[b]||b)in a&&(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(u&&f.nodeName(a,"button"))return u.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(u&&f.nodeName(a,"button"))return u.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);i&&(c=f.propFix[c]||c,h=f.propHooks[c]);return d!==b?h&&"set"in h&&(g=h.set(a,d,c))!==b?g:a[c]=d:h&&"get"in h&&(g=h.get(a,c))!==null?g:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabIndex=f.propHooks.tabIndex,v={get:function(a,c){var d;return f.prop(a,c)===!0||(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},f.support.getSetAttribute||(u=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&d.nodeValue!==""?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var w=/\.(.*)$/,x=/^(?:textarea|input|select)$/i,y=/\./g,z=/ /g,A=/[^\w\s.|`]/g,B=function(a){return a.replace(A,"\\$&")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){if(d===!1)d=C;else if(!d)return;var g,h;d.handler&&(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")>-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&&a.attachEvent("on"+l,k)}p.add&&(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){d===!1&&(d=C);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&&f._data(a),t=s&&s.events;if(!s||!t)return;c&&c.type&&(d=c.handler,c=c.type);if(!c||typeof c=="string"&&c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")<0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),B).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j<p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j<p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&&p.splice(j--,1),o.remove&&o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&&p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&&f.removeEvent(a,h,s.handle),g=null
,delete t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&&(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&&f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")>=0&&(h=h.slice(0,-1),j=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if(!!e&&!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&&b.events&&b.events[h]&&f.event.trigger(c,d,b.handle.elem)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d!=null?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")<0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&&m.apply(k,d),l&&f.acceptData(k)&&k[l]&&k[l].apply(k,d)===!1&&(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&&a}while(k&&!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)){try{l&&e[h]&&(n=e[l],n&&(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&&(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&&!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h<i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&&(c.result=k,k===!1&&(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),!a.relatedTarget&&a.fromElement&&(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&&a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&&i.scrollLeft||j&&j.scrollLeft||0)-(i&&i.clientLeft||j&&j.clientLeft||0),a.pageY=a.clientY+(i&&i.scrollTop||j&&j.scrollTop||0)-(i&&i.clientTop||j&&j.clientTop||0)}a.which==null&&(a.charCode!=null||a.keyCode!=null)&&(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&&a.ctrlKey&&(a.metaKey=a.ctrlKey),!a.which&&a.button!==b&&(a.which=a.button&1?1:a.button&2?3:a.button&4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,M(a.origType,a.selector),f.extend({},a,{handler:L,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,M(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?D:C):this.type=a,b&&f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=D;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=D;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=D,this.stopPropagation()},isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C};var E=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&&(b&&(c=f.contains(this,b)),c||(f.event.handle.apply(this,arguments),a.type=d))},F=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&&c.selector?F:E,a)},teardown:function(a){f.event.remove(this,b,a&&a.selector?F:E)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="submit"||c==="image")&&f(b).closest("form").length&&J("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="text"||c==="password")&&f(b).closest("form").length&&a.keyCode===13&&J("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var G,H=function(a){var b=f.nodeName(a,"input")?a.type:"",c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex>-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&&(c=a.selectedIndex);return c},I=function(c){var d=c.target,e,g;if(!!x.test(d.nodeName)&&!d.readOnly){e=f._data(d,"_change_data"),g=H(d),(c.type!=="focusout"||d.type!=="radio")&&f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:I,beforedeactivate:I,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&&I.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&&!f.nodeName(b,"textarea")||a.keyCode===32&&(c==="checkbox"||c==="radio")||c==="select-multiple")&&I.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",H(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in G)f.event.add(this,c+".specialChange",G[c]);return x.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return x.test(this.nodeName)}},G=f.event.special.change.filters,G.focus=G.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&&a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&&c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i<j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&&!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d<e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var K={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&&!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&&!a&&g&&g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||C,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=w.exec(h),k="",j&&(k=j[0],h=h.replace(w,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,K[h]?(a.push(K[h]+k),h=h+k):h=(K[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p<q;p++)f.event.add(n[p],"live."+M(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+M(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.bind(b,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length>0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&&!f&&(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length>1&&m.exec(b))if(x.length===2&&l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&&(b+=x.shift()),j=v(b,j)}else{!g&&x.length>1&&d.nodeType===9&&!w&&l.match.ID.test(x[0])&&!l.match.ID.test(x[x.length-1])&&(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&&(x[0]==="~"||x[0]==="+")&&d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length>0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&&(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&&d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&&(n[t]===!0||n[t].nodeType===1&&k.contains(d,n[t]))&&f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&&n[t].nodeType===1&&f.push(j[t]);else p(n,f);o&&(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length>0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e<f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&&c[0]&&k.isXML(c[0]);while(a&&c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&&f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&&(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&&o!=null?t?g=!0:j[s]=!1:t&&(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!j.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&k.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!j.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&&l.attrMap[g]&&(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&&f===0)return!0;var g=b[0],h=a.parentNode;if(h&&(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&&(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&&j/e>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c<f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&&(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&&!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&&l.find.CLASS&&e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return p([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&"):e.setAttribute("id",o),r&&q&&(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g<h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var N=/Until$/,O=/^(?:parents|prevUntil|prevAll)/,P=/,/,Q=/^.[^:#\[\.,]*$/,R=Array.prototype.slice,S=f.expr.match.POS,T={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(V(this,a,!1),"not",a)},filter:function(a){return this.pushStack(V(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&&a.length){for(d=0,e=a.length;d<e;d++)i=a[d],j[i]||(j[i]=S.test(i)?f(i,b||this.context):i);while(g&&g.ownerDocument&&g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)>-1:f(g).is(h))&&c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=S.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(l?l.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(U(c[0])||U(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=R.call(arguments);N.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!T[a]?f.unique(e):e,(this.length>1||P.test(d))&&O.test(a)&&(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|object|embed|option|style)/i,bb=/checked\s*(?:[^=]|=\s*.checked.)/i,bc=/\/(java|ecma)script/i,bd=/^\s*<!(?:\[CDATA\[|\-\-)/,be={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};be.optgroup=be.option,be.tbody=be.tfoot=be.colgroup=be.caption=be.thead,be.th=be.td,f.support.htmlSerialize||(be._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!be[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bb.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bf(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bl)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i;b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof a[0]=="string"&&a[0].length<512&&i===c&&a[0].charAt(0)==="<"&&!ba.test(a[0])&&(f.support.checkClone||!bb.test(a[0]))&&(g=!0,h=f.fragments[a[0]],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[a[0]]=h?e:1);
return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bh(a,d),e=bi(a),g=bi(d);for(h=0;e[h];++h)g[h]&&bh(e[h],g[h])}if(b){bg(a,d);if(c){e=bi(a),g=bi(d);for(h=0;e[h];++h)bg(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=be[l]||be._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bk(k[i]);else bk(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bc.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&&f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&&d[c][e];if(b&&b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&&(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&&j.removeAttribute(f.expando),delete d[c]}}}});var bm=/alpha\([^)]*\)/i,bn=/opacity=([^)]*)/,bo=/([A-Z]|^ms)/g,bp=/^-?\d+(?:px)?$/i,bq=/^-?\d/,br=/^([\-+])=([\-+.\de]+)/,bs={position:"absolute",visibility:"hidden",display:"block"},bt=["Left","Right"],bu=["Top","Bottom"],bv,bw,bx;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bv(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=br.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bv)return bv(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return by(a,b,d);f.swap(a,bs,function(){e=by(a,b,d)});return e}},set:function(a,b){if(!bp.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bn.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bm,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bm.test(g)?g.replace(bm,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bv(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bw=function(a,c){var d,e,g;c=c.replace(bo,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&&!f.contains(a.ownerDocument.documentElement,a)&&(d=f.style(a,c));return d}),c.documentElement.currentStyle&&(bx=function(a,b){var c,d=a.currentStyle&&a.currentStyle[b],e=a.runtimeStyle&&a.runtimeStyle[b],f=a.style;!bp.test(d)&&bq.test(d)&&(c=f.left,e&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&&(a.runtimeStyle.left=e));return d===""?"auto":d}),bv=bw||bx,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bz=/%20/g,bA=/\[\]$/,bB=/\r?\n/g,bC=/#.*$/,bD=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bE=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bF=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bG=/^(?:GET|HEAD)$/,bH=/^\/\//,bI=/\?/,bJ=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bK=/^(?:select|textarea)/i,bL=/\s+/,bM=/([?&])_=[^&]*/,bN=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bO=f.fn.load,bP={},bQ={},bR,bS,bT=["*/"]+["*"];try{bR=e.href}catch(bU){bR=c.createElement("a"),bR.href="",bR=bR.href}bS=bN.exec(bR.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bO)return bO.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bJ,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bK.test(this.nodeName)||bE.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bB,"\r\n")}}):{name:b.name,value:c.replace(bB,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?bX(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),bX(a,b);return a},ajaxSettings:{url:bR,isLocal:bF.test(bS[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bT},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bV(bP),ajaxTransport:bV(bQ),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?bZ(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=b$(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bD.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bC,"").replace(bH,bS[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bL),d.crossDomain==null&&(r=bN.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bS[1]&&r[2]==bS[2]&&(r[3]||(r[1]==="http:"?80:443))==(bS[3]||(bS[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bW(bP,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bG.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bI.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bM,"$1_="+x);d.url=y+(y===d.url?(bI.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bT+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bW(bQ,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){s<2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)bY(g,a[g],c,e);return d.join("&").replace(bz,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var b_=f.now(),ca=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+b_++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ca.test(b.url)||e&&ca.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ca,l),b.url===j&&(e&&(k=k.replace(ca,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cb=a.ActiveXObject?function(){for(var a in cd)cd[a](0,1)}:!1,cc=0,cd;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ce()||cf()}:ce,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cb&&delete cd[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cc,cb&&(cd||(cd={},f(a).unload(cb)),cd[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cg={},ch,ci,cj=/^(?:toggle|show|hide)$/,ck=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cl,cm=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cn;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cq("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cr(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cq("hide",3),a,b,c);for(var d=0,e=this.length;d<e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&&!f._data(this[d],"olddisplay")&&f._data(this[d],"olddisplay",g)}for(d=0;d<e;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cq("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(f.support.inlineBlockNeedsLayout?(j=cr(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cj.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=ck.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&&(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&&(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&&this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&&(b&&a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cq("show",1),slideUp:cq("hide",1),slideToggle:cq("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue!==!1?f.dequeue(this):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function g(a){return d.step(a)}var d=this,e=f.fx;this.startTime=cn||co(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,g.elem=this.elem,g()&&f.timers.push(g)&&!cl&&(cl=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cn||co(),c=!0,d=this.elem,e=this.options,g,h;if(a||b>=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&&(c=!1);if(c){e.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&&f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b<a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cl),cl=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cs=/^t(?:able|d|h)$/i,ct=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cu(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.offset.supportsFixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&&(!f.offset.doesAddBorderForTableAndCells||!cs.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=ct.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!ct.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cu(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cu(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a&&a.style?parseFloat(f.css(a,d,"padding")):null},f.fn["outer"+c]=function(a){var b=this[0];return b&&b.style?parseFloat(f.css(b,d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNaN(j)?i:j}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);    }
})(window, void(0));// Scheme numbers.


var __PLTNUMBERS_TOP__;
if (typeof(exports) !== 'undefined') {
    __PLTNUMBERS_TOP__ = exports;
} else {
    if (! this['jsnums']) {
 	this['jsnums'] = {};
    }
    __PLTNUMBERS_TOP__  = this['jsnums'];
}

//var jsnums = {};


// The numeric tower has the following levels:
//     integers
//     rationals
//     floats
//     complex numbers
//
// with the representations:
//     integers: fixnum or BigInteger [level=0]
//     rationals: Rational [level=1]
//     floats: FloatPoint [level=2]
//     complex numbers: Complex [level=3]

// We try to stick with the unboxed fixnum representation for
// integers, since that's what scheme programs commonly deal with, and
// we want that common type to be lightweight.


// A boxed-scheme-number is either BigInteger, Rational, FloatPoint, or Complex.
// An integer-scheme-number is either fixnum or BigInteger.


(function() {
    // Abbreviation
    var Numbers = __PLTNUMBERS_TOP__;
    //var Numbers = jsnums;


    // makeNumericBinop: (fixnum fixnum -> any) (scheme-number scheme-number -> any) -> (scheme-number scheme-number) X
    // Creates a binary function that works either on fixnums or boxnums.
    // Applies the appropriate binary function, ensuring that both scheme numbers are
    // lifted to the same level.
    var makeNumericBinop = function(onFixnums, onBoxednums, options) {
	options = options || {};
	return function(x, y) {
	    if (options.isXSpecialCase && options.isXSpecialCase(x))
		return options.onXSpecialCase(x, y);
	    if (options.isYSpecialCase && options.isYSpecialCase(y))
		return options.onYSpecialCase(x, y);

	    if (typeof(x) === 'number' &&
		typeof(y) === 'number') {
		return onFixnums(x, y);
	    }
	    if (typeof(x) === 'number') {
		x = liftFixnumInteger(x, y);
	    }
	    if (typeof(y) === 'number') {
		y = liftFixnumInteger(y, x);
	    }

	    if (x.level < y.level) x = x.liftTo(y);
	    if (y.level < x.level) y = y.liftTo(x);
	    return onBoxednums(x, y);
	};
    }
    
    
    // fromFixnum: fixnum -> scheme-number
    var fromFixnum = function(x) {
	if (isNaN(x) || (! isFinite(x))) {
	    return FloatPoint.makeInstance(x);
	}
	var nf = Math.floor(x);
	if (nf === x) {
            if (isOverflow(nf)) {
		return makeBignum(expandExponent(x+''));
            } else {
		return nf;
	    }
	} else {
            return FloatPoint.makeInstance(x);
	}
    };

    var expandExponent = function(s) {
	var match = s.match(scientificPattern), mantissaChunks, exponent;
	if (match) {
	    mantissaChunks = match[1].match(/^([^.]*)(.*)$/);
	    exponent = Number(match[2]);

	    if (mantissaChunks[2].length === 0) {
		return mantissaChunks[1] + zfill(exponent);
	    }

	    if (exponent >= mantissaChunks[2].length - 1) {
		return (mantissaChunks[1] + 
			mantissaChunks[2].substring(1) + 
			zfill(exponent - (mantissaChunks[2].length - 1)));
	    } else {
		return (mantissaChunks[1] +
			mantissaChunks[2].substring(1, 1+exponent));
	    }
	} else {
	    return s;
	}
    };

    // zfill: integer -> string
    // builds a string of "0"'s of length n.
    var zfill = function(n) {
	var buffer = [];
	buffer.length = n;
	for (var i = 0; i < n; i++) {
	    buffer[i] = '0';
	}
	return buffer.join('');
    };
    

    
    // liftFixnumInteger: fixnum-integer boxed-scheme-number -> boxed-scheme-number
    // Lifts up fixnum integers to a boxed type.
    var liftFixnumInteger = function(x, other) {
	switch(other.level) {
	case 0: // BigInteger
	    return makeBignum(x);
	case 1: // Rational
	    return new Rational(x, 1);
	case 2: // FloatPoint
	    return new FloatPoint(x);
	case 3: // Complex
	    return new Complex(x, 0);
	default:
	    throwRuntimeError("IMPOSSIBLE: cannot lift fixnum integer to " + other.toString(), x, other);
	}
    };
    
    
    // throwRuntimeError: string (scheme-number | undefined) (scheme-number | undefined) -> void
    // Throws a runtime error with the given message string.
    var throwRuntimeError = function(msg, x, y) {
	Numbers['onThrowRuntimeError'](msg, x, y);
    };



    // onThrowRuntimeError: string (scheme-number | undefined) (scheme-number | undefined) -> void
    // By default, will throw a new Error with the given message.
    // Override Numbers['onThrowRuntimeError'] if you need to do something special.
    var onThrowRuntimeError = function(msg, x, y) {
	throw new Error(msg);
    };


    // isSchemeNumber: any -> boolean
    // Returns true if the thing is a scheme number.
    var isSchemeNumber = function(thing) {
	return (typeof(thing) === 'number'
		|| (thing instanceof Rational ||
		    thing instanceof FloatPoint ||
		    thing instanceof Complex ||
		    thing instanceof BigInteger));
    };


    // isRational: scheme-number -> boolean
    var isRational = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isRational()));
    };

    // isReal: scheme-number -> boolean
    var isReal = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isReal()));
    };

    // isExact: scheme-number -> boolean
    var isExact = function(n) {
	return (typeof(n) === 'number' || 
		(isSchemeNumber(n) && n.isExact()));
    };

    // isExact: scheme-number -> boolean
    var isInexact = function(n) {
	if (typeof(n) === 'number') {
	    return false;
	} else {
	    return (isSchemeNumber(n) && n.isInexact());
	}
    };

    // isInteger: scheme-number -> boolean
    var isInteger = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && n.isInteger()));
    };

    // isExactInteger: scheme-number -> boolean
    var isExactInteger = function(n) {
	return (typeof(n) === 'number' ||
		(isSchemeNumber(n) && 
		 n.isInteger() && 
		 n.isExact()));
    }



    // toFixnum: scheme-number -> javascript-number
    var toFixnum = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.toFixnum();
    };

    // toExact: scheme-number -> scheme-number
    var toExact = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.toExact();
    };


    // toExact: scheme-number -> scheme-number
    var toInexact = function(n) {
	if (typeof(n) === 'number')
	    return FloatPoint.makeInstance(n);
	return n.toInexact();
    };



    //////////////////////////////////////////////////////////////////////


    // add: scheme-number scheme-number -> scheme-number
    var add = function(x, y) {
        var sum;
        if (typeof(x) === 'number' && typeof(y) === 'number') {
            sum = x + y;
            if (isOverflow(sum)) {
		return (makeBignum(x)).add(makeBignum(y));
            }
        }
        if (x instanceof FloatPoint && y instanceof FloatPoint) {
            return x.add(y);
        }
        return addSlow(x, y);        
    };

    var addSlow = makeNumericBinop(
	function(x, y) {
	    var sum = x + y;
	    if (isOverflow(sum)) {
		return (makeBignum(x)).add(makeBignum(y));
	    } else {
		return sum;
	    }
	},
	function(x, y) {
	    return x.add(y);
	},
	{isXSpecialCase: function(x) { 
	    return isExactInteger(x) && _integerIsZero(x) },
	 onXSpecialCase: function(x, y) { return y; },
	 isYSpecialCase: function(y) { 
	     return isExactInteger(y) && _integerIsZero(y) },
	 onYSpecialCase: function(x, y) { return x; }
	});


    // subtract: scheme-number scheme-number -> scheme-number
    var subtract = makeNumericBinop(
	function(x, y) {
	    var diff = x - y;
	    if (isOverflow(diff)) {
		return (makeBignum(x)).subtract(makeBignum(y));
	    } else {
		return diff;
	    }
	},
	function(x, y) {
	    return x.subtract(y);
	},
	{isXSpecialCase: function(x) { 
	    return isExactInteger(x) && _integerIsZero(x) },
	 onXSpecialCase: function(x, y) { return negate(y); },
	 isYSpecialCase: function(y) { 
	     return isExactInteger(y) && _integerIsZero(y) },
	 onYSpecialCase: function(x, y) { return x; }
	});


    // mulitply: scheme-number scheme-number -> scheme-number
    var multiply = function(x, y) {
        var prod;
        if (typeof(x) === 'number' && typeof(y) === 'number') {
	    prod = x * y;
	    if (isOverflow(prod)) {
		return (makeBignum(x)).multiply(makeBignum(y));
            } else {
                return prod;
            }
        }
        if (x instanceof FloatPoint && y instanceof FloatPoint) {
            return x.multiply(y);
        }
        return multiplySlow(x, y);
    };
    var multiplySlow = makeNumericBinop(
	function(x, y) {
	    var prod = x * y;
	    if (isOverflow(prod)) {
		return (makeBignum(x)).multiply(makeBignum(y));
	    } else {
		return prod;
	    }
	},
	function(x, y) {
	    return x.multiply(y);
	},
	{isXSpecialCase: function(x) { 
	    return (isExactInteger(x) && 
		    (_integerIsZero(x) || _integerIsOne(x) || _integerIsNegativeOne(x))) },
	 onXSpecialCase: function(x, y) { 
	     if (_integerIsZero(x))
		 return 0;
	     if (_integerIsOne(x))
		 return y;
	     if (_integerIsNegativeOne(x))
		 return negate(y);
	 },
	 isYSpecialCase: function(y) { 
	     return (isExactInteger(y) && 
		     (_integerIsZero(y) || _integerIsOne(y) || _integerIsNegativeOne(y)))},
	 onYSpecialCase: function(x, y) { 
	     if (_integerIsZero(y))
		 return 0;
	     if (_integerIsOne(y))
		 return x;
	     if (_integerIsNegativeOne(y)) 
		 return negate(x);
	 }
	});

    
    // divide: scheme-number scheme-number -> scheme-number
    var divide = makeNumericBinop(
	function(x, y) {
	    if (_integerIsZero(y))
		throwRuntimeError("/: division by zero", x, y);
	    var div = x / y;
	    if (isOverflow(div)) {
		return (makeBignum(x)).divide(makeBignum(y));
	    } else if (Math.floor(div) !== div) {
		return Rational.makeInstance(x, y);
	    } else {
		return div;
	    }
	},
	function(x, y) {
	    return x.divide(y);
	},
	{ isXSpecialCase: function(x) {
	    return (eqv(x, 0));
	},
	  onXSpecialCase: function(x, y) {
	      if (eqv(y, 0)) {
		  throwRuntimeError("/: division by zero", x, y);
	      }
	      return 0;
	  },
	  isYSpecialCase: function(y) { 
	    return (eqv(y, 0)); },
	  onYSpecialCase: function(x, y) {
	      throwRuntimeError("/: division by zero", x, y);
	  }
	});
    
    
    // equals: scheme-number scheme-number -> boolean
    var equals = makeNumericBinop(
	function(x, y) {
	    return x === y;
	},
	function(x, y) {
	    return x.equals(y);
	});


    // eqv: scheme-number scheme-number -> boolean
    var eqv = function(x, y) {
	if (x === y)
	    return true;
	if (typeof(x) === 'number' && typeof(y) === 'number')
	    return x === y;
	if (x === NEGATIVE_ZERO || y === NEGATIVE_ZERO)
	    return x === y;
	if (x instanceof Complex || y instanceof Complex) {
	    return (eqv(realPart(x), realPart(y)) &&
		    eqv(imaginaryPart(x), imaginaryPart(y)));
	}
	var ex = isExact(x), ey = isExact(y);
	return (((ex && ey) || (!ex && !ey)) && equals(x, y));
    };

    // approxEqual: scheme-number scheme-number scheme-number -> boolean
    var approxEquals = function(x, y, delta) {
	return lessThan(abs(subtract(x, y)),
                        delta);
    };

    // greaterThanOrEqual: scheme-number scheme-number -> boolean
    var greaterThanOrEqual = makeNumericBinop(
	function(x, y) {
	    return x >= y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError(
		    ">=: couldn't be applied to complex number", x, y);
	    return x.greaterThanOrEqual(y);
	});


    // lessThanOrEqual: scheme-number scheme-number -> boolean
    var lessThanOrEqual = makeNumericBinop(
	function(x, y){

	    return x <= y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError("<=: couldn't be applied to complex number", x, y);
	    return x.lessThanOrEqual(y);
	});


    // greaterThan: scheme-number scheme-number -> boolean
    var greaterThan = makeNumericBinop(
	function(x, y){
	    return x > y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError(">: couldn't be applied to complex number", x, y);
	    return x.greaterThan(y);
	});


    // lessThan: scheme-number scheme-number -> boolean
    var lessThan = makeNumericBinop(
	function(x, y){

	    return x < y;
	},
	function(x, y) {
	    if (!(isReal(x) && isReal(y)))
		throwRuntimeError("<: couldn't be applied to complex number", x, y);
	    return x.lessThan(y);
	});



    // expt: scheme-number scheme-number -> scheme-number
    var expt = (function() {
	var _expt = makeNumericBinop(
	    function(x, y){
		var pow = Math.pow(x, y);
		if (isOverflow(pow)) {
		    return (makeBignum(x)).expt(makeBignum(y));
		} else {
		    return pow;
		}
	    },
	    function(x, y) {
		if (equals(y, 0)) {
		    return add(y, 1);
		} else {
		    return x.expt(y);
		}
	    });
	return function(x, y) {
	    if (equals(y, 0)) 
		return add(y, 1);
	    if (isReal(y) && lessThan(y, 0)) {
		return _expt(divide(1, x), negate(y));
	    }
	    return _expt(x, y);
	};
    })();


    // exp: scheme-number -> scheme-number
    var exp = function(n) {
	if ( eqv(n, 0) ) {
		return 1;
	}
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.exp(n));
	}
	return n.exp();
    };


    // modulo: scheme-number scheme-number -> scheme-number
    var modulo = function(m, n) {
	if (! isInteger(m)) {
	    throwRuntimeError('modulo: the first argument '
			      + m + " is not an integer.", m, n);
	}
	if (! isInteger(n)) {
	    throwRuntimeError('modulo: the second argument '
			      + n + " is not an integer.", m, n);
	}
	var result;
	if (typeof(m) === 'number') {
	    result = m % n;
	    if (n < 0) {
		if (result <= 0)
		    return result;
		else
		    return result + n;
	    } else {
		if (result < 0)
		    return result + n;
		else
		    return result;
	    }
	}
	result = _integerModulo(floor(m), floor(n));
	// The sign of the result should match the sign of n.
	if (lessThan(n, 0)) {
	    if (lessThanOrEqual(result, 0)) {
		return result;
	    }
	    return add(result, n);

	} else {
	    if (lessThan(result, 0)) {
		return add(result, n);
	    }
	    return result;
	}
    };



    // numerator: scheme-number -> scheme-number
    var numerator = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.numerator();
    };


    // denominator: scheme-number -> scheme-number
    var denominator = function(n) {
	if (typeof(n) === 'number')
	    return 1;
	return n.denominator();
    };

    // sqrt: scheme-number -> scheme-number
    var sqrt = function(n) {
	if (typeof(n) === 'number') {
	    if (n >= 0) {
		var result = Math.sqrt(n);
		if (Math.floor(result) === result) {
		    return result;
		} else {
		    return FloatPoint.makeInstance(result);
		}
	    } else {
		return (Complex.makeInstance(0, sqrt(-n)));
	    }
	}
	return n.sqrt();
    };

    // abs: scheme-number -> scheme-number
    var abs = function(n) {
	if (typeof(n) === 'number') {
	    return Math.abs(n);
	}
	return n.abs();
    };

    // floor: scheme-number -> scheme-number
    var floor = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.floor();
    };

    // ceiling: scheme-number -> scheme-number
    var ceiling = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.ceiling();
    };

    // conjugate: scheme-number -> scheme-number
    var conjugate = function(n) {
	if (typeof(n) === 'number')
	    return n;
	return n.conjugate();
    };

    // magnitude: scheme-number -> scheme-number
    var magnitude = function(n) {
	if (typeof(n) === 'number')
	    return Math.abs(n);
	return n.magnitude();
    };


    // log: scheme-number -> scheme-number
    var log = function(n) {
	if ( eqv(n, 1) ) {
		return 0;
	}
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.log(n));
	}
	return n.log();
    };

    // angle: scheme-number -> scheme-number
    var angle = function(n) {
	if (typeof(n) === 'number') {
	    if (n > 0)
		return 0;
	    else
		return FloatPoint.pi;
	}
	return n.angle();
    };

    // tan: scheme-number -> scheme-number
    var tan = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.tan(n));
	}
	return n.tan();
    };

    // atan: scheme-number -> scheme-number
    var atan = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.atan(n));
	}
	return n.atan();
    };

    // cos: scheme-number -> scheme-number
    var cos = function(n) {
	if (eqv(n, 0)) { return 1; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.cos(n));
	}
	return n.cos();
    };

    // sin: scheme-number -> scheme-number
    var sin = function(n) {
	if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.sin(n));
	}
	return n.sin();
    };

    // acos: scheme-number -> scheme-number
    var acos = function(n) {
	if (eqv(n, 1)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.acos(n));
	}
	return n.acos();
    };

    // asin: scheme-number -> scheme-number
    var asin = function(n) {
        if (eqv(n, 0)) { return 0; }
	if (typeof(n) === 'number') {
	    return FloatPoint.makeInstance(Math.asin(n));
	}
	return n.asin();
    };

    // imaginaryPart: scheme-number -> scheme-number
    var imaginaryPart = function(n) {
	if (typeof(n) === 'number') {
	    return 0;
	}
	return n.imaginaryPart();
    };

    // realPart: scheme-number -> scheme-number
    var realPart = function(n) {
	if (typeof(n) === 'number') {
	    return n;
	}
	return n.realPart();
    };

    // round: scheme-number -> scheme-number
    var round = function(n) {
	if (typeof(n) === 'number') {
	    return n;
	}
	return n.round();
    };



    // sqr: scheme-number -> scheme-number
    var sqr = function(x) {
	return multiply(x, x);
    };


    // integerSqrt: scheme-number -> scheme-number
    var integerSqrt = function(x) {
	if (! isInteger(x)) {
	    throwRuntimeError('integer-sqrt: the argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (typeof (x) === 'number') {
	    if(x < 0) {
	        return Complex.makeInstance(0,
					    Math.floor(Math.sqrt(-x)))
	    } else {
		return Math.floor(Math.sqrt(x));
	    }
	}
	return x.integerSqrt();
    };


    // gcd: scheme-number [scheme-number ...] -> scheme-number
    var gcd = function(first, rest) {
	if (! isInteger(first)) {
	    throwRuntimeError('gcd: the argument ' + first.toString() +
			      " is not an integer.", first);
	}
	var a = abs(first), t, b;
	for(var i = 0; i < rest.length; i++) {
	    b = abs(rest[i]);	
	    if (! isInteger(b)) {
		throwRuntimeError('gcd: the argument ' + b.toString() +
				  " is not an integer.", b);
	    }
	    while (! _integerIsZero(b)) {
		t = a;
		a = b;
		b = _integerModulo(t, b);
	    }
	}
	return a;
    };

    // lcm: scheme-number [scheme-number ...] -> scheme-number
    var lcm = function(first, rest) {
	if (! isInteger(first)) {
	    throwRuntimeError('lcm: the argument ' + first.toString() +
			      " is not an integer.", first);
	}
	var result = abs(first);
	if (_integerIsZero(result)) { return 0; }
	for (var i = 0; i < rest.length; i++) {
	    if (! isInteger(rest[i])) {
		throwRuntimeError('lcm: the argument ' + rest[i].toString() +
				  " is not an integer.", rest[i]);
	    }
	    var divisor = _integerGcd(result, rest[i]);
	    if (_integerIsZero(divisor)) {
		return 0;
	    }
	    result = divide(multiply(result, rest[i]), divisor);
	}
	return result;
    };
    

    var quotient = function(x, y) {
 	if (! isInteger(x)) {
	    throwRuntimeError('quotient: the first argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (! isInteger(y)) {
	    throwRuntimeError('quotient: the second argument ' + y.toString() +
			      " is not an integer.", y);
	}
	return _integerQuotient(x, y);
    };

    
    var remainder = function(x, y) {
	if (! isInteger(x)) {
	    throwRuntimeError('remainder: the first argument ' + x.toString() +
			      " is not an integer.", x);
	}
	if (! isInteger(y)) {
	    throwRuntimeError('remainder: the second argument ' + y.toString() +
			      " is not an integer.", y);
	}
	return _integerRemainder(x, y);
    };


    // Implementation of the hyperbolic functions
    // http://en.wikipedia.org/wiki/Hyperbolic_cosine
    var cosh = function(x) {
	if (eqv(x, 0)) {
	    return FloatPoint.makeInstance(1.0);
	}
	return divide(add(exp(x), exp(negate(x))),
		      2);
    };
	
    var sinh = function(x) {
	return divide(subtract(exp(x), exp(negate(x))),
		      2);
    };


        
    var makeComplexPolar = function(r, theta) {
	// special case: if theta is zero, just return
	// the scalar.
	if (eqv(theta, 0)) {
	    return r;
	}
	return Complex.makeInstance(multiply(r, cos(theta)),
				    multiply(r, sin(theta)));
    };



    //////////////////////////////////////////////////////////////////////

    // Helpers


    // IsFinite: scheme-number -> boolean
    // Returns true if the scheme number is finite or not.
    var isSchemeNumberFinite = function(n) {
	if (typeof(n) === 'number') {
	    return isFinite(n);
	} else {
	    return n.isFinite();
	}
    };

    // isOverflow: javascript-number -> boolean
    // Returns true if we consider the number an overflow.
    var MIN_FIXNUM = -(9e15);
    var MAX_FIXNUM = (9e15);
    var isOverflow = function(n) {
	return (n < MIN_FIXNUM ||  MAX_FIXNUM < n);
    };


    // negate: scheme-number -> scheme-number
    // multiplies a number times -1.
    var negate = function(n) {
	if (typeof(n) === 'number') {
	    return -n;
	}
	return n.negate();
    };


    // halve: scheme-number -> scheme-number
    // Divide a number by 2.
    var halve = function(n) {
	return divide(n, 2);
    };


    // timesI: scheme-number scheme-number
    // multiplies a number times i.
    var timesI = function(x) {
	return multiply(x, plusI);
    };


    // fastExpt: computes n^k by squaring.
    // n^k = (n^2)^(k/2)
    // Assumes k is non-negative integer.
    var fastExpt = function(n, k) {
	var acc = 1;
	while (true) {
	    if (_integerIsZero(k)) {
		return acc;
	    }
	    if (equals(modulo(k, 2), 0)) {
		n = multiply(n, n);
		k = divide(k, 2);
	    } else {
		acc = multiply(acc, n);
		k = subtract(k, 1);
	    }
	}
    };



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    // Integer operations
    // Integers are either represented as fixnums or as BigIntegers.

    // makeIntegerBinop: (fixnum fixnum -> X) (BigInteger BigInteger -> X) -> X
    // Helper to collect the common logic for coersing integer fixnums or bignums to a
    // common type before doing an operation.
    var makeIntegerBinop = function(onFixnums, onBignums, options) {
	options = options || {};
	return (function(m, n) {
	    if (m instanceof Rational) {
		m = numerator(m);
	    } else if (m instanceof Complex) {
		m = realPart(m);
	    }

	    if (n instanceof Rational) {
		n = numerator(n);
	    }else if (n instanceof Complex) {
		n = realPart(n);
	    }

	    if (typeof(m) === 'number' && typeof(n) === 'number') {
		var result = onFixnums(m, n);
		if (! isOverflow(result) ||
		    (options.ignoreOverflow)) {
		    return result;
		}
	    }
	    if (m instanceof FloatPoint || n instanceof FloatPoint) {
		if (options.doNotCoerseToFloating) {
		    return onFixnums(toFixnum(m), toFixnum(n));
		}
		else {
		    return FloatPoint.makeInstance(
			onFixnums(toFixnum(m), toFixnum(n)));
		}
	    }
	    if (typeof(m) === 'number') {
		m = makeBignum(m);
	    }
	    if (typeof(n) === 'number') {
		n = makeBignum(n);
	    }
	    return onBignums(m, n);
	});
    };


    var makeIntegerUnOp = function(onFixnums, onBignums, options) {
	options = options || {};
	return (function(m) {
	    if (m instanceof Rational) {
		m = numerator(m);
	    } else if (m instanceof Complex) {
		m = realPart(m);
	    }

	    if (typeof(m) === 'number') {
		var result = onFixnums(m);
		if (! isOverflow(result) ||
		    (options.ignoreOverflow)) {
		    return result;
		}
	    }
	    if (m instanceof FloatPoint) {
		return onFixnums(toFixnum(m));
	    }
	    if (typeof(m) === 'number') {
		m = makeBignum(m);
	    }
	    return onBignums(m);
	});
    };



    // _integerModulo: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerModulo = makeIntegerBinop(
	function(m, n) {
	    return m % n;
	},
	function(m, n) {
	    return bnMod.call(m, n);
	});


    // _integerGcd: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerGcd = makeIntegerBinop(
	function(a, b) {
	    var t;
	    while (b !== 0) {
		t = a;
		a = b;
		b = t % b;
	    }
	    return a;
	},
	function(m, n) {
	    return bnGCD.call(m, n);
	});


    // _integerIsZero: integer-scheme-number -> boolean
    // Returns true if the number is zero.
    var _integerIsZero = makeIntegerUnOp(
	function(n){
	    return n === 0;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.ZERO);
	}
    );


    // _integerIsOne: integer-scheme-number -> boolean
    var _integerIsOne = makeIntegerUnOp(
	function(n) {
	    return n === 1;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.ONE);
	});
    

 
    // _integerIsNegativeOne: integer-scheme-number -> boolean
    var _integerIsNegativeOne = makeIntegerUnOp(
	function(n) {
	    return n === -1;
	},
	function(n) {
	    return bnEquals.call(n, BigInteger.NEGATIVE_ONE);
	});
    


    // _integerAdd: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerAdd = makeIntegerBinop(
	function(m, n) {
	    return m + n;
	},
	function(m, n) {
	    return bnAdd.call(m, n);
	});

    // _integerSubtract: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerSubtract = makeIntegerBinop(
	function(m, n) {
	    return m - n;
	},
	function(m, n) {
	    return bnSubtract.call(m, n);
	});

    // _integerMultiply: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerMultiply = makeIntegerBinop(
	function(m, n) {
	    return m * n;
	},
	function(m, n) {
	    return bnMultiply.call(m, n);
	});

    //_integerQuotient: integer-scheme-number integer-scheme-number -> integer-scheme-number
    var _integerQuotient = makeIntegerBinop(
	function(m, n) {
	    return ((m - (m % n))/ n);
	},
	function(m, n) {
            return bnDivide.call(m, n);
	});

    var _integerRemainder = makeIntegerBinop(
	function(m, n) {
	    return m % n;
	},
	function(m, n) {
	    return bnRemainder.call(m, n);
	});


    // _integerDivideToFixnum: integer-scheme-number integer-scheme-number -> fixnum
    var _integerDivideToFixnum = makeIntegerBinop(
	function(m, n) {
	    return m / n;
	},
	function(m, n) {
	    return toFixnum(m) / toFixnum(n);
	},
	{ignoreOverflow: true,
	 doNotCoerseToFloating: true});


    // _integerEquals: integer-scheme-number integer-scheme-number -> boolean
    var _integerEquals = makeIntegerBinop(
	function(m, n) {
	    return m === n;
	},
	function(m, n) {
	    return bnEquals.call(m, n);
	},
	{doNotCoerseToFloating: true});

    // _integerGreaterThan: integer-scheme-number integer-scheme-number -> boolean
    var _integerGreaterThan = makeIntegerBinop(
	function(m, n) {
	    return m > n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) > 0;
	},
	{doNotCoerseToFloating: true});

    // _integerLessThan: integer-scheme-number integer-scheme-number -> boolean
    var _integerLessThan = makeIntegerBinop(
	function(m, n) {
	    return m < n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) < 0;
	},
	{doNotCoerseToFloating: true});

    // _integerGreaterThanOrEqual: integer-scheme-number integer-scheme-number -> boolean
    var _integerGreaterThanOrEqual = makeIntegerBinop(
	function(m, n) {
	    return m >= n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) >= 0;
	},
	{doNotCoerseToFloating: true});

    // _integerLessThanOrEqual: integer-scheme-number integer-scheme-number -> boolean
    var _integerLessThanOrEqual = makeIntegerBinop(
	function(m, n) {
	    return m <= n;
	},
	function(m, n) {
	    return bnCompareTo.call(m, n) <= 0;
	},
	{doNotCoerseToFloating: true});



    //////////////////////////////////////////////////////////////////////
    // The boxed number types are expected to implement the following
    // interface.
    //
    // toString: -> string

    // level: number

    // liftTo: scheme-number -> scheme-number

    // isFinite: -> boolean

    // isInteger: -> boolean
    // Produce true if this number can be coersed into an integer.

    // isRational: -> boolean
    // Produce true if the number is rational.

    // isReal: -> boolean
    // Produce true if the number is real.

    // isExact: -> boolean
    // Produce true if the number is exact

    // toExact: -> scheme-number
    // Produce an exact number.

    // toFixnum: -> javascript-number
    // Produce a javascript number.

    // greaterThan: scheme-number -> boolean
    // Compare against instance of the same type.

    // greaterThanOrEqual: scheme-number -> boolean
    // Compare against instance of the same type.

    // lessThan: scheme-number -> boolean
    // Compare against instance of the same type.

    // lessThanOrEqual: scheme-number -> boolean
    // Compare against instance of the same type.

    // add: scheme-number -> scheme-number
    // Add with an instance of the same type.

    // subtract: scheme-number -> scheme-number
    // Subtract with an instance of the same type.

    // multiply: scheme-number -> scheme-number
    // Multiply with an instance of the same type.

    // divide: scheme-number -> scheme-number
    // Divide with an instance of the same type.

    // numerator: -> scheme-number
    // Return the numerator.

    // denominator: -> scheme-number
    // Return the denominator.

    // integerSqrt: -> scheme-number
    // Produce the integer square root.

    // sqrt: -> scheme-number
    // Produce the square root.

    // abs: -> scheme-number
    // Produce the absolute value.

    // floor: -> scheme-number
    // Produce the floor.

    // ceiling: -> scheme-number
    // Produce the ceiling.

    // conjugate: -> scheme-number
    // Produce the conjugate.

    // magnitude: -> scheme-number
    // Produce the magnitude.

    // log: -> scheme-number
    // Produce the log.

    // angle: -> scheme-number
    // Produce the angle.

    // atan: -> scheme-number
    // Produce the arc tangent.

    // cos: -> scheme-number
    // Produce the cosine.

    // sin: -> scheme-number
    // Produce the sine.

    // expt: scheme-number -> scheme-number
    // Produce the power to the input.

    // exp: -> scheme-number
    // Produce e raised to the given power.

    // acos: -> scheme-number
    // Produce the arc cosine.

    // asin: -> scheme-number
    // Produce the arc sine.

    // imaginaryPart: -> scheme-number
    // Produce the imaginary part

    // realPart: -> scheme-number
    // Produce the real part.

    // round: -> scheme-number
    // Round to the nearest integer.

    // equals: scheme-number -> boolean
    // Produce true if the given number of the same type is equal.



    //////////////////////////////////////////////////////////////////////

    // Rationals


    var Rational = function(n, d) {
	this.n = n;
	this.d = d;
    };


    Rational.prototype.toString = function() {
	if (_integerIsOne(this.d)) {
	    return this.n.toString() + "";
	} else {
	    return this.n.toString() + "/" + this.d.toString();
	}
    };


    Rational.prototype.level = 1;


    Rational.prototype.liftTo = function(target) {
	if (target.level === 2)
	    return new FloatPoint(
		_integerDivideToFixnum(this.n, this.d));
	if (target.level === 3)
	    return new Complex(this, 0);
	return throwRuntimeError("invalid level of Number", this, target);
    };

    Rational.prototype.isFinite = function() {
	return true;
    };

    Rational.prototype.equals = function(other) {
	return (other instanceof Rational &&
		_integerEquals(this.n, other.n) &&
		_integerEquals(this.d, other.d));
    };



    Rational.prototype.isInteger = function() {
	return _integerIsOne(this.d);
    };

    Rational.prototype.isRational = function() {
        return true;
    };

    Rational.prototype.isReal = function() {
	return true;
    };


    Rational.prototype.add = function(other) {
	return Rational.makeInstance(_integerAdd(_integerMultiply(this.n, other.d),
						 _integerMultiply(this.d, other.n)),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.subtract = function(other) {
	return Rational.makeInstance(_integerSubtract(_integerMultiply(this.n, other.d),
						      _integerMultiply(this.d, other.n)),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.negate = function() { 
	return Rational.makeInstance(-this.n, this.d) 
    };

    Rational.prototype.multiply = function(other) {
	return Rational.makeInstance(_integerMultiply(this.n, other.n),
				     _integerMultiply(this.d, other.d));
    };

    Rational.prototype.divide = function(other) {
	if (_integerIsZero(this.d) || _integerIsZero(other.n)) {
	    throwRuntimeError("/: division by zero", this, other);
	}
	return Rational.makeInstance(_integerMultiply(this.n, other.d),
				     _integerMultiply(this.d, other.n));
    };


    Rational.prototype.toExact = function() {
	return this;
    };

    Rational.prototype.toInexact = function() {
	return FloatPoint.makeInstance(this.toFixnum());
    };


    Rational.prototype.isExact = function() {
        return true;
    };

    Rational.prototype.isInexact = function() {
        return false;
    };


    Rational.prototype.toFixnum = function() {
	return _integerDivideToFixnum(this.n, this.d);
    };

    Rational.prototype.numerator = function() {
	return this.n;
    };

    Rational.prototype.denominator = function() {
	return this.d;
    };

    Rational.prototype.greaterThan = function(other) {
	return _integerGreaterThan(_integerMultiply(this.n, other.d),
				   _integerMultiply(this.d, other.n));
    };

    Rational.prototype.greaterThanOrEqual = function(other) {
	return _integerGreaterThanOrEqual(_integerMultiply(this.n, other.d),
					  _integerMultiply(this.d, other.n));
    };

    Rational.prototype.lessThan = function(other) {
	return _integerLessThan(_integerMultiply(this.n, other.d),
				_integerMultiply(this.d, other.n));
    };

    Rational.prototype.lessThanOrEqual = function(other) {
	return _integerLessThanOrEqual(_integerMultiply(this.n, other.d),
				       _integerMultiply(this.d, other.n));
    };

    Rational.prototype.integerSqrt = function() {
	var result = sqrt(this);
	if (isRational(result)) {
	    return toExact(floor(result));
	} else if (isReal(result)) {
	    return toExact(floor(result));
	} else {
	    return Complex.makeInstance(toExact(floor(realPart(result))),
					toExact(floor(imaginaryPart(result))));
	}
    };


    Rational.prototype.sqrt = function() {
	if (_integerGreaterThanOrEqual(this.n,  0)) {
	    var newN = sqrt(this.n);
	    var newD = sqrt(this.d);
	    if (equals(floor(newN), newN) &&
		equals(floor(newD), newD)) {
		return Rational.makeInstance(newN, newD);
	    } else {
		return FloatPoint.makeInstance(_integerDivideToFixnum(newN, newD));
	    }
	} else {
	    var newN = sqrt(negate(this.n));
	    var newD = sqrt(this.d);
	    if (equals(floor(newN), newN) &&
		equals(floor(newD), newD)) {
		return Complex.makeInstance(
		    0,
		    Rational.makeInstance(newN, newD));
	    } else {
		return Complex.makeInstance(
		    0,
		    FloatPoint.makeInstance(_integerDivideToFixnum(newN, newD)));
	    }
	}
    };

    Rational.prototype.abs = function() {
	return Rational.makeInstance(abs(this.n),
				     this.d);
    };


    Rational.prototype.floor = function() {
	var quotient = _integerQuotient(this.n, this.d);
	if (_integerLessThan(this.n, 0)) {
	    return subtract(quotient, 1);
	} else {
	    return quotient;
	}
    };


    Rational.prototype.ceiling = function() {
	var quotient = _integerQuotient(this.n, this.d);
	if (_integerLessThan(this.n, 0)) {
	    return quotient;
	} else {
	    return add(quotient, 1);
	}
    };

    Rational.prototype.conjugate = function() {
	return this;
    };

    Rational.prototype.magnitude = Rational.prototype.abs;

    Rational.prototype.log = function(){
	return FloatPoint.makeInstance(Math.log(this.n / this.d));
    };

    Rational.prototype.angle = function(){
	if (_integerIsZero(this.n))
	    return 0;
	if (_integerGreaterThan(this.n, 0))
	    return 0;
	else
	    return FloatPoint.pi;
    };

    Rational.prototype.tan = function(){
	return FloatPoint.makeInstance(Math.tan(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.atan = function(){
	return FloatPoint.makeInstance(Math.atan(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.cos = function(){
	return FloatPoint.makeInstance(Math.cos(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.sin = function(){
	return FloatPoint.makeInstance(Math.sin(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.expt = function(a){
	if (isExactInteger(a) && greaterThanOrEqual(a, 0)) {
	    return fastExpt(this, a);
	}
	return FloatPoint.makeInstance(Math.pow(_integerDivideToFixnum(this.n, this.d),
						_integerDivideToFixnum(a.n, a.d)));
    };

    Rational.prototype.exp = function(){
	return FloatPoint.makeInstance(Math.exp(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.acos = function(){
	return FloatPoint.makeInstance(Math.acos(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.asin = function(){
	return FloatPoint.makeInstance(Math.asin(_integerDivideToFixnum(this.n, this.d)));
    };

    Rational.prototype.imaginaryPart = function(){
	return 0;
    };

    Rational.prototype.realPart = function(){
	return this;
    };


    Rational.prototype.round = function() {
	// FIXME: not correct when values are bignums
	if (equals(this.d, 2)) {
	    // Round to even if it's a n/2
	    var v = _integerDivideToFixnum(this.n, this.d);
	    var fl = Math.floor(v);
	    var ce = Math.ceil(v);
	    if (_integerIsZero(fl % 2)) {
		return fl;
	    }
	    else {
		return ce;
	    }
	} else {
	    return Math.round(this.n / this.d);
	}
    };


    Rational.makeInstance = function(n, d) {
	if (n === undefined)
	    throwRuntimeError("n undefined", n, d);

	if (d === undefined) { d = 1; }

	if (_integerLessThan(d, 0)) {
	    n = negate(n);
	    d = negate(d);
	}

	var divisor = _integerGcd(abs(n), abs(d));
	n = _integerQuotient(n, divisor);
	d = _integerQuotient(d, divisor);

	// Optimization: if we can get around construction the rational
	// in favor of just returning n, do it:
	if (_integerIsOne(d) || _integerIsZero(n)) {
	    return n;
	}

	return new Rational(n, d);
    };



    // Floating Point numbers
    var FloatPoint = function(n) {
	this.n = n;
    };
    FloatPoint = FloatPoint;


    var NaN = new FloatPoint(Number.NaN);
    var inf = new FloatPoint(Number.POSITIVE_INFINITY);
    var neginf = new FloatPoint(Number.NEGATIVE_INFINITY);

    // We use these two constants to represent the floating-point coersion
    // of bignums that can't be represented with fidelity.
    var TOO_POSITIVE_TO_REPRESENT = new FloatPoint(Number.POSITIVE_INFINITY);
    var TOO_NEGATIVE_TO_REPRESENT = new FloatPoint(Number.NEGATIVE_INFINITY);

    // Negative zero is a distinguished value representing -0.0.
    // There should only be one instance for -0.0.
    var NEGATIVE_ZERO = new FloatPoint(-0.0);
    var INEXACT_ZERO = new FloatPoint(0.0);

    FloatPoint.pi = new FloatPoint(Math.PI);
    FloatPoint.e = new FloatPoint(Math.E);
    FloatPoint.nan = NaN;
    FloatPoint.inf = inf;
    FloatPoint.neginf = neginf;

    FloatPoint.makeInstance = function(n) {
	if (isNaN(n)) {
	    return FloatPoint.nan;
	} else if (n === Number.POSITIVE_INFINITY) {
	    return FloatPoint.inf;
	} else if (n === Number.NEGATIVE_INFINITY) {
	    return FloatPoint.neginf;
	} else if (n === 0) {
	    if ((1/n) === -Infinity) {
		return NEGATIVE_ZERO;
	    } else {
		return INEXACT_ZERO;
	    }
	}
	return new FloatPoint(n);
    };


    FloatPoint.prototype.isExact = function() {
	return false;
    };

    FloatPoint.prototype.isInexact = function() {
	return true;
    };


    FloatPoint.prototype.isFinite = function() {
	return (isFinite(this.n) ||
		this === TOO_POSITIVE_TO_REPRESENT ||
		this === TOO_NEGATIVE_TO_REPRESENT);
    };


    FloatPoint.prototype.toExact = function() {
	// The precision of ieee is about 16 decimal digits, which we use here.
	if (! isFinite(this.n) || isNaN(this.n)) {
	    throwRuntimeError("toExact: no exact representation for " + this, this);
	}

	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var intPart = parseInt(match[1]);
	    var fracPart = parseInt(match[2]);
	    var tenToDecimalPlaces = Math.pow(10, match[2].length);
	    return Rational.makeInstance(Math.round(this.n * tenToDecimalPlaces),
					 tenToDecimalPlaces);
	}
	else {
	    return this.n;
	}
    };

    FloatPoint.prototype.toInexact = function() {
	return this;
    };

    FloatPoint.prototype.isInexact = function() {
	return true;
    };


    FloatPoint.prototype.level = 2;


    FloatPoint.prototype.liftTo = function(target) {
	if (target.level === 3)
	    return new Complex(this, 0);
	return throwRuntimeError("invalid level of Number", this, target);
    };

    FloatPoint.prototype.toString = function() {
	if (isNaN(this.n))
	    return "+nan.0";
	if (this.n === Number.POSITIVE_INFINITY)
	    return "+inf.0";
	if (this.n === Number.NEGATIVE_INFINITY)
	    return "-inf.0";
	if (this === NEGATIVE_ZERO)
	    return "-0.0";
	var partialResult = this.n.toString();
	if (! partialResult.match('\\.')) {
	    return partialResult + ".0";
	} else {
	    return partialResult;
	}
    };


    FloatPoint.prototype.equals = function(other, aUnionFind) {
	return ((other instanceof FloatPoint) &&
		((this.n === other.n)));
    };



    FloatPoint.prototype.isRational = function() {
        return this.isFinite();
    };

    FloatPoint.prototype.isInteger = function() {
	return this.isFinite() && this.n === Math.floor(this.n);
    };

    FloatPoint.prototype.isReal = function() {
	return true;
    };


    // sign: Number -> {-1, 0, 1}
    var sign = function(n) {
	if (lessThan(n, 0)) {
	    return -1;
	} else if (greaterThan(n, 0)) {
	    return 1;
	} else if (n === NEGATIVE_ZERO) {
	    return -1;
	} else {
	    return 0;
	}
    };


    FloatPoint.prototype.add = function(other) {
	if (this.isFinite() && other.isFinite()) {
	    return FloatPoint.makeInstance(this.n + other.n);
	} else {
	    if (isNaN(this.n) || isNaN(other.n)) {
		return NaN;
	    } else if (this.isFinite() && ! other.isFinite()) {
		return other;
	    } else if (!this.isFinite() && other.isFinite()) {
		return this;
	    } else {
		return ((sign(this) * sign(other) === 1) ?
			this : NaN);
	    };
	}
    };

    FloatPoint.prototype.subtract = function(other) {
	if (this.isFinite() && other.isFinite()) {
	    return FloatPoint.makeInstance(this.n - other.n);
	} else if (isNaN(this.n) || isNaN(other.n)) {
	    return NaN;
	} else if (! this.isFinite() && ! other.isFinite()) {
	    if (sign(this) === sign(other)) {
		return NaN;
	    } else {
		return this;
	    }
	} else if (this.isFinite()) {
	    return multiply(other, -1);
	} else {  // other.isFinite()
	    return this;
	}
    };


    FloatPoint.prototype.negate = function() {
	return FloatPoint.makeInstance(-this.n);
    };

    FloatPoint.prototype.multiply = function(other) {
	return FloatPoint.makeInstance(this.n * other.n);
    };

    FloatPoint.prototype.divide = function(other) {
        return FloatPoint.makeInstance(this.n / other.n);
    };


    FloatPoint.prototype.toFixnum = function() {
	return this.n;
    };

    FloatPoint.prototype.numerator = function() {
	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var afterDecimal = parseInt(match[2]);
	    var factorToInt = Math.pow(10, match[2].length);
	    var extraFactor = _integerGcd(factorToInt, afterDecimal);
	    var multFactor = factorToInt / extraFactor;
	    return FloatPoint.makeInstance( Math.round(this.n * multFactor) );
	} else {
	    return this;
	}
    };

    FloatPoint.prototype.denominator = function() {
	var stringRep = this.n.toString();
	var match = stringRep.match(/^(.*)\.(.*)$/);
	if (match) {
	    var afterDecimal = parseInt(match[2]);
	    var factorToInt = Math.pow(10, match[2].length);
	    var extraFactor = _integerGcd(factorToInt, afterDecimal);
	    return FloatPoint.makeInstance( Math.round(factorToInt/extraFactor) );
	} else {
	    return FloatPoint.makeInstance(1);
	}
    };


    FloatPoint.prototype.floor = function() {
	return FloatPoint.makeInstance(Math.floor(this.n));
    };

    FloatPoint.prototype.ceiling = function() {
	return FloatPoint.makeInstance(Math.ceil(this.n));
    };


    FloatPoint.prototype.greaterThan = function(other) {
	return this.n > other.n;
    };

    FloatPoint.prototype.greaterThanOrEqual = function(other) {
	return this.n >= other.n;
    };

    FloatPoint.prototype.lessThan = function(other) {
	return this.n < other.n;
    };

    FloatPoint.prototype.lessThanOrEqual = function(other) {
	return this.n <= other.n;
    };


    FloatPoint.prototype.integerSqrt = function() {
	if (this === NEGATIVE_ZERO) { return this; }
	if (isInteger(this)) {
	    if(this.n >= 0) {
	        return FloatPoint.makeInstance(Math.floor(Math.sqrt(this.n)));
	    } else {
	        return Complex.makeInstance(
		    INEXACT_ZERO,
		    FloatPoint.makeInstance(Math.floor(Math.sqrt(-this.n))));
	    }
	} else {
	    throwRuntimeError("integerSqrt: can only be applied to an integer", this);
	}
    };

    FloatPoint.prototype.sqrt = function() {
	if (this.n < 0) {
	    var result = Complex.makeInstance(
		0,
		FloatPoint.makeInstance(Math.sqrt(-this.n)));
	    return result;
	} else {
	    return FloatPoint.makeInstance(Math.sqrt(this.n));
	}
    };

    FloatPoint.prototype.abs = function() {
	return FloatPoint.makeInstance(Math.abs(this.n));
    };



    FloatPoint.prototype.log = function(){
	if (this.n < 0)
	    return (new Complex(this, 0)).log();
	else
	    return FloatPoint.makeInstance(Math.log(this.n));
    };

    FloatPoint.prototype.angle = function(){
	if (0 === this.n)
	    return 0;
	if (this.n > 0)
	    return 0;
	else
	    return FloatPoint.pi;
    };

    FloatPoint.prototype.tan = function(){
	return FloatPoint.makeInstance(Math.tan(this.n));
    };

    FloatPoint.prototype.atan = function(){
	return FloatPoint.makeInstance(Math.atan(this.n));
    };

    FloatPoint.prototype.cos = function(){
	return FloatPoint.makeInstance(Math.cos(this.n));
    };

    FloatPoint.prototype.sin = function(){
	return FloatPoint.makeInstance(Math.sin(this.n));
    };

    FloatPoint.prototype.expt = function(a){
	if (this.n === 1) {
	    if (a.isFinite()) {
		return this;
	    } else if (isNaN(a.n)){
		return this;
	    } else {
		return this;
	    }
	} else {
	    return FloatPoint.makeInstance(Math.pow(this.n, a.n));
	}
    };

    FloatPoint.prototype.exp = function(){
	return FloatPoint.makeInstance(Math.exp(this.n));
    };

    FloatPoint.prototype.acos = function(){
	return FloatPoint.makeInstance(Math.acos(this.n));
    };

    FloatPoint.prototype.asin = function(){
	return FloatPoint.makeInstance(Math.asin(this.n));
    };

    FloatPoint.prototype.imaginaryPart = function(){
	return 0;
    };

    FloatPoint.prototype.realPart = function(){
	return this;
    };


    FloatPoint.prototype.round = function(){
	if (isFinite(this.n)) {
	    if (this === NEGATIVE_ZERO) {
		return this;
	    }
	    if (Math.abs(Math.floor(this.n) - this.n) === 0.5) {
		if (Math.floor(this.n) % 2 === 0)
		    return FloatPoint.makeInstance(Math.floor(this.n));
		return FloatPoint.makeInstance(Math.ceil(this.n));
	    } else {
		return FloatPoint.makeInstance(Math.round(this.n));
	    }
	} else {
	    return this;
	}
    };


    FloatPoint.prototype.conjugate = function() {
	return this;
    };

    FloatPoint.prototype.magnitude = FloatPoint.prototype.abs;



    //////////////////////////////////////////////////////////////////////
    // Complex numbers
    //////////////////////////////////////////////////////////////////////

    var Complex = function(r, i){
	this.r = r;
	this.i = i;
    };

    // Constructs a complex number from two basic number r and i.  r and i can
    // either be plt.type.Rational or plt.type.FloatPoint.
    Complex.makeInstance = function(r, i){
	if (i === undefined) { i = 0; }
	if (isExact(i) && isInteger(i) && _integerIsZero(i)) {
	    return r;
	}
	if (isInexact(r) || isInexact(i)) {
	    r = toInexact(r);
	    i = toInexact(i);
	}
	return new Complex(r, i);
    };

    Complex.prototype.toString = function() {
	var realPart = this.r.toString(), imagPart = this.i.toString();
	if (imagPart[0] === '-' || imagPart[0] === '+') {
	    return realPart + imagPart + 'i';
	} else {
	    return realPart + "+" + imagPart + 'i';
	}
    };


    Complex.prototype.isFinite = function() {
	return isSchemeNumberFinite(this.r) && isSchemeNumberFinite(this.i);
    };


    Complex.prototype.isRational = function() {
	return isRational(this.r) && eqv(this.i, 0);
    };

    Complex.prototype.isInteger = function() {
	return (isInteger(this.r) &&
		eqv(this.i, 0));
    };

    Complex.prototype.toExact = function() {
	return Complex.makeInstance( toExact(this.r), toExact(this.i) );
    };

    Complex.prototype.toInexact = function() {
	return Complex.makeInstance(toInexact(this.r),
				    toInexact(this.i));
    };


    Complex.prototype.isExact = function() {
        return isExact(this.r) && isExact(this.i);
    };


    Complex.prototype.isInexact = function() {
	return isInexact(this.r) || isInexact(this.i);
    };


    Complex.prototype.level = 3;


    Complex.prototype.liftTo = function(target){
	throwRuntimeError("Don't know how to lift Complex number", this, target);
    };

    Complex.prototype.equals = function(other) {
	var result = ((other instanceof Complex) &&
		      (equals(this.r, other.r)) &&
		      (equals(this.i, other.i)));
	return result;
    };



    Complex.prototype.greaterThan = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError(">: expects argument of type real number", this, other);
	}
	return greaterThan(this.r, other.r);
    };

    Complex.prototype.greaterThanOrEqual = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError(">=: expects argument of type real number", this, other);
	}
	return greaterThanOrEqual(this.r, other.r);
    };

    Complex.prototype.lessThan = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError("<: expects argument of type real number", this, other);
	}
	return lessThan(this.r, other.r);
    };

    Complex.prototype.lessThanOrEqual = function(other) {
	if (! this.isReal() || ! other.isReal()) {
	    throwRuntimeError("<=: expects argument of type real number", this, other);
	}
	return lessThanOrEqual(this.r, other.r);
    };


    Complex.prototype.abs = function(){
	if (!equals(this.i, 0).valueOf())
	    throwRuntimeError("abs: expects argument of type real number", this);
	return abs(this.r);
    };

    Complex.prototype.toFixnum = function(){
	if (!equals(this.i, 0).valueOf())
	    throwRuntimeError("toFixnum: expects argument of type real number", this);
	return toFixnum(this.r);
    };

    Complex.prototype.numerator = function() {
	if (!this.isReal())
	    throwRuntimeError("numerator: can only be applied to real number", this);
	return numerator(this.n);
    };


    Complex.prototype.denominator = function() {
	if (!this.isReal())
	    throwRuntimeError("floor: can only be applied to real number", this);
	return denominator(this.n);
    };

    Complex.prototype.add = function(other){
	return Complex.makeInstance(
	    add(this.r, other.r),
	    add(this.i, other.i));
    };

    Complex.prototype.subtract = function(other){
	return Complex.makeInstance(
	    subtract(this.r, other.r),
	    subtract(this.i, other.i));
    };

    Complex.prototype.negate = function() {
	return Complex.makeInstance(negate(this.r),
				    negate(this.i));
    };


    Complex.prototype.multiply = function(other){
	// If the other value is real, just do primitive division
	if (other.isReal()) {
	    return Complex.makeInstance(
		multiply(this.r, other.r),
		multiply(this.i, other.r));
	}
	var r = subtract(
	    multiply(this.r, other.r),
	    multiply(this.i, other.i));
	var i = add(
	    multiply(this.r, other.i),
	    multiply(this.i, other.r));
	return Complex.makeInstance(r, i);
    };





    Complex.prototype.divide = function(other){
	var a, b, c, d, r, x, y;
	// If the other value is real, just do primitive division
	if (other.isReal()) {
	    return Complex.makeInstance(
		divide(this.r, other.r),
		divide(this.i, other.r));
	}

	if (this.isInexact() || other.isInexact()) {
	    // http://portal.acm.org/citation.cfm?id=1039814
	    // We currently use Smith's method, though we should
	    // probably switch over to Priest's method.
	    a = this.r;
	    b = this.i;
	    c = other.r;
	    d = other.i;
	    if (lessThanOrEqual(abs(d), abs(c))) {
		r = divide(d, c);
		x = divide(add(a, multiply(b, r)),
			   add(c, multiply(d, r)));
		y = divide(subtract(b, multiply(a, r)),
			   add(c, multiply(d, r)));
	    } else {
		r = divide(c, d);
		x = divide(add(multiply(a, r), b),
			   add(multiply(c, r), d));
		y = divide(subtract(multiply(b, r), a),
			   add(multiply(c, r), d));
	    }
	    return Complex.makeInstance(x, y);
	} else {
	    var con = conjugate(other);
	    var up = multiply(this, con);

	    // Down is guaranteed to be real by this point.
	    var down = realPart(multiply(other, con));

	    var result = Complex.makeInstance(
		divide(realPart(up), down),
		divide(imaginaryPart(up), down));
	    return result;
	}
    };

    Complex.prototype.conjugate = function(){
	var result = Complex.makeInstance(
	    this.r,
	    subtract(0, this.i));

	return result;
    };

    Complex.prototype.magnitude = function(){
	var sum = add(
	    multiply(this.r, this.r),
	    multiply(this.i, this.i));
	return sqrt(sum);
    };

    Complex.prototype.isReal = function(){
	return eqv(this.i, 0);
    };

    Complex.prototype.integerSqrt = function() {
	if (isInteger(this)) {
	    return integerSqrt(this.r);
	} else {
	    throwRuntimeError("integerSqrt: can only be applied to an integer", this);
	}
    };

    Complex.prototype.sqrt = function(){
	if (this.isReal())
	    return sqrt(this.r);
	// http://en.wikipedia.org/wiki/Square_root#Square_roots_of_negative_and_complex_numbers
	var r_plus_x = add(this.magnitude(), this.r);

	var r = sqrt(halve(r_plus_x));

	var i = divide(this.i, sqrt(multiply(r_plus_x, 2)));


	return Complex.makeInstance(r, i);
    };

    Complex.prototype.log = function(){
	var m = this.magnitude();
	var theta = this.angle();
	var result = add(
	    log(m),
	    timesI(theta));
	return result;
    };

    Complex.prototype.angle = function(){
	if (this.isReal()) {
	    return angle(this.r);
	}
	if (equals(0, this.r)) {
	    var tmp = halve(FloatPoint.pi);
	    return greaterThan(this.i, 0) ?
		tmp : negate(tmp);
	} else {
	    var tmp = atan(divide(abs(this.i), abs(this.r)));
	    if (greaterThan(this.r, 0)) {
		return greaterThan(this.i, 0) ?
		    tmp : negate(tmp);
	    } else {
		return greaterThan(this.i, 0) ?
		    subtract(FloatPoint.pi, tmp) : subtract(tmp, FloatPoint.pi);
	    }
	}
    };

    var plusI = Complex.makeInstance(0, 1);
    var minusI = Complex.makeInstance(0, -1);


    Complex.prototype.tan = function() {
	return divide(this.sin(), this.cos());
    };

    Complex.prototype.atan = function(){
	if (equals(this, plusI) ||
	    equals(this, minusI)) {
	    return neginf;
	}
	return multiply(
	    plusI,
	    multiply(
		FloatPoint.makeInstance(0.5),
		log(divide(
		    add(plusI, this),
		    add(
			plusI,
			subtract(0, this))))));
    };

    Complex.prototype.cos = function(){
	if (this.isReal())
	    return cos(this.r);
	var iz = timesI(this);
	var iz_negate = negate(iz);

	return halve(add(exp(iz), exp(iz_negate)));
    };

    Complex.prototype.sin = function(){
	if (this.isReal())
	    return sin(this.r);
	var iz = timesI(this);
	var iz_negate = negate(iz);
	var z2 = Complex.makeInstance(0, 2);
	var exp_negate = subtract(exp(iz), exp(iz_negate));
	var result = divide(exp_negate, z2);
	return result;
    };


    Complex.prototype.expt = function(y){
	if (isExactInteger(y) && greaterThanOrEqual(y, 0)) {
	    return fastExpt(this, y);
	}
	var expo = multiply(y, this.log());
	return exp(expo);
    };

    Complex.prototype.exp = function(){
	var r = exp(this.r);
	var cos_a = cos(this.i);
	var sin_a = sin(this.i);

	return multiply(
	    r,
	    add(cos_a, timesI(sin_a)));
    };

    Complex.prototype.acos = function(){
	if (this.isReal())
	    return acos(this.r);
	var pi_half = halve(FloatPoint.pi);
	var iz = timesI(this);
	var root = sqrt(subtract(1, sqr(this)));
	var l = timesI(log(add(iz, root)));
	return add(pi_half, l);
    };

    Complex.prototype.asin = function(){
	if (this.isReal())
	    return asin(this.r);

	var oneNegateThisSq =
	    subtract(1, sqr(this));
	var sqrtOneNegateThisSq = sqrt(oneNegateThisSq);
	return multiply(2, atan(divide(this,
				       add(1, sqrtOneNegateThisSq))));
    };

    Complex.prototype.ceiling = function(){
	if (!this.isReal())
	    throwRuntimeError("ceiling: can only be applied to real number", this);
	return ceiling(this.r);
    };

    Complex.prototype.floor = function(){
	if (!this.isReal())
	    throwRuntimeError("floor: can only be applied to real number", this);
	return floor(this.r);
    };

    Complex.prototype.imaginaryPart = function(){
	return this.i;
    };

    Complex.prototype.realPart = function(){
	return this.r;
    };

    Complex.prototype.round = function(){
	if (!this.isReal())
	    throwRuntimeError("round: can only be applied to real number", this);
	return round(this.r);
    };



    var rationalRegexp = new RegExp("^([+-]?\\d+)/(\\d+)$");
    var complexRegexp = new RegExp("^([+-]?[\\d\\w/\\.]*)([+-])([\\d\\w/\\.]*)i$");
    var digitRegexp = new RegExp("^[+-]?\\d+$");
    var flonumRegexp = new RegExp("^([+-]?\\d*)\\.(\\d*)$");
    var scientificPattern = new RegExp("^([+-]?\\d*\\.?\\d*)[Ee](\\+?\\d+)$");

    // fromString: string -> (scheme-number | false)
    var fromString = function(x) {
	var aMatch = x.match(rationalRegexp);
	if (aMatch) {
	    return Rational.makeInstance(fromString(aMatch[1]),
					 fromString(aMatch[2]));
	}

	var cMatch = x.match(complexRegexp);
	if (cMatch) {
	    return Complex.makeInstance(fromString(cMatch[1] || "0"),
					fromString(cMatch[2] + (cMatch[3] || "1")));
	}

	// Floating point tests
	if (x === '+nan.0' || x === '-nan.0')
	    return FloatPoint.nan;
	if (x === '+inf.0')
	    return FloatPoint.inf;
	if (x === '-inf.0')
	    return FloatPoint.neginf;
	if (x === "-0.0") {
	    return NEGATIVE_ZERO;
	}
	if (x.match(flonumRegexp) ||  x.match(scientificPattern)) {
	    return FloatPoint.makeInstance(Number(x));
	}

	// Finally, integer tests.
	if (x.match(digitRegexp)) {
	    var n = Number(x);
	    if (isOverflow(n)) {
		return makeBignum(x);
	    } else {
		return n;
	    }
	} else {
	    return false;
	}
    };





    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // The code below comes from Tom Wu's BigInteger implementation:

    // Copyright (c) 2005  Tom Wu
    // All Rights Reserved.
    // See "LICENSE" for details.

    // Basic JavaScript BN library - subset useful for RSA encryption.

    // Bits per digit
    var dbits;

    // JavaScript engine analysis
    var canary = 0xdeadbeefcafe;
    var j_lm = ((canary&0xffffff)==0xefcafe);

    // (public) Constructor
    function BigInteger(a,b,c) {
	if(a != null)
	    if("number" == typeof a) this.fromNumber(a,b,c);
	else if(b == null && "string" != typeof a) this.fromString(a,256);
	else this.fromString(a,b);
    }

    // return new, unset BigInteger
    function nbi() { return new BigInteger(null); }

    // am: Compute w_j += (x*this_i), propagate carries,
    // c is initial carry, returns final carry.
    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
    // We need to select the fastest one that works in this environment.

    // am1: use a single mult and divide to get the high bits,
    // max digit bits should be 26 because
    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
    function am1(i,x,w,j,c,n) {
	while(--n >= 0) {
	    var v = x*this[i++]+w[j]+c;
	    c = Math.floor(v/0x4000000);
	    w[j++] = v&0x3ffffff;
	}
	return c;
    }
    // am2 avoids a big mult-and-extract completely.
    // Max digit bits should be <= 30 because we do bitwise ops
    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
    function am2(i,x,w,j,c,n) {
	var xl = x&0x7fff, xh = x>>15;
	while(--n >= 0) {
	    var l = this[i]&0x7fff;
	    var h = this[i++]>>15;
	    var m = xh*l+h*xl;
	    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
	    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
	    w[j++] = l&0x3fffffff;
	}
	return c;
    }
    // Alternately, set max digit bits to 28 since some
    // browsers slow down when dealing with 32-bit numbers.
    function am3(i,x,w,j,c,n) {
	var xl = x&0x3fff, xh = x>>14;
	while(--n >= 0) {
	    var l = this[i]&0x3fff;
	    var h = this[i++]>>14;
	    var m = xh*l+h*xl;
	    l = xl*l+((m&0x3fff)<<14)+w[j]+c;
	    c = (l>>28)+(m>>14)+xh*h;
	    w[j++] = l&0xfffffff;
	}
	return c;
    }
    if(j_lm && (typeof(navigator) !== 'undefined' && navigator.appName == "Microsoft Internet Explorer")) {
	BigInteger.prototype.am = am2;
	dbits = 30;
    }
    else if(j_lm && (typeof(navigator) !== 'undefined' && navigator.appName != "Netscape")) {
	BigInteger.prototype.am = am1;
	dbits = 26;
    }
    else { // Mozilla/Netscape seems to prefer am3
	BigInteger.prototype.am = am3;
	dbits = 28;
    }

    BigInteger.prototype.DB = dbits;
    BigInteger.prototype.DM = ((1<<dbits)-1);
    BigInteger.prototype.DV = (1<<dbits);

    var BI_FP = 52;
    BigInteger.prototype.FV = Math.pow(2,BI_FP);
    BigInteger.prototype.F1 = BI_FP-dbits;
    BigInteger.prototype.F2 = 2*dbits-BI_FP;

    // Digit conversions
    var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
    var BI_RC = [];
    var rr,vv;
    rr = "0".charCodeAt(0);
    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
    rr = "a".charCodeAt(0);
    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
    rr = "A".charCodeAt(0);
    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

    function int2char(n) { return BI_RM.charAt(n); }
    function intAt(s,i) {
	var c = BI_RC[s.charCodeAt(i)];
	return (c==null)?-1:c;
    }

    // (protected) copy this to r
    function bnpCopyTo(r) {
	for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
	r.t = this.t;
	r.s = this.s;
    }

    // (protected) set from integer value x, -DV <= x < DV
    function bnpFromInt(x) {
	this.t = 1;
	this.s = (x<0)?-1:0;
	if(x > 0) this[0] = x;
	else if(x < -1) this[0] = x+DV;
	else this.t = 0;
    }

    // return bigint initialized to value
    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

    // (protected) set from string and radix
    function bnpFromString(s,b) {
	var k;
	if(b == 16) k = 4;
	else if(b == 8) k = 3;
	else if(b == 256) k = 8; // byte array
	else if(b == 2) k = 1;
	else if(b == 32) k = 5;
	else if(b == 4) k = 2;
	else { this.fromRadix(s,b); return; }
	this.t = 0;
	this.s = 0;
	var i = s.length, mi = false, sh = 0;
	while(--i >= 0) {
	    var x = (k==8)?s[i]&0xff:intAt(s,i);
	    if(x < 0) {
		if(s.charAt(i) == "-") mi = true;
		continue;
	    }
	    mi = false;
	    if(sh == 0)
		this[this.t++] = x;
	    else if(sh+k > this.DB) {
		this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
		this[this.t++] = (x>>(this.DB-sh));
	    }
	    else
		this[this.t-1] |= x<<sh;
	    sh += k;
	    if(sh >= this.DB) sh -= this.DB;
	}
	if(k == 8 && (s[0]&0x80) != 0) {
	    this.s = -1;
	    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
	}
	this.clamp();
	if(mi) BigInteger.ZERO.subTo(this,this);
    }

    // (protected) clamp off excess high words
    function bnpClamp() {
	var c = this.s&this.DM;
	while(this.t > 0 && this[this.t-1] == c) --this.t;
    }

    // (public) return string representation in given radix
    function bnToString(b) {
	if(this.s < 0) return "-"+this.negate().toString(b);
	var k;
	if(b == 16) k = 4;
	else if(b == 8) k = 3;
	else if(b == 2) k = 1;
	else if(b == 32) k = 5;
	else if(b == 4) k = 2;
	else return this.toRadix(b);
	var km = (1<<k)-1, d, m = false, r = [], i = this.t;
	var p = this.DB-(i*this.DB)%k;
	if(i-- > 0) {
	    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r.push(int2char(d)); }
	    while(i >= 0) {
		if(p < k) {
		    d = (this[i]&((1<<p)-1))<<(k-p);
		    d |= this[--i]>>(p+=this.DB-k);
		}
		else {
		    d = (this[i]>>(p-=k))&km;
		    if(p <= 0) { p += this.DB; --i; }
		}
		if(d > 0) m = true;
		if(m) r.push(int2char(d));
	    }
	}
	return m?r.join(""):"0";
    }

    // (public) -this
    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

    // (public) |this|
    function bnAbs() { return (this.s<0)?this.negate():this; }

    // (public) return + if this > a, - if this < a, 0 if equal
    function bnCompareTo(a) {
	var r = this.s-a.s;
	if(r != 0) return r;
	var i = this.t;
	if ( this.s < 0 ) {
		r = a.t - i;
	}
	else {
		r = i - a.t;
	}
	if(r != 0) return r;
	while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
	return 0;
    }

    // returns bit length of the integer x
    function nbits(x) {
	var r = 1, t;
	if((t=x>>>16) != 0) { x = t; r += 16; }
	if((t=x>>8) != 0) { x = t; r += 8; }
	if((t=x>>4) != 0) { x = t; r += 4; }
	if((t=x>>2) != 0) { x = t; r += 2; }
	if((t=x>>1) != 0) { x = t; r += 1; }
	return r;
    }

    // (public) return the number of bits in "this"
    function bnBitLength() {
	if(this.t <= 0) return 0;
	return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
    }

    // (protected) r = this << n*DB
    function bnpDLShiftTo(n,r) {
	var i;
	for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
	for(i = n-1; i >= 0; --i) r[i] = 0;
	r.t = this.t+n;
	r.s = this.s;
    }

    // (protected) r = this >> n*DB
    function bnpDRShiftTo(n,r) {
	for(var i = n; i < this.t; ++i) r[i-n] = this[i];
	r.t = Math.max(this.t-n,0);
	r.s = this.s;
    }

    // (protected) r = this << n
    function bnpLShiftTo(n,r) {
	var bs = n%this.DB;
	var cbs = this.DB-bs;
	var bm = (1<<cbs)-1;
	var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
	for(i = this.t-1; i >= 0; --i) {
	    r[i+ds+1] = (this[i]>>cbs)|c;
	    c = (this[i]&bm)<<bs;
	}
	for(i = ds-1; i >= 0; --i) r[i] = 0;
	r[ds] = c;
	r.t = this.t+ds+1;
	r.s = this.s;
	r.clamp();
    }

    // (protected) r = this >> n
    function bnpRShiftTo(n,r) {
	r.s = this.s;
	var ds = Math.floor(n/this.DB);
	if(ds >= this.t) { r.t = 0; return; }
	var bs = n%this.DB;
	var cbs = this.DB-bs;
	var bm = (1<<bs)-1;
	r[0] = this[ds]>>bs;
	for(var i = ds+1; i < this.t; ++i) {
	    r[i-ds-1] |= (this[i]&bm)<<cbs;
	    r[i-ds] = this[i]>>bs;
	}
	if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
	r.t = this.t-ds;
	r.clamp();
    }

    // (protected) r = this - a
    function bnpSubTo(a,r) {
	var i = 0, c = 0, m = Math.min(a.t,this.t);
	while(i < m) {
	    c += this[i]-a[i];
	    r[i++] = c&this.DM;
	    c >>= this.DB;
	}
	if(a.t < this.t) {
	    c -= a.s;
	    while(i < this.t) {
		c += this[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += this.s;
	}
	else {
	    c += this.s;
	    while(i < a.t) {
		c -= a[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c -= a.s;
	}
	r.s = (c<0)?-1:0;
	if(c < -1) r[i++] = this.DV+c;
	else if(c > 0) r[i++] = c;
	r.t = i;
	r.clamp();
    }

    // (protected) r = this * a, r != this,a (HAC 14.12)
    // "this" should be the larger one if appropriate.
    function bnpMultiplyTo(a,r) {
	var x = this.abs(), y = a.abs();
	var i = x.t;
	r.t = i+y.t;
	while(--i >= 0) r[i] = 0;
	for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
	r.s = 0;
	r.clamp();
	if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
    }

    // (protected) r = this^2, r != this (HAC 14.16)
    function bnpSquareTo(r) {
	var x = this.abs();
	var i = r.t = 2*x.t;
	while(--i >= 0) r[i] = 0;
	for(i = 0; i < x.t-1; ++i) {
	    var c = x.am(i,x[i],r,2*i,0,1);
	    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
		r[i+x.t] -= x.DV;
		r[i+x.t+1] = 1;
	    }
	}
	if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
	r.s = 0;
	r.clamp();
    }


    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
    // r != q, this != m.  q or r may be null.
    function bnpDivRemTo(m,q,r) {
	var pm = m.abs();
	if(pm.t <= 0) return;
	var pt = this.abs();
	if(pt.t < pm.t) {
	    if(q != null) q.fromInt(0);
	    if(r != null) this.copyTo(r);
	    return;
	}
	if(r == null) r = nbi();
	var y = nbi(), ts = this.s, ms = m.s;
	var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
	if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
	else { pm.copyTo(y); pt.copyTo(r); }
	var ys = y.t;
	var y0 = y[ys-1];
	if(y0 == 0) return;
	var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
	var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
	var i = r.t, j = i-ys, t = (q==null)?nbi():q;
	y.dlShiftTo(j,t);
	if(r.compareTo(t) >= 0) {
	    r[r.t++] = 1;
	    r.subTo(t,r);
	}
	BigInteger.ONE.dlShiftTo(ys,t);
	t.subTo(y,y);	// "negative" y so we can replace sub with am later
	while(y.t < ys) y[y.t++] = 0;
	while(--j >= 0) {
	    // Estimate quotient digit
	    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
	    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
		y.dlShiftTo(j,t);
		r.subTo(t,r);
		while(r[i] < --qd) r.subTo(t,r);
	    }
	}
	if(q != null) {
	    r.drShiftTo(ys,q);
	    if(ts != ms) BigInteger.ZERO.subTo(q,q);
	}
	r.t = ys;
	r.clamp();
	if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
	if(ts < 0) BigInteger.ZERO.subTo(r,r);
    }

    // (public) this mod a
    function bnMod(a) {
	var r = nbi();
	this.abs().divRemTo(a,null,r);
	if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
	return r;
    }

    // Modular reduction using "classic" algorithm
    function Classic(m) { this.m = m; }
    function cConvert(x) {
	if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
	else return x;
    }
    function cRevert(x) { return x; }
    function cReduce(x) { x.divRemTo(this.m,null,x); }
    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    Classic.prototype.convert = cConvert;
    Classic.prototype.revert = cRevert;
    Classic.prototype.reduce = cReduce;
    Classic.prototype.mulTo = cMulTo;
    Classic.prototype.sqrTo = cSqrTo;

    // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
    // justification:
    //         xy == 1 (mod m)
    //         xy =  1+km
    //   xy(2-xy) = (1+km)(1-km)
    // x[y(2-xy)] = 1-k^2m^2
    // x[y(2-xy)] == 1 (mod m^2)
    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
    // JS multiply "overflows" differently from C/C++, so care is needed here.
    function bnpInvDigit() {
	if(this.t < 1) return 0;
	var x = this[0];
	if((x&1) == 0) return 0;
	var y = x&3;		// y == 1/x mod 2^2
	y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
	y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
	y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
	// last step - calculate inverse mod DV directly;
	// assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
	y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
	// we really want the negative inverse, and -DV < y < DV
	return (y>0)?this.DV-y:-y;
    }

    // Montgomery reduction
    function Montgomery(m) {
	this.m = m;
	this.mp = m.invDigit();
	this.mpl = this.mp&0x7fff;
	this.mph = this.mp>>15;
	this.um = (1<<(m.DB-15))-1;
	this.mt2 = 2*m.t;
    }

    // xR mod m
    function montConvert(x) {
	var r = nbi();
	x.abs().dlShiftTo(this.m.t,r);
	r.divRemTo(this.m,null,r);
	if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
	return r;
    }

    // x/R mod m
    function montRevert(x) {
	var r = nbi();
	x.copyTo(r);
	this.reduce(r);
	return r;
    }

    // x = x/R mod m (HAC 14.32)
    function montReduce(x) {
	while(x.t <= this.mt2)	// pad x so am has enough room later
	    x[x.t++] = 0;
	for(var i = 0; i < this.m.t; ++i) {
	    // faster way of calculating u0 = x[i]*mp mod DV
	    var j = x[i]&0x7fff;
	    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
	    // use am to combine the multiply-shift-add into one call
	    j = i+this.m.t;
	    x[j] += this.m.am(0,u0,x,i,0,this.m.t);
	    // propagate carry
	    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
	}
	x.clamp();
	x.drShiftTo(this.m.t,x);
	if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
    }

    // r = "x^2/R mod m"; x != r
    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    // r = "xy/R mod m"; x,y != r
    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

    Montgomery.prototype.convert = montConvert;
    Montgomery.prototype.revert = montRevert;
    Montgomery.prototype.reduce = montReduce;
    Montgomery.prototype.mulTo = montMulTo;
    Montgomery.prototype.sqrTo = montSqrTo;

    // (protected) true iff this is even
    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

    // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
    function bnpExp(e,z) {
	    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
	    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
	    g.copyTo(r);
	    while(--i >= 0) {
	        z.sqrTo(r,r2);
	        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
	        else { var t = r; r = r2; r2 = t; }
	    }
	    return z.revert(r);
    }

    // (public) this^e % m, 0 <= e < 2^32
    function bnModPowInt(e,m) {
	var z;
	if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
	return this.exp(e,z);
    }

    // protected
    BigInteger.prototype.copyTo = bnpCopyTo;
    BigInteger.prototype.fromInt = bnpFromInt;
    BigInteger.prototype.fromString = bnpFromString;
    BigInteger.prototype.clamp = bnpClamp;
    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
    BigInteger.prototype.drShiftTo = bnpDRShiftTo;
    BigInteger.prototype.lShiftTo = bnpLShiftTo;
    BigInteger.prototype.rShiftTo = bnpRShiftTo;
    BigInteger.prototype.subTo = bnpSubTo;
    BigInteger.prototype.multiplyTo = bnpMultiplyTo;
    BigInteger.prototype.squareTo = bnpSquareTo;
    BigInteger.prototype.divRemTo = bnpDivRemTo;
    BigInteger.prototype.invDigit = bnpInvDigit;
    BigInteger.prototype.isEven = bnpIsEven;
    BigInteger.prototype.exp = bnpExp;

    // public
    BigInteger.prototype.toString = bnToString;
    BigInteger.prototype.negate = bnNegate;
    BigInteger.prototype.abs = bnAbs;
    BigInteger.prototype.compareTo = bnCompareTo;
    BigInteger.prototype.bitLength = bnBitLength;
    BigInteger.prototype.mod = bnMod;
    BigInteger.prototype.modPowInt = bnModPowInt;

    // "constants"
    BigInteger.ZERO = nbv(0);
    BigInteger.ONE = nbv(1);

    // Copyright (c) 2005-2009  Tom Wu
    // All Rights Reserved.
    // See "LICENSE" for details.

    // Extended JavaScript BN functions, required for RSA private ops.

    // Version 1.1: new BigInteger("0", 10) returns "proper" zero

    // (public)
    function bnClone() { var r = nbi(); this.copyTo(r); return r; }

    // (public) return value as integer
    function bnIntValue() {
	if(this.s < 0) {
	    if(this.t == 1) return this[0]-this.DV;
	    else if(this.t == 0) return -1;
	}
	else if(this.t == 1) return this[0];
	else if(this.t == 0) return 0;
	// assumes 16 < DB < 32
	return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
    }

    // (public) return value as byte
    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }

    // (public) return value as short (assumes DB>=16)
    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }

    // (protected) return x s.t. r^x < DV
    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

    // (public) 0 if this == 0, 1 if this > 0
    function bnSigNum() {
	if(this.s < 0) return -1;
	else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
	else return 1;
    }

    // (protected) convert to radix string
    function bnpToRadix(b) {
	if(b == null) b = 10;
	if(this.signum() == 0 || b < 2 || b > 36) return "0";
	var cs = this.chunkSize(b);
	var a = Math.pow(b,cs);
	var d = nbv(a), y = nbi(), z = nbi(), r = "";
	this.divRemTo(d,y,z);
	while(y.signum() > 0) {
	    r = (a+z.intValue()).toString(b).substr(1) + r;
	    y.divRemTo(d,y,z);
	}
	return z.intValue().toString(b) + r;
    }

    // (protected) convert from radix string
    function bnpFromRadix(s,b) {
	this.fromInt(0);
	if(b == null) b = 10;
	var cs = this.chunkSize(b);
	var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
	for(var i = 0; i < s.length; ++i) {
	    var x = intAt(s,i);
	    if(x < 0) {
		if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
		continue;
	    }
	    w = b*w+x;
	    if(++j >= cs) {
		this.dMultiply(d);
		this.dAddOffset(w,0);
		j = 0;
		w = 0;
	    }
	}
	if(j > 0) {
	    this.dMultiply(Math.pow(b,j));
	    this.dAddOffset(w,0);
	}
	if(mi) BigInteger.ZERO.subTo(this,this);
    }

    // (protected) alternate constructor
    function bnpFromNumber(a,b,c) {
	if("number" == typeof b) {
	    // new BigInteger(int,int,RNG)
	    if(a < 2) this.fromInt(1);
	    else {
		this.fromNumber(a,c);
		if(!this.testBit(a-1))	// force MSB set
		    this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);
		if(this.isEven()) this.dAddOffset(1,0); // force odd
		while(!this.isProbablePrime(b)) {
		    this.dAddOffset(2,0);
		    if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);
		}
	    }
	}
	else {
	    // new BigInteger(int,RNG)
	    var x = [], t = a&7;
	    x.length = (a>>3)+1;
	    b.nextBytes(x);
	    if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;
	    this.fromString(x,256);
	}
    }

    // (public) convert to bigendian byte array
    function bnToByteArray() {
	var i = this.t, r = [];
	r[0] = this.s;
	var p = this.DB-(i*this.DB)%8, d, k = 0;
	if(i-- > 0) {
	    if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)
		r[k++] = d|(this.s<<(this.DB-p));
	    while(i >= 0) {
		if(p < 8) {
		    d = (this[i]&((1<<p)-1))<<(8-p);
		    d |= this[--i]>>(p+=this.DB-8);
		}
		else {
		    d = (this[i]>>(p-=8))&0xff;
		    if(p <= 0) { p += this.DB; --i; }
		}
		if((d&0x80) != 0) d |= -256;
		if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;
		if(k > 0 || d != this.s) r[k++] = d;
	    }
	}
	return r;
    }

    function bnEquals(a) { return(this.compareTo(a)==0); }
    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }
    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }

    // (protected) r = this op a (bitwise)
    function bnpBitwiseTo(a,op,r) {
	var i, f, m = Math.min(a.t,this.t);
	for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);
	if(a.t < this.t) {
	    f = a.s&this.DM;
	    for(i = m; i < this.t; ++i) r[i] = op(this[i],f);
	    r.t = this.t;
	}
	else {
	    f = this.s&this.DM;
	    for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);
	    r.t = a.t;
	}
	r.s = op(this.s,a.s);
	r.clamp();
    }

    // (public) this & a
    function op_and(x,y) { return x&y; }
    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }

    // (public) this | a
    function op_or(x,y) { return x|y; }
    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }

    // (public) this ^ a
    function op_xor(x,y) { return x^y; }
    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }

    // (public) this & ~a
    function op_andnot(x,y) { return x&~y; }
    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }

    // (public) ~this
    function bnNot() {
	var r = nbi();
	for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];
	r.t = this.t;
	r.s = ~this.s;
	return r;
    }

    // (public) this << n
    function bnShiftLeft(n) {
	var r = nbi();
	if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);
	return r;
    }

    // (public) this >> n
    function bnShiftRight(n) {
	var r = nbi();
	if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);
	return r;
    }

    // return index of lowest 1-bit in x, x < 2^31
    function lbit(x) {
	if(x == 0) return -1;
	var r = 0;
	if((x&0xffff) == 0) { x >>= 16; r += 16; }
	if((x&0xff) == 0) { x >>= 8; r += 8; }
	if((x&0xf) == 0) { x >>= 4; r += 4; }
	if((x&3) == 0) { x >>= 2; r += 2; }
	if((x&1) == 0) ++r;
	return r;
    }

    // (public) returns index of lowest 1-bit (or -1 if none)
    function bnGetLowestSetBit() {
	for(var i = 0; i < this.t; ++i)
	    if(this[i] != 0) return i*this.DB+lbit(this[i]);
	if(this.s < 0) return this.t*this.DB;
	return -1;
    }

    // return number of 1 bits in x
    function cbit(x) {
	var r = 0;
	while(x != 0) { x &= x-1; ++r; }
	return r;
    }

    // (public) return number of set bits
    function bnBitCount() {
	var r = 0, x = this.s&this.DM;
	for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);
	return r;
    }

    // (public) true iff nth bit is set
    function bnTestBit(n) {
	var j = Math.floor(n/this.DB);
	if(j >= this.t) return(this.s!=0);
	return((this[j]&(1<<(n%this.DB)))!=0);
    }

    // (protected) this op (1<<n)
    function bnpChangeBit(n,op) {
	var r = BigInteger.ONE.shiftLeft(n);
	this.bitwiseTo(r,op,r);
	return r;
    }

    // (public) this | (1<<n)
    function bnSetBit(n) { return this.changeBit(n,op_or); }

    // (public) this & ~(1<<n)
    function bnClearBit(n) { return this.changeBit(n,op_andnot); }

    // (public) this ^ (1<<n)
    function bnFlipBit(n) { return this.changeBit(n,op_xor); }

    // (protected) r = this + a
    function bnpAddTo(a,r) {
	var i = 0, c = 0, m = Math.min(a.t,this.t);
	while(i < m) {
	    c += this[i]+a[i];
	    r[i++] = c&this.DM;
	    c >>= this.DB;
	}
	if(a.t < this.t) {
	    c += a.s;
	    while(i < this.t) {
		c += this[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += this.s;
	}
	else {
	    c += this.s;
	    while(i < a.t) {
		c += a[i];
		r[i++] = c&this.DM;
		c >>= this.DB;
	    }
	    c += a.s;
	}
	r.s = (c<0)?-1:0;
	if(c > 0) r[i++] = c;
	else if(c < -1) r[i++] = this.DV+c;
	r.t = i;
	r.clamp();
    }

    // (public) this + a
    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }

    // (public) this - a
    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }

    // (public) this * a
    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }

    // (public) this / a
    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }

    // (public) this % a
    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }

    // (public) [this/a,this%a]
    function bnDivideAndRemainder(a) {
	var q = nbi(), r = nbi();
	this.divRemTo(a,q,r);
	return [q,r];
    }

    // (protected) this *= n, this >= 0, 1 < n < DV
    function bnpDMultiply(n) {
	this[this.t] = this.am(0,n-1,this,0,0,this.t);
	++this.t;
	this.clamp();
    }

    // (protected) this += n << w words, this >= 0
    function bnpDAddOffset(n,w) {
	if(n == 0) return;
	while(this.t <= w) this[this.t++] = 0;
	this[w] += n;
	while(this[w] >= this.DV) {
	    this[w] -= this.DV;
	    if(++w >= this.t) this[this.t++] = 0;
	    ++this[w];
	}
    }

    // A "null" reducer
    function NullExp() {}
    function nNop(x) { return x; }
    function nMulTo(x,y,r) { x.multiplyTo(y,r); }
    function nSqrTo(x,r) { x.squareTo(r); }

    NullExp.prototype.convert = nNop;
    NullExp.prototype.revert = nNop;
    NullExp.prototype.mulTo = nMulTo;
    NullExp.prototype.sqrTo = nSqrTo;

    // (public) this^e
    function bnPow(e) { return this.exp(e,new NullExp()); }

    // (protected) r = lower n words of "this * a", a.t <= n
    // "this" should be the larger one if appropriate.
    function bnpMultiplyLowerTo(a,n,r) {
	var i = Math.min(this.t+a.t,n);
	r.s = 0; // assumes a,this >= 0
	r.t = i;
	while(i > 0) r[--i] = 0;
	var j;
	for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);
	for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);
	r.clamp();
    }

    // (protected) r = "this * a" without lower n words, n > 0
    // "this" should be the larger one if appropriate.
    function bnpMultiplyUpperTo(a,n,r) {
	--n;
	var i = r.t = this.t+a.t-n;
	r.s = 0; // assumes a,this >= 0
	while(--i >= 0) r[i] = 0;
	for(i = Math.max(n-this.t,0); i < a.t; ++i)
	    r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);
	r.clamp();
	r.drShiftTo(1,r);
    }

    // Barrett modular reduction
    function Barrett(m) {
	// setup Barrett
	this.r2 = nbi();
	this.q3 = nbi();
	BigInteger.ONE.dlShiftTo(2*m.t,this.r2);
	this.mu = this.r2.divide(m);
	this.m = m;
    }

    function barrettConvert(x) {
	if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);
	else if(x.compareTo(this.m) < 0) return x;
	else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }
    }

    function barrettRevert(x) { return x; }

    // x = x mod m (HAC 14.42)
    function barrettReduce(x) {
	x.drShiftTo(this.m.t-1,this.r2);
	if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }
	this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);
	this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);
	while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);
	x.subTo(this.r2,x);
	while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
    }

    // r = x^2 mod m; x != r
    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

    // r = x*y mod m; x,y != r
    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

    Barrett.prototype.convert = barrettConvert;
    Barrett.prototype.revert = barrettRevert;
    Barrett.prototype.reduce = barrettReduce;
    Barrett.prototype.mulTo = barrettMulTo;
    Barrett.prototype.sqrTo = barrettSqrTo;

    // (public) this^e % m (HAC 14.85)
    function bnModPow(e,m) {
	var i = e.bitLength(), k, r = nbv(1), z;
	if(i <= 0) return r;
	else if(i < 18) k = 1;
	else if(i < 48) k = 3;
	else if(i < 144) k = 4;
	else if(i < 768) k = 5;
	else k = 6;
	if(i < 8)
	    z = new Classic(m);
	else if(m.isEven())
	    z = new Barrett(m);
	else
	    z = new Montgomery(m);

	// precomputation
	var g = [], n = 3, k1 = k-1, km = (1<<k)-1;
	g[1] = z.convert(this);
	if(k > 1) {
	    var g2 = nbi();
	    z.sqrTo(g[1],g2);
	    while(n <= km) {
		g[n] = nbi();
		z.mulTo(g2,g[n-2],g[n]);
		n += 2;
	    }
	}

	var j = e.t-1, w, is1 = true, r2 = nbi(), t;
	i = nbits(e[j])-1;
	while(j >= 0) {
	    if(i >= k1) w = (e[j]>>(i-k1))&km;
	    else {
		w = (e[j]&((1<<(i+1))-1))<<(k1-i);
		if(j > 0) w |= e[j-1]>>(this.DB+i-k1);
	    }

	    n = k;
	    while((w&1) == 0) { w >>= 1; --n; }
	    if((i -= n) < 0) { i += this.DB; --j; }
	    if(is1) {	// ret == 1, don't bother squaring or multiplying it
		g[w].copyTo(r);
		is1 = false;
	    }
	    else {
		while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }
		if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }
		z.mulTo(r2,g[w],r);
	    }

	    while(j >= 0 && (e[j]&(1<<i)) == 0) {
		z.sqrTo(r,r2); t = r; r = r2; r2 = t;
		if(--i < 0) { i = this.DB-1; --j; }
	    }
	}
	return z.revert(r);
    }

    // (public) gcd(this,a) (HAC 14.54)
    function bnGCD(a) {
	var x = (this.s<0)?this.negate():this.clone();
	var y = (a.s<0)?a.negate():a.clone();
	if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }
	var i = x.getLowestSetBit(), g = y.getLowestSetBit();
	if(g < 0) return x;
	if(i < g) g = i;
	if(g > 0) {
	    x.rShiftTo(g,x);
	    y.rShiftTo(g,y);
	}
	while(x.signum() > 0) {
	    if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);
	    if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);
	    if(x.compareTo(y) >= 0) {
		x.subTo(y,x);
		x.rShiftTo(1,x);
	    }
	    else {
		y.subTo(x,y);
		y.rShiftTo(1,y);
	    }
	}
	if(g > 0) y.lShiftTo(g,y);
	return y;
    }

    // (protected) this % n, n < 2^26
    function bnpModInt(n) {
	if(n <= 0) return 0;
	var d = this.DV%n, r = (this.s<0)?n-1:0;
	if(this.t > 0)
	    if(d == 0) r = this[0]%n;
	else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;
	return r;
    }

    // (public) 1/this % m (HAC 14.61)
    function bnModInverse(m) {
	var ac = m.isEven();
	if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;
	var u = m.clone(), v = this.clone();
	var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);
	while(u.signum() != 0) {
	    while(u.isEven()) {
		u.rShiftTo(1,u);
		if(ac) {
		    if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }
		    a.rShiftTo(1,a);
		}
		else if(!b.isEven()) b.subTo(m,b);
		b.rShiftTo(1,b);
	    }
	    while(v.isEven()) {
		v.rShiftTo(1,v);
		if(ac) {
		    if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }
		    c.rShiftTo(1,c);
		}
		else if(!d.isEven()) d.subTo(m,d);
		d.rShiftTo(1,d);
	    }
	    if(u.compareTo(v) >= 0) {
		u.subTo(v,u);
		if(ac) a.subTo(c,a);
		b.subTo(d,b);
	    }
	    else {
		v.subTo(u,v);
		if(ac) c.subTo(a,c);
		d.subTo(b,d);
	    }
	}
	if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;
	if(d.compareTo(m) >= 0) return d.subtract(m);
	if(d.signum() < 0) d.addTo(m,d); else return d;
	if(d.signum() < 0) return d.add(m); else return d;
    }

    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];
    var lplim = (1<<26)/lowprimes[lowprimes.length-1];

    // (public) test primality with certainty >= 1-.5^t
    function bnIsProbablePrime(t) {
	var i, x = this.abs();
	if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {
	    for(i = 0; i < lowprimes.length; ++i)
		if(x[0] == lowprimes[i]) return true;
	    return false;
	}
	if(x.isEven()) return false;
	i = 1;
	while(i < lowprimes.length) {
	    var m = lowprimes[i], j = i+1;
	    while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];
	    m = x.modInt(m);
	    while(i < j) if(m%lowprimes[i++] == 0) return false;
	}
	return x.millerRabin(t);
    }

    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
    function bnpMillerRabin(t) {
	var n1 = this.subtract(BigInteger.ONE);
	var k = n1.getLowestSetBit();
	if(k <= 0) return false;
	var r = n1.shiftRight(k);
	t = (t+1)>>1;
	if(t > lowprimes.length) t = lowprimes.length;
	var a = nbi();
	for(var i = 0; i < t; ++i) {
	    a.fromInt(lowprimes[i]);
	    var y = a.modPow(r,this);
	    if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
		var j = 1;
		while(j++ < k && y.compareTo(n1) != 0) {
		    y = y.modPowInt(2,this);
		    if(y.compareTo(BigInteger.ONE) == 0) return false;
		}
		if(y.compareTo(n1) != 0) return false;
	    }
	}
	return true;
    }
    
    

    // protected
    BigInteger.prototype.chunkSize = bnpChunkSize;
    BigInteger.prototype.toRadix = bnpToRadix;
    BigInteger.prototype.fromRadix = bnpFromRadix;
    BigInteger.prototype.fromNumber = bnpFromNumber;
    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
    BigInteger.prototype.changeBit = bnpChangeBit;
    BigInteger.prototype.addTo = bnpAddTo;
    BigInteger.prototype.dMultiply = bnpDMultiply;
    BigInteger.prototype.dAddOffset = bnpDAddOffset;
    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
    BigInteger.prototype.modInt = bnpModInt;
    BigInteger.prototype.millerRabin = bnpMillerRabin;

    // public
    BigInteger.prototype.clone = bnClone;
    BigInteger.prototype.intValue = bnIntValue;
    BigInteger.prototype.byteValue = bnByteValue;
    BigInteger.prototype.shortValue = bnShortValue;
    BigInteger.prototype.signum = bnSigNum;
    BigInteger.prototype.toByteArray = bnToByteArray;
    BigInteger.prototype.equals = bnEquals;
    BigInteger.prototype.min = bnMin;
    BigInteger.prototype.max = bnMax;
    BigInteger.prototype.and = bnAnd;
    BigInteger.prototype.or = bnOr;
    BigInteger.prototype.xor = bnXor;
    BigInteger.prototype.andNot = bnAndNot;
    BigInteger.prototype.not = bnNot;
    BigInteger.prototype.shiftLeft = bnShiftLeft;
    BigInteger.prototype.shiftRight = bnShiftRight;
    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
    BigInteger.prototype.bitCount = bnBitCount;
    BigInteger.prototype.testBit = bnTestBit;
    BigInteger.prototype.setBit = bnSetBit;
    BigInteger.prototype.clearBit = bnClearBit;
    BigInteger.prototype.flipBit = bnFlipBit;
    BigInteger.prototype.add = bnAdd;
    BigInteger.prototype.subtract = bnSubtract;
    BigInteger.prototype.multiply = bnMultiply;
    BigInteger.prototype.divide = bnDivide;
    BigInteger.prototype.remainder = bnRemainder;
    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
    BigInteger.prototype.modPow = bnModPow;
    BigInteger.prototype.modInverse = bnModInverse;
    BigInteger.prototype.pow = bnPow;
    BigInteger.prototype.gcd = bnGCD;
    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;

    // BigInteger interfaces not implemented in jsbn:

    // BigInteger(int signum, byte[] magnitude)
    // double doubleValue()
    // float floatValue()
    // int hashCode()
    // long longValue()
    // static BigInteger valueOf(long val)



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // END OF copy-and-paste of jsbn.



    BigInteger.NEGATIVE_ONE = BigInteger.ONE.negate();


    // Other methods we need to add for compatibilty with js-numbers numeric tower.

    // add is implemented above.
    // subtract is implemented above.
    // multiply is implemented above.
    // equals is implemented above.
    // abs is implemented above.
    // negate is defined above.

    // makeBignum: string -> BigInteger
    var makeBignum = function(s) {
	if (typeof(s) === 'number') { s = s + ''; }
	s = expandExponent(s);
	return new BigInteger(s, 10);
    };

    var zerostring = function(n) {
	var buf = [];
	for (var i = 0; i < n; i++) {
	    buf.push('0');
	}
	return buf.join('');
    };


    BigInteger.prototype.level = 0;
    BigInteger.prototype.liftTo = function(target) {
	if (target.level === 1) {
	    return new Rational(this, 1);
	}
	if (target.level === 2) {
	    var fixrep = this.toFixnum();
	    if (fixrep === Number.POSITIVE_INFINITY)
		return TOO_POSITIVE_TO_REPRESENT;
	    if (fixrep === Number.NEGATIVE_INFINITY)
		return TOO_NEGATIVE_TO_REPRESENT;
	    return new FloatPoint(fixrep);
	}
	if (target.level === 3) {
	    return new Complex(this, 0);
	}
	return throwRuntimeError("invalid level for BigInteger lift", this, target);
    };

    BigInteger.prototype.isFinite = function() {
	return true;
    };

    BigInteger.prototype.isInteger = function() {
	return true;
    };

    BigInteger.prototype.isRational = function() {
	return true;
    };

    BigInteger.prototype.isReal = function() {
	return true;
    };

    BigInteger.prototype.isExact = function() {
	return true;
    };

    BigInteger.prototype.isInexact = function() {
	return false;
    };

    BigInteger.prototype.toExact = function() {
	return this;
    };

    BigInteger.prototype.toInexact = function() {
	return FloatPoint.makeInstance(this.toFixnum());
    };

    BigInteger.prototype.toFixnum = function() {
	var result = 0, str = this.toString(), i;
	if (str[0] === '-') {
	    for (i=1; i < str.length; i++) {
		result = result * 10 + Number(str[i]);
	    }
	    return -result;
	} else {
	    for (i=0; i < str.length; i++) {
		result = result * 10 + Number(str[i]);
	    }
	    return result;
	}
    };


    BigInteger.prototype.greaterThan = function(other) {
	return this.compareTo(other) > 0;
    };

    BigInteger.prototype.greaterThanOrEqual = function(other) {
	return this.compareTo(other) >= 0;
    };

    BigInteger.prototype.lessThan = function(other) {
	return this.compareTo(other) < 0;
    };

    BigInteger.prototype.lessThanOrEqual = function(other) {
	return this.compareTo(other) <= 0;
    };

    // divide: scheme-number -> scheme-number
    // WARNING NOTE: we override the old version of divide.
    BigInteger.prototype.divide = function(other) {
	var quotientAndRemainder = bnDivideAndRemainder.call(this, other);
	if (quotientAndRemainder[1].compareTo(BigInteger.ZERO) === 0) {
	    return quotientAndRemainder[0];
	} else {
	    var result = add(quotientAndRemainder[0],
			     Rational.makeInstance(quotientAndRemainder[1], other));
	    return result;
	}
    };

    BigInteger.prototype.numerator = function() {
	return this;
    };

    BigInteger.prototype.denominator = function() {
	return 1;
    };


    (function() {
	// Classic implementation of Newton-Ralphson square-root search,
	// adapted for integer-sqrt.
	// http://en.wikipedia.org/wiki/Newton's_method#Square_root_of_a_number
	    var searchIter = function(n, guess) {
		while(!(lessThanOrEqual(sqr(guess),n) &&
			lessThan(n,sqr(add(guess, 1))))) {
		    guess = floor(divide(add(guess,
					     floor(divide(n, guess))),
					 2));
		}
		return guess;
	    };

	    // integerSqrt: -> scheme-number
	    BigInteger.prototype.integerSqrt = function() {
		var n;
		if(sign(this) >= 0) {
		    return searchIter(this, this);
		} else {
		    n = this.negate();
		    return Complex.makeInstance(0, searchIter(n, n));
		}
	    };
    })();


    (function() {	
	// Get an approximation using integerSqrt, and then start another
	// Newton-Ralphson search if necessary.
	BigInteger.prototype.sqrt = function() {
	    var approx = this.integerSqrt(), fix;
	    if (eqv(sqr(approx), this)) {
		return approx;
	    }
	    fix = toFixnum(this);
	    if (isFinite(fix)) {
		if (fix >= 0) {
		    return FloatPoint.makeInstance(Math.sqrt(fix));
		} else {
		    return Complex.makeInstance(
			0,
			FloatPoint.makeInstance(Math.sqrt(-fix)));
		}
	    } else {
		return approx;
	    }
	};
    })();




    
    // sqrt: -> scheme-number
    // http://en.wikipedia.org/wiki/Newton's_method#Square_root_of_a_number
    // Produce the square root.

    // floor: -> scheme-number
    // Produce the floor.
    BigInteger.prototype.floor = function() {
        return this;
    }

    // ceiling: -> scheme-number
    // Produce the ceiling.
    BigInteger.prototype.ceiling = function() {
        return this;
    }

    // conjugate: -> scheme-number
    // Produce the conjugate.

    // magnitude: -> scheme-number
    // Produce the magnitude.

    // log: -> scheme-number
    // Produce the log.

    // angle: -> scheme-number
    // Produce the angle.

    // atan: -> scheme-number
    // Produce the arc tangent.

    // cos: -> scheme-number
    // Produce the cosine.

    // sin: -> scheme-number
    // Produce the sine.


    // expt: scheme-number -> scheme-number
    // Produce the power to the input.
    BigInteger.prototype.expt = function(n) {
	return bnPow.call(this, n);
    };



    // exp: -> scheme-number
    // Produce e raised to the given power.

    // acos: -> scheme-number
    // Produce the arc cosine.

    // asin: -> scheme-number
    // Produce the arc sine.

    BigInteger.prototype.imaginaryPart = function() {
	    return 0;
    }
    BigInteger.prototype.realPart = function() {
	    return this;
    }

    // round: -> scheme-number
    // Round to the nearest integer.





    //////////////////////////////////////////////////////////////////////
    // toRepeatingDecimal: jsnum jsnum {limit: number}? -> [string, string, string]
    //
    // Given the numerator and denominator parts of a rational,
    // produces the repeating-decimal representation, where the first
    // part are the digits before the decimal, the second are the
    // non-repeating digits after the decimal, and the third are the
    // remaining repeating decimals.
    // 
    // An optional limit on the decimal expansion can be provided, in which
    // case the search cuts off if we go past the limit.
    // If this happens, the third argument returned becomes '...' to indicate
    // that the search was prematurely cut off.
    var toRepeatingDecimal = (function() {
	var getResidue = function(r, d, limit) {
	    var digits = [];
	    var seenRemainders = {};
	    seenRemainders[r] = true;
	    while(true) {	
		if (limit-- <= 0) {
		    return [digits.join(''), '...']
		}

		var nextDigit = quotient(
		    multiply(r, 10), d);
		var nextRemainder = remainder(
		    multiply(r, 10),
		    d);
		digits.push(nextDigit.toString());
		if (seenRemainders[nextRemainder]) {
		    r = nextRemainder;
		    break;
		} else {
		    seenRemainders[nextRemainder] = true;
		    r = nextRemainder;
		}
	    }
	    
	    var firstRepeatingRemainder = r;
	    var repeatingDigits = [];
	    while (true) {
		var nextDigit = quotient(multiply(r, 10), d);
		var nextRemainder = remainder(
		    multiply(r, 10),
		    d);
		repeatingDigits.push(nextDigit.toString());
		if (equals(nextRemainder, firstRepeatingRemainder)) {
		    break;
		} else {
		    r = nextRemainder;
		}
	    };

	    var digitString = digits.join('');
	    var repeatingDigitString = repeatingDigits.join('');

	    while (digitString.length >= repeatingDigitString.length &&
		   (digitString.substring(
		       digitString.length - repeatingDigitString.length)
		    === repeatingDigitString)) {
		digitString = digitString.substring(
		    0, digitString.length - repeatingDigitString.length);
	    }

	    return [digitString, repeatingDigitString];

	};

	return function(n, d, options) {
	    // default limit on decimal expansion; can be overridden
	    var limit = 512;
	    if (options && typeof(options.limit) !== 'undefined') {
		limit = options.limit;
	    }
	    if (! isInteger(n)) {
		throwRuntimeError('toRepeatingDecimal: n ' + n.toString() +
				  " is not an integer.");
	    }
	    if (! isInteger(d)) {
		throwRuntimeError('toRepeatingDecimal: d ' + d.toString() +
				  " is not an integer.");
	    }
	    if (equals(d, 0)) {
		throwRuntimeError('toRepeatingDecimal: d equals 0');
	    }
	    if (lessThan(d, 0)) {
		throwRuntimeError('toRepeatingDecimal: d < 0');
	    }
 	    var sign = (lessThan(n, 0) ? "-" : "");
 	    n = abs(n);
 	    var beforeDecimalPoint = sign + quotient(n, d);
 	    var afterDecimals = getResidue(remainder(n, d), d, limit);
 	    return [beforeDecimalPoint].concat(afterDecimals);
	};
    })();
    //////////////////////////////////////////////////////////////////////




    // External interface of js-numbers:

    Numbers['fromFixnum'] = fromFixnum;
    Numbers['fromString'] = fromString;
    Numbers['makeBignum'] = makeBignum;
    Numbers['makeRational'] = Rational.makeInstance;
    Numbers['makeFloat'] = FloatPoint.makeInstance;
    Numbers['makeComplex'] = Complex.makeInstance;
    Numbers['makeComplexPolar'] = makeComplexPolar;

    Numbers['pi'] = FloatPoint.pi;
    Numbers['e'] = FloatPoint.e;
    Numbers['nan'] = FloatPoint.nan;
    Numbers['negative_inf'] = FloatPoint.neginf;
    Numbers['inf'] = FloatPoint.inf;
    Numbers['negative_one'] = -1;   // Rational.NEGATIVE_ONE;
    Numbers['zero'] = 0;            // Rational.ZERO;
    Numbers['one'] = 1;             // Rational.ONE;
    Numbers['i'] = plusI;
    Numbers['negative_i'] = minusI;
    Numbers['negative_zero'] = NEGATIVE_ZERO;

    Numbers['onThrowRuntimeError'] = onThrowRuntimeError;
    Numbers['isSchemeNumber'] = isSchemeNumber;
    Numbers['isRational'] = isRational;
    Numbers['isReal'] = isReal;
    Numbers['isExact'] = isExact;
    Numbers['isInexact'] = isInexact;
    Numbers['isInteger'] = isInteger;

    Numbers['toFixnum'] = toFixnum;
    Numbers['toExact'] = toExact;
    Numbers['toInexact'] = toInexact;
    Numbers['add'] = add;
    Numbers['subtract'] = subtract;
    Numbers['multiply'] = multiply;
    Numbers['divide'] = divide;
    Numbers['equals'] = equals;
    Numbers['eqv'] = eqv;
    Numbers['approxEquals'] = approxEquals;
    Numbers['greaterThanOrEqual'] = greaterThanOrEqual;
    Numbers['lessThanOrEqual'] = lessThanOrEqual;
    Numbers['greaterThan'] = greaterThan;
    Numbers['lessThan'] = lessThan;
    Numbers['expt'] = expt;
    Numbers['exp'] = exp;
    Numbers['modulo'] = modulo;
    Numbers['numerator'] = numerator;
    Numbers['denominator'] = denominator;
    Numbers['integerSqrt'] = integerSqrt;
    Numbers['sqrt'] = sqrt;
    Numbers['abs'] = abs;
    Numbers['quotient'] = quotient;
    Numbers['remainder'] = remainder;
    Numbers['floor'] = floor;
    Numbers['ceiling'] = ceiling;
    Numbers['conjugate'] = conjugate;
    Numbers['magnitude'] = magnitude;
    Numbers['log'] = log;
    Numbers['angle'] = angle;
    Numbers['tan'] = tan;
    Numbers['atan'] = atan;
    Numbers['cos'] = cos;
    Numbers['sin'] = sin;
    Numbers['tan'] = tan;
    Numbers['acos'] = acos;
    Numbers['asin'] = asin;
    Numbers['cosh'] = cosh;
    Numbers['sinh'] = sinh;
    Numbers['imaginaryPart'] = imaginaryPart;
    Numbers['realPart'] = realPart;
    Numbers['round'] = round;
    Numbers['sqr'] = sqr;
    Numbers['gcd'] = gcd;
    Numbers['lcm'] = lcm;

    Numbers['toRepeatingDecimal'] = toRepeatingDecimal;



    // The following exposes the class representations for easier
    // integration with other projects.
    Numbers['BigInteger'] = BigInteger;
    Numbers['Rational'] = Rational;
    Numbers['FloatPoint'] = FloatPoint;
    Numbers['Complex'] = Complex;   

    Numbers['MIN_FIXNUM'] = MIN_FIXNUM;
    Numbers['MAX_FIXNUM'] = MAX_FIXNUM;

})();
/**
 *
 *  Originally grabbed from:
 *  Base64 encode / decode
 *  http://www.webtoolkit.info/
 *
 *  dyoo: modified to work with arrays of bytes rather than assume
 *  the bytes are strings.
 * 
 *  Provides a Base64 object with two methods:
 *  Base64.encode: [arrayof int] -> string
 *  Base64.decode: string -> [arrayof int]
 **/
var Base64 = (function() {
    'use strict';

    // private property
    var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

    var Base64 = {        
        // public method for encoding
        encode : function (inputBytes) {
	    var output = [];
	    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
	    var i = 0;
	    while (i < inputBytes.length) {
                
	        chr1 = inputBytes[i++];
	        chr2 = inputBytes[i++];
	        chr3 = inputBytes[i++];
                
	        enc1 = chr1 >> 2;
	        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
	        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
	        enc4 = chr3 & 63;
                
	        if (isNaN(chr2)) {
		    enc3 = enc4 = 64;
	        } else if (isNaN(chr3)) {
		    enc4 = 64;
	        }
	        output.push(_keyStr.charAt(enc1));
                output.push(_keyStr.charAt(enc2));
		output.push(_keyStr.charAt(enc3));
                output.push(_keyStr.charAt(enc4));
	    }
	    return output.join('');
        },
        
        // public method for decoding
        decode : function (inputString) {
	    var outputBytes = [];
	    var chr1, chr2, chr3;
	    var enc1, enc2, enc3, enc4;
	    var i = 0;
            
	    inputString = inputString.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            
	    while (i < inputString.length) {
	        enc1 = _keyStr.indexOf(inputString.charAt(i++));
	        enc2 = _keyStr.indexOf(inputString.charAt(i++));
	        enc3 = _keyStr.indexOf(inputString.charAt(i++));
	        enc4 = _keyStr.indexOf(inputString.charAt(i++));
                
	        chr1 = (enc1 << 2) | (enc2 >> 4);
	        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
	        chr3 = ((enc3 & 3) << 6) | enc4;
                
	        outputBytes.push(chr1);
                
	        if (enc3 !== 64) {
		    outputBytes.push(chr2);
	        }
	        if (enc4 !== 64) {
		    outputBytes.push(chr3);
	        }
	    }
	    return outputBytes;
        }
    };
    return Base64;
}());/*jslint vars: true, plusplus: true, maxerr: 50, indent: 4 */

// Basic library functions.  This will include a few simple functions,
// but be augmented with several namespaces for the other libraries in
// the base library.
if (!(this.plt)) { this.plt = {}; }
(function (plt) {
    'use strict';
    var baselib = {};
    plt.baselib = baselib;



    // Simple object inheritance.
    var heir = function (parentPrototype) {
        var F = function () {};
        F.prototype = parentPrototype;
        return new F();
    };



    // clone: object -> object
    // Copies an object.  The new object should respond like the old
    // object, including to things like instanceof.
    var clone = function (obj) {
        var property;
        var C = function () {};
        C.prototype = obj;
        var c = new C();
        for (property in obj) {
            if (obj.hasOwnProperty(property)) {
                c[property] = obj[property];
            }
        }
        return c;
    };


    // Consumes a class and creates a predicate that recognizes subclasses.
    var makeClassPredicate = function (aClass) {
        return function (x) { return x instanceof aClass; };
    };



    // Helper to deal with the argument-passing of primitives.  Call f
    // with arguments bound from MACHINE.e, assuming
    // MACHINE.a has been initialized with the number of
    // arguments on the stack.  vs provides optional values for the
    // arguments that go beyond those of the mandatoryArgCount.
    var withArguments = function (MACHINE, mandatoryArgCount, vs, f) {
        var args = [], i;
        for (i = 0; i < MACHINE.a; i++) {
            if (i < mandatoryArgCount) {
                args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
            } else {
                if (i < MACHINE.a) {
                    args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
                } else {
                    args.push(vs[mandatoryArgCount - i]);
                }
            }
        }
        return f.apply(null, args);
    };



    baselib.heir = heir;
    baselib.clone = clone;
    baselib.makeClassPredicate = makeClassPredicate;
    baselib.withArguments = withArguments;


}(this.plt));
/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Frame structures.
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.frames = exports;



    // A generic frame just holds marks.
    var Frame = function() {
	// The set of continuation marks.
	// this.marks = [];
	// When we're in the middle of computing with-cont-mark, we
	// stash the key in here temporarily.
	// this.pendingContinuationMarkKey = undefined;
	// this.pendingApplyValuesProc = undefined;
	// this.pendingBegin0Count = undefined;
	// this.pendingBegin0Values = undefined;
    };
    Frame.prototype.getMarks = function() {
        if (this.marks === void(0)) { this.marks = []; }
        return this.marks;
    };


    // Frames must support marks and the temporary variables necessary to
    // support with-continuation-mark and with-values.

    // Specialized frames support more features:

    // A CallFrame represents a call stack frame, and includes the return address
    // as well as the function being called.
    var CallFrame = function(label, proc) {
	this.label = label;
	this.p = proc;
    };
    CallFrame.prototype = baselib.heir(Frame.prototype);



    // A prompt frame includes a return address, as well as a prompt
    // tag for supporting delimited continuations.  To support abort,
    // we also keep the size of the environment, and the handler
    // to call if an abort happens.
    var PromptFrame = function(label, tag, envLength, handler) {
	this.label = label;
	this.tag = tag; // ContinuationPromptTag
        this.envLength = envLength;
        this.handler = handler;
    };
    PromptFrame.prototype = baselib.heir(Frame.prototype);




    //////////////////////////////////////////////////////////////////////
    exports.Frame = Frame;
    exports.CallFrame = CallFrame;
    exports.PromptFrame = PromptFrame;



}(this.plt.baselib));/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";

    // Union/find for circular equality testing.

    var UnionFind = function () {
        // this.parenMap holds the arrows from an arbitrary pointer
        // to its parent.
        this.parentMap = baselib.hashes.makeLowLevelEqHash();
    };

    // find: ptr -> UnionFindNode
    // Returns the representative for this ptr.
    UnionFind.prototype.find = function (ptr) {
        var parent = (this.parentMap.containsKey(ptr) ? 
                      this.parentMap.get(ptr) : ptr);
        if (parent === ptr) {
            return parent;
        } else {
            var rep = this.find(parent);
            // Path compression:
            this.parentMap.put(ptr, rep);
            return rep;
        }
    };

    // merge: ptr ptr -> void
    // Merge the representative nodes for ptr1 and ptr2.
    UnionFind.prototype.merge = function (ptr1, ptr2) {
        this.parentMap.put(this.find(ptr1), this.find(ptr2));
    };



    baselib.UnionFind = UnionFind;

}(this.plt.baselib));/*jslint vars: true, white: true, maxerr: 50, indent: 4 */


// Equality function
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.equality = exports;



    var eqv = function (x, y) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return jsnums.eqv(x, y);
        } else if (baselib.chars.isChar(x) && baselib.chars.isChar(y)) {
            return x.val === y.val;
        } else {
            return false;
        }
    };




    // equals: X Y -> boolean
    // Returns true if the objects are equivalent; otherwise, returns false.
    var equals = function (x, y, aUnionFind) {
        if (x === y) { return true; }

        if (baselib.numbers.isNumber(x) && baselib.numbers.isNumber(y)) {
            return baselib.numbers.eqv(x, y);
        }

        if (baselib.strings.isString(x) && baselib.strings.isString(y)) {
            return x.toString() === y.toString();
        }

        if (x === void(0) || x === null) {
            return (y === void(0) || y === null);
        }

        if (typeof (x) === 'object' && typeof (y) === 'object' &&
            x.equals && y.equals) {
            if (aUnionFind === void(0)) {
                aUnionFind = new baselib.UnionFind();
            }

            if (aUnionFind.find(x) === aUnionFind.find(y)) {
                return true;
            }
            else {
                aUnionFind.merge(x, y); 
                return x.equals(y, aUnionFind);
            }
        }
        return false;
    };

    exports.eqv = eqv;
    exports.equals = equals;

}(this.plt.baselib, jsnums));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Formatting library.
// Produces string and DOM representations of values.
//
/*global $*/
(function(baselib, $) {
    'use strict';
    var exports = {};
    baselib.format = exports;


    var replaceUnprintableStringChars = function(s) {
        var ret = [], i;
        for (i = 0; i < s.length; i++) {
            var val = s.charCodeAt(i);
            switch(val) {
            case 7: ret.push('\\a'); break;
            case 8: ret.push('\\b'); break;
            case 9: ret.push('\\t'); break;
            case 10: ret.push('\\n'); break;
            case 11: ret.push('\\v'); break;
            case 12: ret.push('\\f'); break;
            case 13: ret.push('\\r'); break;
            case 34: ret.push('\\"'); break;
            case 92: ret.push('\\\\'); break;
            default: if (val >= 32 && val <= 126) {
                ret.push( s.charAt(i) );
            }
                else {
                    var numStr = val.toString(16).toUpperCase();
                    while (numStr.length < 4) {
                        numStr = '0' + numStr;
                    }
                    ret.push('\\u' + numStr);
                }
                break;
            }
        }
        return ret.join('');
    };

    var escapeString = function(s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };


    // toWrittenString: Any Hashtable -> String
    var toWrittenString = function(x, cache) {
        if (! cache) { 
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === void(0)) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return escapeString(x.toString());
        }

        if (baselib.functions.isProcedure(x)) {
            return '#<procedure:' + x.displayName + '>';
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (x.toWrittenString) {
            returnVal = x.toWrittenString(cache);
        } else if (x.toDisplayedString) {
            returnVal = x.toDisplayedString(cache);
        } else {
            returnVal = x.toString();
        }
        return returnVal;
    };



    // toDisplayedString: Any Hashtable -> String
    var toDisplayedString = function(x, cache) {
        if (! cache) {
            cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (x === null) {
            return "null";
        }
        if (x === true) { return "true"; }
        if (x === false) { return "false"; }
        if (typeof(x) === 'object') {
            if (cache.containsKey(x)) {
                return "...";
            }
        }
        if (x === void(0) || x === null) {
            return "#<undefined>";
        }
        if (typeof(x) === 'string') {
            return x;
        }

        if (baselib.functions.isProcedure(x)) {
            return '#<procedure:' + x.displayName + '>';
        }

        if (typeof(x) !== 'object' && typeof(x) !== 'function') {
            return x.toString();
        }

        var returnVal;
        if (x.toDisplayedString) {
            returnVal = x.toDisplayedString(cache);
        } else if (x.toWrittenString) {
            returnVal = x.toWrittenString(cache);
        } else {
            returnVal = x.toString();
        }
        return returnVal;
    };



    var formatRegexp1 = new RegExp('~[sSaA]', 'g');
    var formatRegexp2 = new RegExp("~[sSaAnevE%~]", "g");
    
    // format: string [X ...] string -> string
    // String formatting.  If an exception occurs, throws
    // a plain Error whose message describes the formatting error.
    var format = function(formatStr, args, functionName) {
        var throwFormatError = function() {
            functionName = functionName || 'format';
            var matches = formatStr.match(formatRegexp1);
            var expectedNumberOfArgs = (matches === null ? 0 : matches.length);
            var errorStrBuffer = [functionName + ': format string requires ' + expectedNumberOfArgs
                                  + ' arguments, given ' + args.length + '; arguments were:',
                                  toWrittenString(formatStr)];
            var i;
            for (i = 0; i < args.length; i++) {
                errorStrBuffer.push( toWrittenString(args[i]) );
            }

            throw new Error(errorStrBuffer.join(' '));
        };


        var buffer = args.slice(0);
        var onTemplate = function(s) {
            if (s === "~~") {
                return "~";
            } else if (s === '~n' || s === '~%') {
                return "\n";
            } else if (s === '~s' || s === "~S") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift());
            } else if (s === '~e' || s === "~E") {
                // FIXME: we don't yet have support for the error-print
                // handler, and currently treat ~e just like ~s.
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toWrittenString(buffer.shift()); 
            }
            else if (s === '~v') {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                // fprintf must do something more interesting here by
                // printing the dom representation directly...
                return toWrittenString(buffer.shift());
            } else if (s === '~a' || s === "~A") {
                if (buffer.length === 0) {
                    throwFormatError();
                }
                return toDisplayedString(buffer.shift());
            } else {
                throw new Error(functionName + 
                                ': string.replace matched invalid regexp');
            }
        };
        var result = formatStr.replace(formatRegexp2, onTemplate);
        if (buffer.length > 0) {
            throwFormatError();
        }
        return result;
    };
    



    var ToDomNodeParameters = function(params) {
        if (! params) { params = {}; }
        var k;
        for (k in params) {
            if (params.hasOwnProperty(k)) {
                this[k] = params[k];
            }
        }
        if (this.cache === void(0)) {
            this.cache = baselib.hashes.makeLowLevelEqHash();
        }
        if (this.cycles === void(0)) {
            this.cycles = baselib.hashes.makeLowLevelEqHash();
        }
        if (this.depth === void(0)) {
            this.depth = 0;
        }
        if (this.objectCounter === void(0)) {
            this.objectCounter = 0;
        }
    };


    ToDomNodeParameters.prototype.incrementDepth = function() {
        return new ToDomNodeParameters({ mode : this.mode,
                                         depth: this.depth + 1,
                                         cache: this.cache,
                                         cycles: this.cycles,
                                         objectCounter: this.objectCounter });
    };
    

    // getMode: -> (U "print" "display" "write" "constructor")
    ToDomNodeParameters.prototype.getMode = function() {
        if (this.mode) { 
            return this.mode; 
        }
        return 'print';
    };

    ToDomNodeParameters.prototype.getDepth = function(x) {
        return this.depth;
    };

    ToDomNodeParameters.prototype.containsKey = function(x) {
        return this.cache.containsKey(x);
    };

    ToDomNodeParameters.prototype.seesOldCycle = function(x) {
        return this.cycles.containsKey(x);
    };

    ToDomNodeParameters.prototype.get = function(x) {
        return this.cache.get(x);
    };

    ToDomNodeParameters.prototype.remove = function(x) {
        return this.cache.remove(x);
    };

    ToDomNodeParameters.prototype.put = function(x, v) {
        return this.cache.put(x, v);
    };

    ToDomNodeParameters.prototype.recur = function(x) {
        return toDomNode(x, this.incrementDepth());
    };



    // rationalToDomNode: rational -> dom-node
    var rationalToDomNode = function(n) {
        var repeatingDecimalNode = document.createElement("span");
        var chunks = baselib.numbers.toRepeatingDecimal(baselib.numbers.numerator(n),
                                                        baselib.numbers.denominator(n),
                                                        {limit: 25});
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[0] + '.'));
        repeatingDecimalNode.appendChild(document.createTextNode(chunks[1]));
        if (chunks[2] === '...') {
            repeatingDecimalNode.appendChild(
                document.createTextNode(chunks[2]));
        } else if (chunks[2] !== '0') {
            var overlineSpan = document.createElement("span");
            overlineSpan.style.textDecoration = 'overline';
            overlineSpan.appendChild(document.createTextNode(chunks[2]));
            repeatingDecimalNode.appendChild(overlineSpan);
        }


        var fractionalNode = document.createElement("span");
        var numeratorNode = document.createElement("sup");
        numeratorNode.appendChild(document.createTextNode(String(baselib.numbers.numerator(n))));
        var denominatorNode = document.createElement("sub");
        denominatorNode.appendChild(document.createTextNode(String(baselib.numbers.denominator(n))));
        fractionalNode.appendChild(numeratorNode);
        fractionalNode.appendChild(document.createTextNode("/"));
        fractionalNode.appendChild(denominatorNode);

        
        var numberNode = document.createElement("span");
        numberNode.appendChild(repeatingDecimalNode);
        numberNode.appendChild(fractionalNode);
        fractionalNode.style['display'] = 'none';

        var showingRepeating = true;

        numberNode.onclick = function(e) {
            showingRepeating = !showingRepeating;
            repeatingDecimalNode.style['display'] = 
                (showingRepeating ? 'inline' : 'none');
            fractionalNode.style['display'] = 
                (!showingRepeating ? 'inline' : 'none');
        };
        numberNode.style['cursor'] = 'pointer';
        return numberNode;
    };


    // numberToDomNode: jsnum -> dom
    // Given a jsnum, produces a dom-node representation.
    var numberToDomNode = function(n, params) {
        var node;
        if (baselib.numbers.isExact(n)) {
            if (baselib.numbers.isInteger(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else if (baselib.numbers.isRational(n)) {
                return rationalToDomNode(n);
            } else if (baselib.numbers.isComplex(n)) {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            } else {
                node = document.createElement("span");
                node.appendChild(document.createTextNode(n.toString()));
                return node;
            }
        } else {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(n.toString()));
            return node;
        }
    };


    var coerseToParams = function(params) {
        if (params === 'write') {
            params = new ToDomNodeParameters({'mode' : 'write'});
        } else if (params === 'print') {
            params = new ToDomNodeParameters({'mode' : 'print'});
        } else if (params === 'display') {
            params = new ToDomNodeParameters({'mode' : 'display'});
        } else if (params === 'constructor') {
            params = new ToDomNodeParameters({'mode' : 'constructor'});
        } else {
            params = params || new ToDomNodeParameters({'mode' : 'display'});
        } 
        return params;
    };


    // toDomNode: scheme-value -> dom-node
    var toDomNode = function(x, params) {
        var node, retval;
        params = coerseToParams(params);

        if (x === null) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#<null>"));
            $(node).addClass("null");
            return node;
        }

        if (x === void(0)) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#<undefined>"));
            $(node).addClass("undefined");
            return node;
        }

        if (baselib.numbers.isSchemeNumber(x)) {
            node = numberToDomNode(x, params);
            $(node).addClass("number");
            return node;
        }

        if (typeof(x) === 'string') {
            var wrapper = document.createElement("span");
            wrapper.style.whiteSpace = "pre";
            if (params.getMode() === 'write' || params.getMode() === 'print' || params.getMode() === 'constructor') {
                node = document.createTextNode(toWrittenString(x));
            } else {
                node = document.createTextNode(toDisplayedString(x));
            }
            wrapper.appendChild(node);
            $(wrapper).addClass("string");
            return wrapper;
        }

        if (x === true || x === false) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x ? "true" : "false"));
            $(node).addClass("boolean");
            return node;
        }

        if (baselib.functions.isProcedure(x)) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode('#<procedure:' + x.displayName + '>'));
            $(node).addClass("procedure");
            return node;
        }

        if (typeof(x) !== 'object') {
            node = document.createElement("span");
            node.appendChild(document.createTextNode(x.toString()));
            return node;
        }

        if (x.nodeType) {
            return x;
        }



        // Otherwise, we know the value is an object.
        
        // If we're along a print path with a loop, we need to stop
        // and return the key.
        if (params.seesOldCycle(x)) {
            node = document.createElement("span");
            node.appendChild(document.createTextNode("#" + params.cycles.get(x) + "#"));
            $(node).addClass("cycle");
            return node;
        }

        // If we see a fresh cycle, register it.
        if (params.containsKey(x)) {
            $('<span/>').text('#' + params.objectCounter +'=')
                    .prependTo(params.get(x));

            params.cycles.put(x, params.objectCounter);
            params.objectCounter++;

            node = document.createElement("span");
            node.appendChild(document.createTextNode("#" + params.cycles.get(x) + "#"));
            $(node).addClass("cycle");
            return node;
        }

        node = document.createElement("span");
        params.put(x, node);
        if (x.toDomNode) {
            node.appendChild(x.toDomNode(params));
        } else if (params.getMode() === 'write' && x.toWrittenString) {
            node.appendChild(document.createTextNode(
                x.toWrittenString(params)));
        } else if (params.getMode() === 'display' && x.toDisplayedString) {
            node.appendChild(document.createTextNode(
                x.toDisplayedString(params)));
        } else {
            node.appendChild(document.createTextNode(x.toString()));
        }
        params.remove(x);
        return node;
    };



    //////////////////////////////////////////////////////////////////////


    exports.ToDomNodeParameters = ToDomNodeParameters;

    exports.format = format;
    exports.toWrittenString = toWrittenString;
    exports.toDisplayedString = toDisplayedString;
    exports.toDomNode = toDomNode;

    exports.escapeString = escapeString;
}(this.plt.baselib, $));/*jslint vars: true, maxerr: 50, indent: 4 */


// Other miscellaneous constants
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.constants = exports;


    var VoidValue = function () {};
    VoidValue.prototype.toString = function () {
        return "#<void>";
    };

    var VOID_VALUE = new VoidValue();


    var EofValue = function () {};
    EofValue.prototype.toString = function () {
        return "#<eof>";
    };

    var EOF_VALUE = new EofValue();


    exports.VOID_VALUE = VOID_VALUE;
    exports.EOF_VALUE = EOF_VALUE;
}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Numbers.
/*global jsnums*/
(function (baselib, jsnums) {
    'use strict';
    var exports = {};
    baselib.numbers = exports;



    // Set the numeric tower to raise errors through our mechanism.
    jsnums.onThrowRuntimeError = function(msg, x, y) {
        if (msg === '/: division by zero') {
            baselib.exceptions.raiseDivisionByZeroError(plt.runtime.currentMachine, msg);
        } else {
            baselib.exceptions.raiseContractError(plt.runtime.currentMachine, msg);
        }
    };


    var isNumber = jsnums.isSchemeNumber;
    var isReal = jsnums.isReal;
    var isRational = jsnums.isRational;
    var isComplex = isNumber;
    var isInteger = jsnums.isInteger;


    var isNatural = function (x) {
        return (jsnums.isExact(x) && isInteger(x) 
                && jsnums.greaterThanOrEqual(x, 0));
    };

    var isNonNegativeReal = function (x) {
        return isReal(x) && jsnums.greaterThanOrEqual(x, 0);
    };

    var isByte = function (x) {
        return (isNatural(x) && 
                jsnums.lessThan(x, 256));
    };


    // sign: number -> number
    var sign = function (x) {
        if (jsnums.isInexact(x)) {
            if (jsnums.greaterThan(x, 0)) {
                return jsnums.makeFloat(1);
            } else if (jsnums.lessThan(x, 0)) {
                return jsnums.makeFloat(-1);
            } else {
                return jsnums.makeFloat(0);
            }
        } else {
            if (jsnums.greaterThan(x, 0)) {
                return 1;
            } else if (jsnums.lessThan(x, 0)) {
                return -1;
            } else {
                return 0;
            }
        }
    };




    //////////////////////////////////////////////////////////////////////
    // Exports


    // We first re-export everything in jsnums.
    var prop;
    for (prop in jsnums) {
        if (jsnums.hasOwnProperty(prop)) {
            exports[prop] = jsnums[prop];
        }
    }

    exports.isNumber = jsnums.isSchemeNumber;
    exports.isReal = isReal;
    exports.isRational = isRational;
    exports.isComplex = isComplex;
    exports.isInteger = isInteger;
    exports.isNatural = isNatural;
    exports.isByte = isByte;
    exports.isNonNegativeReal = isNonNegativeReal;

    exports.sign = sign;


}(this.plt.baselib, jsnums));/*global $*/
/*jslint browser: true, unparam: true, vars: true, plusplus: true, maxerr: 50, indent: 4 */


// list structures (pairs, empty)
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.lists = exports;


    var Empty = function () {
    };
    Empty.EMPTY = new Empty();
    var EMPTY = Empty.EMPTY;



    Empty.prototype.equals = function (other, aUnionFind) {
        return other instanceof Empty;
    };

    Empty.prototype.hashCode = function(depth) {
        return baselib.hashes.getEqualHashCode("empty");
    };


    Empty.prototype.reverse = function () {
        return this;
    };

    Empty.prototype.toWrittenString = function (cache) { return "empty"; };
    Empty.prototype.toDisplayedString = function (cache) { return "empty"; };
    Empty.prototype.toString = function (cache) { return "()"; };

    Empty.prototype.toDomNode = function(params) {
        if (params.getMode() === "display") {
            return $("<span/>").text("()").get(0);
        } else if (params.getMode() === "write") {
            return $("<span/>").text("()").get(0);
        } else if (params.getMode() === "print") {
            if (params.getDepth() === 0) {
                return $("<span/>").text("'()").get(0);
            } else {
                return $("<span/>").text("()").get(0);
            }
        } else if (params.getMode() === "constructor") {
            return $("<span/>").text("(list)").get(0);
        } else {
            return $("<span/>").text("()").get(0);
        }
    };

    // Empty.append: (listof X) -> (listof X)
    Empty.prototype.append = function (b) {
        return b;
    };



    //////////////////////////////////////////////////////////////////////

    // Cons Pairs

    var Cons = function (first, rest) {
        this.first = first;
        this.rest = rest;
    };

    var makePair = function (first, rest) {
        return new Cons(first, rest);
    };

    Cons.prototype.reverse = function () {
        var lst = this;
        var ret = EMPTY;
        while (lst !== EMPTY) {
            ret = makePair(lst.first, ret);
            lst = lst.rest;
        }
        return ret;
    };

    // FIXME: can we reduce the recursion on this?
    Cons.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof Cons)) {
            return false;
        }
        return (baselib.equality.equals(this.first, other.first, aUnionFind) &&
                baselib.equality.equals(this.rest, other.rest, aUnionFind));
    };

    Cons.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Cons");
        k += baselib.hashes.getEqualHashCode(this.first, depth);
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.rest, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };



    // Cons.append: (listof X) -> (listof X)
    Cons.prototype.append = function (b) {
        if (b === EMPTY) {
            return this;
        }
        var ret = b;
        var lst = this.reverse();
        while (lst !== EMPTY) {
            ret = makePair(lst.first, ret);
            lst = lst.rest;
        }
        return ret;
    };


    Cons.prototype.toWrittenString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toWrittenString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toWrittenString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };

    Cons.prototype.toString = Cons.prototype.toWrittenString;

    Cons.prototype.toDisplayedString = function (cache) {
        cache.put(this, true);
        var texts = [];
        var p = this;
        while (p instanceof Cons) {
            texts.push(baselib.format.toDisplayedString(p.first, cache));
            p = p.rest;
            if (typeof (p) === 'object' && cache.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            texts.push('.');
            texts.push(baselib.format.toDisplayedString(p, cache));
        }
        return "(" + texts.join(" ") + ")";
    };



    Cons.prototype.toDomNode = function (params) {
        var node;

        var subelts = [], dottedPair = false, i;
        var p = this;
        while (p instanceof Cons) {
            subelts.push(params.recur(p.first));
            p = p.rest;
            if (typeof (p) === 'object' && params.containsKey(p)) {
                break;
            }
        }
        if (p !== EMPTY) {
            dottedPair = true;
            subelts.push(params.recur(p));
        }


        if (params.getMode() === 'constructor') {
            if (dottedPair) {
                node = subelts[subelts.length - 1];
                for (i = subelts.length - 2; i >= 0; i--) {
                    node = $('<span/>')
                        .text("(cons ")
                        .append(subelts[i])
                        .append(" ")
                        .append(node)
                        .append(")").get(0);
                }
                return node;
            } else {
                node = document.createElement("span");
                node.appendChild(document.createTextNode("("));
                node.appendChild(document.createTextNode("list"));
                node.appendChild(document.createTextNode(" "));
                node.appendChild(subelts[0]);
                for (i = 1; i < subelts.length; i++) {
                    node.appendChild(document.createTextNode(" "));
                    node.appendChild(subelts[i]);
                }
                node.appendChild(document.createTextNode(")"));
                return node;
            }
        }

        node = document.createElement('span');
        if (params.getMode() === 'print') {
            node.appendChild(document.createTextNode("'"));
        }
        node.appendChild(document.createTextNode("("));
        node.appendChild(subelts[0]);
        if (subelts.length > 1) {
            for (i = 1; i < subelts.length - 1; i++) {
                node.appendChild(document.createTextNode(" "));
                node.appendChild(subelts[i]);
            }
            if (dottedPair) {
                node.appendChild(document.createTextNode(" "));
                node.appendChild(document.createTextNode("."));
            }
            node.appendChild(document.createTextNode(" "));
            node.appendChild(subelts[subelts.length - 1]);
        }
        node.appendChild(document.createTextNode(")"));
        return node;
    };


    var isPair = function (x) { return x instanceof Cons; };
    var isEmpty = function (x) { return x === EMPTY; };



    var makeList = function () {
        var result = EMPTY, i;
        for (i = arguments.length - 1; i >= 0; i--) {
            result = makePair(arguments[i], result);
        }
        return result;
    };


    var arrayToList = function (arr) {
        var result = EMPTY, i;
        for (i = arr.length -1; i >= 0; i--) {
            result = makePair(arr[i], result);
        }
        return result;
    };


    // Coerse a list back into a JavaScript array.
    var listToArray = function (lst) {
        var result = [];
        while (lst !== EMPTY) {
            result.push(lst.first);
            lst = lst.rest;
        }
        return result;
    };


    // isList: Any -> Boolean
    // Returns true if x is a list (a chain of pairs terminated by EMPTY).
    var isList = function (x) {
        var tortoise, hare;
        tortoise = hare = x;
        if (hare === EMPTY) { 
            return true; 
        }
        if (!(hare instanceof Cons)) { return false; }
        while (true) {
            // Loop invariant: at the beginning of the loop, both tortoise
            // and hare should be pointing to a cons cell.
            tortoise = tortoise.rest; 
            hare = hare.rest;
            if (hare instanceof Cons) { 
                // optimization to get amortized linear time isList:
                if (hare._isList !== void(0)) { 
                    tortoise._isList = hare._isList; return hare._isList; 
                }
                hare = hare.rest; 
                // optimization to get amortized linear time isList:
                if (hare instanceof Cons && hare._isList !== void(0)) { 
                    tortoise._isList = hare._isList; return hare._isList; 
                }
            }
            if (hare === EMPTY) { 
                // optimization to get amortized linear time isList:
                tortoise._isList = true;
                return true; 
            }
            if (tortoise === hare) {
                tortoise._isList = false;
                return false; 
            }
            if (!(hare instanceof Cons)) { 
                tortoise._isList = false;
                return false; 
            }
        }
    };



    var reverse = function (lst) {
        var rev = EMPTY;
        while (lst !== EMPTY) {
            rev = makePair(lst.first, rev);
            lst = lst.rest;
        }
        return rev;
    };


    var length = function (lst) {
        var len = 0;
        while (lst !== EMPTY) {
            len++;
            lst = lst.rest;
        }
        return len;
    };


    var listRef = function (lst, n) {
        var i;
        for (i = 0; i < n; i++) {
            lst = lst.rest;
        }
        return lst.first;
    };



    //////////////////////////////////////////////////////////////////////

    exports.EMPTY = EMPTY;
    exports.Empty = Empty;
    exports.Cons = Cons;
    exports.isPair = isPair;
    exports.isList = isList;
    exports.isEmpty = isEmpty;
    exports.makePair = makePair;
    exports.makeList = makeList;
    exports.reverse = reverse;
    exports.length = length;
    exports.listRef = listRef;
    exports.listToArray = listToArray;
    exports.arrayToList = arrayToList;

}(this.plt.baselib));// vectors
/*jslint devel: false, browser: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.vectors = exports;



    var Vector = function (initialElements) {
        this.elts = initialElements;
        this.mutable = true;
    };

    Vector.makeInstance = function (elts) {
        return new Vector(elts);
    };

    Vector.prototype.length = function () {
        return this.elts.length;
    };

    Vector.prototype.ref = function (k) {
        return this.elts[k];
    };

    Vector.prototype.set = function (k, v) {
        this.elts[k] = v;
    };

    Vector.prototype.equals = function (other, aUnionFind) {
        var i;
        if (other instanceof Vector) {
            if (other.length() !== this.length()) {
                return false;
            }
            for (i = 0; i <  this.length(); i++) {
                if (!(baselib.equality.equals(this.elts[i], other.elts[i], aUnionFind))) {
                    return false;
                }
            }
            return true;
        } else {
            return false;
        }
    };

    Vector.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Vector");
        var i;
        k = baselib.hashes.hashMix(k);
        for (i = 0; i < this.elts.length; i++) {
            k += baselib.hashes.getEqualHashCode(this.elts[i], depth);
            k = baselib.hashes.hashMix(k);
        }
        return k;
    };

    Vector.prototype.toList = function () {
        var ret = baselib.lists.EMPTY, i;
        for (i = this.length() - 1; i >= 0; i--) {
            ret = baselib.lists.makePair(this.elts[i], ret);           
        }       
        return ret;
    };

    Vector.prototype.toWrittenString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toWrittenString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDisplayedString = function (cache) {
        var texts = [], i;
        cache.put(this, true);
        for (i = 0; i < this.length(); i++) {
            texts.push(baselib.format.toDisplayedString(this.ref(i), cache));
        }
        return "#(" + texts.join(" ") + ")";
    };

    Vector.prototype.toDomNode = function (params) {
        var node = document.createElement("span"), i;
        if (params.getMode() === 'constructor') {
            node.appendChild(document.createTextNode("(vector"));
            for (i = 0; i < this.length(); i++) {
                node.appendChild(document.createTextNode(" "));
                node.appendChild(params.recur(this.ref(i)));
            }
            node.appendChild(document.createTextNode(")"));
        } else {
            node.appendChild(document.createTextNode("#("));
            for (i = 0; i < this.length(); i++) {
                node.appendChild(params.recur(this.ref(i)));
                if (i !== this.length() - 1) {
                    node.appendChild(document.createTextNode(" "));
                }
            }
            node.appendChild(document.createTextNode(")"));
        }
        return node;
    };


    var isVector = function (x) { return x instanceof Vector; };

    // makeVector: x ... -> vector
    var makeVector = Vector.makeInstance;

    var makeVectorImmutable = function (elts) {
        var v = Vector.makeInstance(elts);
        v.mutable = false;
        return v;
    };



    //////////////////////////////////////////////////////////////////////

    exports.Vector = Vector;
    exports.isVector = isVector;
    exports.makeVector = makeVector;
    exports.makeVectorImmutable = makeVectorImmutable;


}(this.plt.baselib));// Single characters
(function(baselib) {
    var exports = {};
    baselib.chars = exports;


    // Chars
    // Char: string -> Char
    var Char = function(val){
        this.val = val;
    };
    // The characters less than 256 must be eq?, according to the
    // documentation:
    // http://docs.racket-lang.org/reference/characters.html
    var _CharCache = {};
    for (var i = 0; i < 256; i++) {
        _CharCache[String.fromCharCode(i)] = new Char(String.fromCharCode(i));
    }
    
    // makeInstance: 1-character string -> Char  
    Char.makeInstance = function(val){
        if (_CharCache[val]) {
	    return _CharCache[val];
        }
        return new Char(val);
    };

    Char.prototype.toString = function(cache) {
	var code = this.val.charCodeAt(0);
	var returnVal;
	switch (code) {
	case 0: returnVal = '#\\nul'; break;
	case 8: returnVal = '#\\backspace'; break;
	case 9: returnVal = '#\\tab'; break;
	case 10: returnVal = '#\\newline'; break;
	case 11: returnVal = '#\\vtab'; break;
	case 12: returnVal = '#\\page'; break;
	case 13: returnVal = '#\\return'; break;
	case 20: returnVal = '#\\space'; break;
	case 127: returnVal = '#\\rubout'; break;
	default: if (code >= 32 && code <= 126) {
	    returnVal = ("#\\" + this.val);
	}
	    else {
		var numStr = code.toString(16).toUpperCase();
		while (numStr.length < 4) {
		    numStr = '0' + numStr;
		}
		returnVal = ('#\\u' + numStr);
	    }
	    break;
	}
	return returnVal;
    };

    Char.prototype.toWrittenString = Char.prototype.toString;

    Char.prototype.toDisplayedString = function (cache) {
        return this.val;
    };

    Char.prototype.getValue = function() {
        return this.val;
    };

    Char.prototype.equals = function(other, aUnionFind){
        return other instanceof Char && this.val == other.val;
    };

    Char.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode('Char');
        k += this.val.charCodeAt(0);
        k = baselib.hashes.hashMix(k);
        return k;
    };


    exports.Char = Char;
    exports.makeChar = Char.makeInstance;
    exports.isChar = plt.baselib.makeClassPredicate(Char);


})(this['plt'].baselib);/*jslint devel: false, browser: true, unparam: true, vars: true, plusplus: true, maxerr: 500, indent: 4 */
// Structure types
(function (baselib) {
    "use strict";
    var exports = {};
    baselib.symbols = exports;


    //////////////////////////////////////////////////////////////////////
    
    // Symbols

    //////////////////////////////////////////////////////////////////////
    var Symbol = function (val) {
        this.val = val;
    };

    var symbolCache = {};
    
    // makeSymbol: string -> Symbol.
    // Interns a symbol.
    var makeSymbol = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(symbolCache.hasOwnProperty(val))) {
            symbolCache[val] = new Symbol(val);
        }
        return symbolCache[val];
    };
    
    Symbol.prototype.equals = function (other, aUnionFind) {
        return other instanceof Symbol &&
            this.val === other.val;
    };

    Symbol.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Symbol");
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.val);
        k = baselib.hashes.hashMix(k);
        return k;
    };
    

    Symbol.prototype.toString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toDisplayedString = function (cache) {
        return this.val;
    };

    Symbol.prototype.toDomNode = function(params) {
        if (params.getMode() === 'write') {
            return $("<span/>").text(this.val).get(0);
        }
        if (params.getMode() === 'display') {
            return $("<span/>").text(this.val).get(0);
        }
        if (params.getMode() === 'print') {
            if (params.getDepth() === 0) {
                return $("<span/>").text("'" + this.val).get(0);
            } else {
                return $("<span/>").text(this.val).get(0);
            }
        }
        if (params.getMode() === 'constructor') {
            return $("<span/>").text("'" + this.val).get(0);
        }

        return $("<span/>").text(this.val).get(0);
    };
    


    var isSymbol = function (x) { return x instanceof Symbol; };




    //////////////////////////////////////////////////////////////////////

    exports.Symbol = Symbol;
    exports.makeSymbol = makeSymbol;
    exports.isSymbol = isSymbol;

}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */


// Strings

// Strings are either mutable or immutable.  immutable strings are represented
// as regular JavaScript strings.  Mutable ones are represented as instances
// of the Str class.

(function (baselib) {
    'use strict';
    var exports = {};

    baselib.strings = exports;


    // chars: arrayof string
    // Precondition: each string must only be 1 character long or bad things
    // happen.
    var Str = function (chars) {
	this.chars = chars;
	this.length = chars.length;
	this.mutable = true;
    };

    Str.makeInstance = function (chars) {
	return new Str(chars);
    };

    Str.fromString = function (s) {
	return Str.makeInstance(s.split(""));
    };

    Str.prototype.toString = function () {
	return this.chars.join("");
    };

    var replaceUnprintableStringChars = function (s) {
	var ret = [], i;
	for (i = 0; i < s.length; i++) {
	    var val = s.charCodeAt(i);
	    switch(val) {
	    case 7: ret.push('\\a'); break;
	    case 8: ret.push('\\b'); break;
	    case 9: ret.push('\\t'); break;
	    case 10: ret.push('\\n'); break;
	    case 11: ret.push('\\v'); break;
	    case 12: ret.push('\\f'); break;
	    case 13: ret.push('\\r'); break;
	    case 34: ret.push('\\"'); break;
	    case 92: ret.push('\\\\'); break;
	    default: 
                if (val >= 32 && val <= 126) {
		    ret.push( s.charAt(i) );
	        }
		else {
		    var numStr = val.toString(16).toUpperCase();
		    while (numStr.length < 4) {
			numStr = '0' + numStr;
		    }
		    ret.push('\\u' + numStr);
		}
		break;
	    }
	}
	return ret.join('');
    };

    var escapeString = function (s) {
        return '"' + replaceUnprintableStringChars(s) + '"';
    };

    Str.prototype.toWrittenString = function (cache) {
        return escapeString(this.toString());
    };

    Str.prototype.toDisplayedString = Str.prototype.toString;

    Str.prototype.copy = function () {
	return Str.makeInstance(this.chars.slice(0));
    };

    Str.prototype.substring = function (start, end) {
	if (end === null || end === void(0)) {
	    end = this.length;
	}
	return Str.makeInstance( this.chars.slice(start, end) );
    };

    Str.prototype.charAt = function (index) {
	return this.chars[index];
    };

    Str.prototype.charCodeAt = function (index) {
	return this.chars[index].charCodeAt(0);
    };

    Str.prototype.replace = function (expr, newStr) {
	return Str.fromString(this.toString().replace(expr, newStr) );
    };


    Str.prototype.equals = function (other, aUnionFind) {
	if ( !(other instanceof Str || typeof(other) === 'string') ) {
	    return false;
	}
	return this.toString() === other.toString();
    };

    Str.prototype.hashCode = function(depth) {
        return baselib.hashes.getEqualHashCode(this.toString());
    };


    Str.prototype.set = function (i, c) {
	this.chars[i] = c;
    };

    Str.prototype.toUpperCase = function () {
	return Str.fromString(this.chars.join("").toUpperCase() );
    };

    Str.prototype.toLowerCase = function () {
	return Str.fromString(this.chars.join("").toLowerCase() );
    };

    Str.prototype.match = function (regexpr) {
	return this.toString().match(regexpr);
    };



    var isString = function (s) {
	return (typeof s === 'string' || 
                s instanceof Str);
    };

    var isMutableString = baselib.makeClassPredicate(Str);



    exports.Str = Str;
    exports.escapeString = escapeString;
    exports.isString = isString;
    exports.isMutableString = isMutableString;
    exports.makeMutableString = Str.makeInstance;

}(this.plt.baselib));/*jslint unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */



(function(baselib) {
    'use strict';
    var exports = {};
    baselib.bytes = exports;

    // Bytes

    var Bytes = function(bts, mutable) {
        // bytes: arrayof [0-255]
        this.bytes = bts;
        this.mutable = (mutable === void(0)) ? false : mutable;
    };

    Bytes.prototype.get = function(i) {
	return this.bytes[i];
    };

    Bytes.prototype.set = function(i, b) {
	if (this.mutable) {
	    this.bytes[i] = b;
	}
    };

    Bytes.prototype.length = function() {
	return this.bytes.length;
    };

    Bytes.prototype.copy = function(mutable) {
	return new Bytes(this.bytes.slice(0), mutable);
    };

    Bytes.prototype.subbytes = function(start, end) {
	if (end === null || end === void(0)) {
	    end = this.bytes.length;
	}
	return new Bytes( this.bytes.slice(start, end), true );
    };


    Bytes.prototype.equals = function(other) {
        if (! (other instanceof Bytes)) {
	    return false;
        }
        if (this.bytes.length !== other.bytes.length) {
	    return false;
        }
        var A = this.bytes;
        var B = other.bytes;
        var n = this.bytes.length;
        var i;
        for (i = 0; i < n; i++) {
	    if (A[i] !== B[i]) {
	        return false;
            }
        }
        return true;
    };

    Bytes.prototype.hashCode = function(depth) {
        var i;
        var k = baselib.hashes.getEqualHashCode('Bytes');
        for (i = 0; i < this.bytes.length; i++) {
            k += this.bytes[i];
            k = baselib.hashes.hashMix(k);
        }
        return k;
    };


    Bytes.prototype.toString = function(cache) {
	var ret = [], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(String.fromCharCode(this.bytes[i]));
	}

	return ret.join('');
    };

    Bytes.prototype.toDisplayedString = Bytes.prototype.toString;

    var escapeByte = function(aByte) {
	var ret = [];
	var returnVal;
	switch(aByte) {
	case 7: returnVal = '\\a'; break;
	case 8: returnVal = '\\b'; break;
	case 9: returnVal = '\\t'; break;
	case 10: returnVal = '\\n'; break;
	case 11: returnVal = '\\v'; break;
	case 12: returnVal = '\\f'; break;
	case 13: returnVal = '\\r'; break;
	case 34: returnVal = '\\"'; break;
	case 92: returnVal = '\\\\'; break;
	default: if (aByte >= 32 && aByte <= 126) {
	    returnVal = String.fromCharCode(aByte);
	}
	    else {
		ret.push( '\\' + aByte.toString(8) );
	    }
	    break;
	}
	return returnVal;
    };

    Bytes.prototype.toWrittenString = function() {
	var ret = ['#"'], i;
	for (i = 0; i < this.bytes.length; i++) {
	    ret.push(escapeByte(this.bytes[i]));
	}
	ret.push('"');
	return ret.join('');
    };

    var makeBytes = function(chars) {
        return new Bytes(chars);
    };

    var makeBytesFromBase64 = function(byteString) {
        return new Bytes(Base64.decode(byteString));
    };


    var isBytes = baselib.makeClassPredicate(Bytes);


    exports.Bytes = Bytes;
    exports.makeBytes = makeBytes;
    exports.makeBytesFromBase64 = makeBytesFromBase64;
    exports.isBytes = isBytes;


}(this.plt.baselib));(function() {
/**
 * Copyright 2010 Tim Down.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * jshashtable
 *
 * jshashtable is a JavaScript implementation of a hash table. It creates a single constructor function called Hashtable
 * in the global scope.
 *
 * Author: Tim Down <tim@timdown.co.uk>
 * Version: 2.1
 * Build date: 21 March 2010
 * Website: http://www.timdown.co.uk/jshashtable
 */

var Hashtable = (function() {
	var FUNCTION = "function";

	var arrayRemoveAt = (typeof Array.prototype.splice == FUNCTION) ?
		function(arr, idx) {
			arr.splice(idx, 1);
		} :

		function(arr, idx) {
			var itemsAfterDeleted, i, len;
			if (idx === arr.length - 1) {
				arr.length = idx;
			} else {
				itemsAfterDeleted = arr.slice(idx + 1);
				arr.length = idx;
				for (i = 0, len = itemsAfterDeleted.length; i < len; ++i) {
					arr[idx + i] = itemsAfterDeleted[i];
				}
			}
		};

	function hashObject(obj) {
		var hashCode;
		if (typeof obj == "string") {
			return obj;
		} else if (typeof obj.hashCode == FUNCTION) {
			// Check the hashCode method really has returned a string
			hashCode = obj.hashCode();
			return (typeof hashCode == "string") ? hashCode : hashObject(hashCode);
		} else if (typeof obj.toString == FUNCTION) {
			return obj.toString();
		} else {
			try {
				return String(obj);
			} catch (ex) {
				// For host objects (such as ActiveObjects in IE) that have no toString() method and throw an error when
				// passed to String()
				return Object.prototype.toString.call(obj);
			}
		}
	}

	function equals_fixedValueHasEquals(fixedValue, variableValue) {
		return fixedValue.equals(variableValue);
	}

	function equals_fixedValueNoEquals(fixedValue, variableValue) {
		return (typeof variableValue.equals == FUNCTION) ?
			   variableValue.equals(fixedValue) : (fixedValue === variableValue);
	}

	function createKeyValCheck(kvStr) {
		return function(kv) {
			if (kv === null) {
				throw new Error("null is not a valid " + kvStr);
			} else if (typeof kv == "undefined") {
				throw new Error(kvStr + " must not be undefined");
			}
		};
	}

	var checkKey = createKeyValCheck("key"), checkValue = createKeyValCheck("value");

	/*----------------------------------------------------------------------------------------------------------------*/

	function Bucket(hash, firstKey, firstValue, equalityFunction) {
        this[0] = hash;
		this.entries = [];
		this.addEntry(firstKey, firstValue);

		if (equalityFunction !== null) {
			this.getEqualityFunction = function() {
				return equalityFunction;
			};
		}
	}

	var EXISTENCE = 0, ENTRY = 1, ENTRY_INDEX_AND_VALUE = 2;

	function createBucketSearcher(mode) {
		return function(key) {
			var i = this.entries.length, entry, equals = this.getEqualityFunction(key);
			while (i--) {
				entry = this.entries[i];
				if ( equals(key, entry[0]) ) {
					switch (mode) {
						case EXISTENCE:
							return true;
						case ENTRY:
							return entry;
						case ENTRY_INDEX_AND_VALUE:
							return [ i, entry[1] ];
					}
				}
			}
			return false;
		};
	}

	function createBucketLister(entryProperty) {
		return function(aggregatedArr) {
			var startIndex = aggregatedArr.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				aggregatedArr[startIndex + i] = this.entries[i][entryProperty];
			}
		};
	}

	Bucket.prototype = {
		getEqualityFunction: function(searchValue) {
			return (typeof searchValue.equals == FUNCTION) ? equals_fixedValueHasEquals : equals_fixedValueNoEquals;
		},

		getEntryForKey: createBucketSearcher(ENTRY),

		getEntryAndIndexForKey: createBucketSearcher(ENTRY_INDEX_AND_VALUE),

		removeEntryForKey: function(key) {
			var result = this.getEntryAndIndexForKey(key);
			if (result) {
				arrayRemoveAt(this.entries, result[0]);
				return result[1];
			}
			return null;
		},

		addEntry: function(key, value) {
			this.entries[this.entries.length] = [key, value];
		},

		keys: createBucketLister(0),

		values: createBucketLister(1),

		getEntries: function(entries) {
			var startIndex = entries.length;
			for (var i = 0, len = this.entries.length; i < len; ++i) {
				// Clone the entry stored in the bucket before adding to array
				entries[startIndex + i] = this.entries[i].slice(0);
			}
		},

		containsKey: createBucketSearcher(EXISTENCE),

		containsValue: function(value) {
			var i = this.entries.length;
			while (i--) {
				if ( value === this.entries[i][1] ) {
					return true;
				}
			}
			return false;
		}
	};

	/*----------------------------------------------------------------------------------------------------------------*/

	// Supporting functions for searching hashtable buckets

	function searchBuckets(buckets, hash) {
		var i = buckets.length, bucket;
		while (i--) {
			bucket = buckets[i];
			if (hash === bucket[0]) {
				return i;
			}
		}
		return null;
	}

	function getBucketForHash(bucketsByHash, hash) {
		var bucket = bucketsByHash[hash];

		// Check that this is a genuine bucket and not something inherited from the bucketsByHash's prototype
		return ( bucket && (bucket instanceof Bucket) ) ? bucket : null;
	}

	/*----------------------------------------------------------------------------------------------------------------*/

	function Hashtable(hashingFunctionParam, equalityFunctionParam) {
		var that = this;
		var buckets = [];
		var bucketsByHash = {};

		var hashingFunction = (typeof hashingFunctionParam == FUNCTION) ? hashingFunctionParam : hashObject;
		var equalityFunction = (typeof equalityFunctionParam == FUNCTION) ? equalityFunctionParam : null;

		this.put = function(key, value) {
			checkKey(key);
			checkValue(value);
			var hash = hashingFunction(key), bucket, bucketEntry, oldValue = null;

			// Check if a bucket exists for the bucket key
			bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it already contains this key
				bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so replace old value and we're done.
					oldValue = bucketEntry[1];
					bucketEntry[1] = value;
				} else {
					// The bucket does not contain an entry for this key, so add one
					bucket.addEntry(key, value);
				}
			} else {
				// No bucket exists for the key, so create one and put our key/value mapping in
				bucket = new Bucket(hash, key, value, equalityFunction);
				buckets[buckets.length] = bucket;
				bucketsByHash[hash] = bucket;
			}
			return oldValue;
		};

		this.get = function(key) {
			checkKey(key);

			var hash = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);
			if (bucket) {
				// Check this bucket to see if it contains this key
				var bucketEntry = bucket.getEntryForKey(key);
				if (bucketEntry) {
					// This bucket entry is the current mapping of key to value, so return the value.
					return bucketEntry[1];
				}
			}
			return null;
		};

		this.containsKey = function(key) {
			checkKey(key);
			var bucketKey = hashingFunction(key);

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, bucketKey);

			return bucket ? bucket.containsKey(key) : false;
		};

		this.containsValue = function(value) {
			checkValue(value);
			var i = buckets.length;
			while (i--) {
				if (buckets[i].containsValue(value)) {
					return true;
				}
			}
			return false;
		};

		this.clear = function() {
			buckets.length = 0;
			bucketsByHash = {};
		};

		this.isEmpty = function() {
			return !buckets.length;
		};

		var createBucketAggregator = function(bucketFuncName) {
			return function() {
				var aggregated = [], i = buckets.length;
				while (i--) {
					buckets[i][bucketFuncName](aggregated);
				}
				return aggregated;
			};
		};

		this.keys = createBucketAggregator("keys");
		this.values = createBucketAggregator("values");
		this.entries = createBucketAggregator("getEntries");

		this.remove = function(key) {
			checkKey(key);

			var hash = hashingFunction(key), bucketIndex, oldValue = null;

			// Check if a bucket exists for the bucket key
			var bucket = getBucketForHash(bucketsByHash, hash);

			if (bucket) {
				// Remove entry from this bucket for this key
				oldValue = bucket.removeEntryForKey(key);
				if (oldValue !== null) {
					// Entry was removed, so check if bucket is empty
					if (!bucket.entries.length) {
						// Bucket is empty, so remove it from the bucket collections
						bucketIndex = searchBuckets(buckets, hash);
						arrayRemoveAt(buckets, bucketIndex);
						delete bucketsByHash[hash];
					}
				}
			}
			return oldValue;
		};

		this.size = function() {
			var total = 0, i = buckets.length;
			while (i--) {
				total += buckets[i].entries.length;
			}
			return total;
		};

		this.each = function(callback) {
			var entries = that.entries(), i = entries.length, entry;
			while (i--) {
				entry = entries[i];
				callback(entry[0], entry[1]);
			}
		};

		this.putAll = function(hashtable, conflictCallback) {
			var entries = hashtable.entries();
			var entry, key, value, thisValue, i = entries.length;
			var hasConflictCallback = (typeof conflictCallback == FUNCTION);
			while (i--) {
				entry = entries[i];
				key = entry[0];
				value = entry[1];

				// Check for a conflict. The default behaviour is to overwrite the value for an existing key
				if ( hasConflictCallback && (thisValue = that.get(key)) ) {
					value = conflictCallback(key, thisValue, value);
				}
				that.put(key, value);
			}
		};

		this.clone = function() {
			var clone = new Hashtable(hashingFunctionParam, equalityFunctionParam);
			clone.putAll(that);
			return clone;
		};
	}

	return Hashtable;
})();/*jslint plusplus: true, vars: true, white: true, nomen: true, maxerr: 50, indent: 4 */

var LLRBTree = {};

// The code basically follows the structure of
// https://github.com/kazu-yamamoto/llrbtree
//
// Mostly comes from the code in:
//
// https://github.com/kazu-yamamoto/llrbtree/blob/master/Data/RBTree/LL.hs
//
// as well as:
//
// https://github.com/kazu-yamamoto/llrbtree/blob/master/Data/RBTree/Internal.hs

(function() {
    'use strict';

    // function declarations
    var turnR, turnB;
    var insert_, balanceL, balanceR, replaceX, remove_;
    var removeLT, removeGT, removeEQ;
    var isRed, isBlack, isBlackLeftBlack, isBlackLeftRed;
    var hardMin;
    var minimum, removeMin_;


    // red and black colors.
    var R = "R", B = "B";

    // An rbtree is either a Leaf or a Node.

    var Node = function(c, //h,
                        l, x, r) {
        this.c = c; // color: (U R B)
        //this.h = h; // height: int
        this.l = l; // left: rbtree
        this.x = x; // x : element
        this.r = r; // right: rbtree
    };



    var Leaf = function() {};
    // WARNING: DO NOT CONSTRUCT ANY OTHER INSTANCES OF LEAF, OR BAD
    // THINGS WILL HAPPEN.
    var EMPTY = new Leaf();






    var items_ = function(tree, elts) {
        if (tree === EMPTY) { return; }
        items_(tree.l, elts);
        elts.push(tree.x);
        items_(tree.r, elts);
    };

    var items = function(tree) {
        var elts = [];
        items_(tree, elts);
        return elts;
    };



    // Either returns the element, or undefined if we hit a leaf.
    var find = function(tree, x, cmp) {
        while (true) {
            if (tree === EMPTY) { return undefined; }
            else {
                var cmpval = cmp(x, tree.x);
                if (cmpval < 0) {
                    tree = tree.l;
                } else if (cmpval > 0) {
                    tree = tree.r;
                } else {
                    return tree.x;
                }
            }
        }
    };

    var contains = function(tree, x, cmp) {
        while (true) {
            if (tree === EMPTY) { return false; }
            else {
                var cmpval = cmp(x, tree.x);
                if (cmpval < 0) {
                    tree = tree.l;
                } else if (cmpval > 0) {
                    tree = tree.r;
                } else {
                    return true;
                }
            }
        }
    };


    var insert = function(tree, x, cmp) {
        return turnB(insert_(tree, x, cmp));
    };

    insert_ = function(tree, x, cmp) {
        var cmpval;
        if (tree === EMPTY) {
            return new Node(R, //1,
                            EMPTY, x, EMPTY);
        } else {
            cmpval = cmp(x, tree.x);
            if (cmpval < 0) {
                return balanceL(tree.c,// tree.h, 
                                insert_(tree.l, x, cmp), tree.x, tree.r);
            } else if (cmpval > 0) {
                return balanceR(tree.c,// tree.h,
                                tree.l, tree.x, insert_(tree.r, x, cmp));
            } else {
                return replaceX(tree, x);
            }
        }
    };

    balanceL = function(c,// h,
                        l, x, r) {
        if (c === B &&
            l !== EMPTY && l.c === R 
            && l.l !== EMPTY && l.l.c === R) {
            return new Node(R,// h+1,
                            turnB(l.l), l.x, new Node(B, //h,
                                                      l.r, x, r));
        } else {
            return new Node(c,// h,
                            l, x, r);
        }
    };

    balanceR = function(c,// h,
                        l, x, r) {
        if (c === B &&
           l !== EMPTY && l.c === R &&
           r !== EMPTY && r.c === R) {
            return new Node(R,// h+1,
                            turnB(l), x, turnB(r));
        } else if (r !== EMPTY &&
                  r.c === R) {
            return new Node(c,// h,
                            new Node(R,// r.h,
                                     l, x, r.l), r.x, r.r);
        } else {
            return new Node(c,// h,
                            l, x, r);
        }
    };


    var remove = function(tree, x, cmp) {
        var removed;
        if (tree === EMPTY) { 
            return tree; 
        } else {
            removed = remove_(turnR(tree), x, cmp);
            if (removed === EMPTY) {
                return removed;
            } else {
                return turnB(removed);
            }
        }
    };

    remove_ = function(tree, x, cmp) {
        var cmpval;
        if (tree === EMPTY) { 
            return tree; 
        } else {
            cmpval = cmp(x, tree.x);
            if (cmpval < 0) {
                return removeLT(x, tree.c,// tree.h,
                                tree.l, tree.x, tree.r, cmp);
            } else if (cmpval > 0) { 
                return removeGT(x, tree.c,// tree.h,
                                tree.l, tree.x, tree.r, cmp);
            } else {
                return removeEQ(x, tree.c,// tree.h,
                                tree.l, tree.x, tree.r, cmp);
            }
        }
    };

    removeLT = function(kx, c,// h,
                        l, x, r, cmp) {
        var isBB;
        var isBR;
        if (c === R) {
            isBB = isBlackLeftBlack(l);
            isBR = isBlackLeftRed(r);
            if (isBB && isBR) {
                return new Node(R,
                                //h,
                                new Node(B,// r.h,
                                         remove_(turnR(l), kx, cmp), x, r.l.l),
                                r.l.x,
                                new Node(B,// r.h,
                                         r.l.r, r.x, r.r));
            } else if (isBB) {
                return balanceR(B,// h-1,
                                remove_(turnR(l), kx, cmp), x, turnR(r));
            }
        }
        return new Node(c,// h,
                        remove_(l, kx, cmp), x,  r);
    };


    removeGT = function(kx, c,// h,
                        l, x, r, cmp) {
        var isBB, isBR;
        if (l !== EMPTY && l.c === R) {
            return balanceR(c,// h,
                            l.l, l.x, remove_(new Node(R,// h,
                                                             l.r, x, r), kx, cmp));
        }
        if (c === R) {
            isBB = isBlackLeftBlack(r);
            isBR = isBlackLeftRed(l);
            if (isBB && isBR) {
                return new Node(R, 
                                //h,
                                turnB(l.l), 
                                l.x, 
                                balanceR(B,// l.h,
                                         l.r, x, remove_(turnR(r), kx, cmp)));
            } 
            if (isBB) {
                return balanceR(B,// h-1,
                                turnR(l), x, remove_(turnR(r), kx, cmp));
            }
        }
        if (c === R) {
            return new Node(R,// h,
                            l, x, remove_(r, kx, cmp));
        }
        throw new Error("removeGT");
    };

    removeEQ = function(kx, c,// h,
                        l, x, r, cmp) {
        var isBB, isBR, m;
        if (c === R && l === EMPTY && r === EMPTY) {
            return EMPTY;
        }
        if (l !== EMPTY && l.c === R) {
            return balanceR(c,// h,
                            l.l, l.x, remove_(new Node(R,// h,
                                                             l.r, x, r), kx, cmp));
        }
        if (c === R) {
            isBB = isBlackLeftBlack(r);
            isBR = isBlackLeftRed(l);
            if (isBB && isBR) {
                m = minimum(r);
                return balanceR(R,// h,
                                turnB(l.l), l.x, balanceR(B,// l.h,
                                                          l.r, m, removeMin_(turnR(r))));
            }
            if (isBB) {
                m = minimum(r);
                return balanceR(B,// h-1,
                                turnR(l), m, removeMin_(turnR(r)));
            }
        }
        if (c === R &&
            r !== EMPTY && r.c === B) {
            m = minimum(r);
            return new Node(R,// h,
                            l, m, new Node(B,// r.h,
                                           removeMin_(r.l), r.x, r.r));
        }
        throw new Error("removeEQ");
    };


    removeMin_ = function(t) {
        // var h;
        var l, x, r, isBB, isBR;
        if (t !== EMPTY && t.c === R && 
            t.l === EMPTY && t.r === EMPTY) {
            return EMPTY;
        }
        if (t !== EMPTY && t.c === R) {
            //h = t.h;
            l = t.l; x = t.x; r = t.r;
            isBB = isBlackLeftBlack(l);
            isBR = isBlackLeftRed(r);
            if (isRed(l)) {
                return new Node(R,// h,
                                removeMin_(l), x, r);
            } else if (isBB && isBR) {
                return hardMin(t);
            } else if (isBB) {
                return balanceR(B,// h-1,
                                removeMin_(turnR(l)), x, turnR(r));
            } else {
                return new Node(R,// h,
                                new Node(B,// l.h,
                                         removeMin_(l.l), l.x, l.r), x, r);
            }
        }
        throw new Error("removeMin");
    };


    hardMin = function(t) {
        if (t !== EMPTY && t.c === R &&
            t.r !== EMPTY && t.r.c === B &&
            t.r.l !== EMPTY && t.r.l.c === R) {
            return new Node(R,
                            //t.h, 
                            new Node(B,// t.r.h,
                                     removeMin_(turnR(t.l)), t.x, t.r.l.l), 
                            t.r.l.x,
                            new Node(B,// t.r.h,
                                     t.r.l.r, t.r.x, t.r.r));
        }
        throw new Error("hardMin");
    };



    //////////////////////////////////////////////////////////////////////

    // turnB: llrbtree -> llrbtree
    turnB = function(tree) {
        if (tree === EMPTY) { throw new Error("turnB"); }
        return new Node(B, //tree.h,
                        tree.l, tree.x, tree.r);
    };

    // turnR: llrbtree -> llrbtree
    turnR = function(tree) {
        if (tree === EMPTY) { throw new Error("turnR"); }
        return new Node(R, //tree.h,
                        tree.l, tree.x, tree.r);
    };

    // turnR: llrbtree x -> llrbtree
    replaceX = function(tree, x) {
        if (tree === EMPTY) { throw new Error("replaceElt"); }
        return new Node(tree.c, //tree.h,
                        tree.l, x, tree.r);
    };

    // isBlack: llrbtree -> boolean
    isBlack = function(tree) {
        if (tree === EMPTY) { return true; }
        return tree.c === B;
    };

    // isRed: llrbtree -> boolean
    isRed = function(tree) {
        if (tree === EMPTY) { return false; }
        return tree.c === R;
    };

    // isBlackLeftBlack: llrbtree -> boolean
    isBlackLeftBlack = function(tree) {
        if (tree !== EMPTY) {
            if (tree.c === B) {
                if (tree.l === EMPTY) {
                    return true;
                } else {
                    return tree.l.c === B;
                }
            } else {
                return false;
            }
        } else {
            return false;
        }
    };


    // isBlackLeftRed: llrbtree -> boolean
    isBlackLeftRed = function(tree) {
        if (tree !== EMPTY) {
            if (tree.c === B) {
                if (tree.l !== EMPTY) {
                    return tree.l.c === R;
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            return false;
        }
    };


    // minimum: llrbtree -> X
    // Returns the minimum element in the tree.
    minimum = function(tree) {
        if (tree === EMPTY) { throw new Error("minimum"); }
        while(true) {
            if (tree.l === EMPTY) { 
                return tree.x;
            }
            tree = tree.l;
        }
    };



    //////////////////////////////////////////////////////////////////////
    // This Map makes it easier to use the llrbtree as an associative array.
    // The nodes on the tree are key/value pairs, the comparator of which
    // focuses only on the key portion of the pair.
    
    var Map = function(cmp, tree) {
        this.cmp = cmp;
        this.tree = tree;
    };

    var makeMap = function(keycmp) {
        keycmp = keycmp || function(x, y) { var sx = String(x), sy = String(y);
                                            if (sx < sy) { return -1; }
                                            if (sx > sy) { return 1; }
                                            return 0; };
        return new Map(
            function(n1, n2) {
                return keycmp(n1[0], n2[0]);
            },
            EMPTY);
    };

    Map.prototype.put = function(key, val) {
        return new Map(this.cmp,
                       insert(this.tree, [key, val], this.cmp));
    };

    Map.prototype.contains = function(key) {
        return contains(this.tree, [key, undefined], this.cmp);
    };

    var defaultOnFail = function() { 
        throw new Error("lookup failed"); 
    }; 

    Map.prototype.get = function(key, onFail) {
        var x;
        onFail = onFail || defaultOnFail;
        x = find(this.tree, [key, undefined], this.cmp);
        if (x === undefined) { return onFail(); }
        return x[1];
    };

    Map.prototype.remove = function(key) {
        return new Map(this.cmp,
                       remove(this.tree, [key, undefined], this.cmp));
    };

    Map.prototype.isEmpty = function() {
        return this.tree === EMPTY;
    };

    Map.prototype.keys = function() {
        var result = items(this.tree), i;
        for (i = 0; i < result.length; i++) {
            result[i] = result[i][0];
        }
        return result;
    };

    Map.prototype.values = function() {
        var result = items(this.tree), i;
        for (i = 0; i < result.length; i++) {
            result[i] = result[i][1];
        }
        return result;
    };

    Map.prototype.items = function() {
        var result = items(this.tree), i;
        for (i = 0; i < result.length; i++) {
            // Make sure to copy so that you can't damage the internal
            // key/value pairs.
            result[i] = result[i].slice(0);
        }
        return result;
    };

    // Return the color at the tree.
    Map.prototype.color = function() {
        if (this.tree === EMPTY) { return B; }
        return this.tree.c;
    };

    // Navigate left
    Map.prototype.left = function() {
        if (this.tree === EMPTY) { throw new Error("left"); }
        return new Map(this.cmp, this.tree.l);
    };

    // Navigate right
    Map.prototype.right = function() {
        if (this.tree === EMPTY) { throw new Error("right"); }
        return new Map(this.cmp, this.tree.r);
    };

    // Get the key at the tree
    Map.prototype.key = function() {
        if (this.tree === EMPTY) { throw new Error("key"); }
        return this.tree.x[0];
    };

    // Get the value at the tree.
    Map.prototype.val = function() {
        if (this.tree === EMPTY) { throw new Error("val"); }
        return this.tree.x[1];
    };





    //////////////////////////////////////////////////////////////////////
    LLRBTree.EMPTY = EMPTY;
    LLRBTree.insert = insert;
    LLRBTree.contains = contains;
    LLRBTree.find = find;
    LLRBTree.remove = remove;
    LLRBTree.items = items;


    LLRBTree.makeMap = makeMap;
}());/*jslint unparam: true, vars: true, white: true, newcap: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

/*global window,Hashtable*/

// Mutable hashtables.


(function (baselib, Hashtable) {
    'use strict';
    var exports = {};

    baselib.hashes = exports;


    
    var _eqHashCodeCounter = 0;
    var makeEqHashCode = function () {
        _eqHashCodeCounter++;
        return String(_eqHashCodeCounter);
    };


    // getEqHashCode: any -> string
    // Given a value, produces a hashcode appropriate for eq.
    var getEqHashCode = function (x) {
        if (typeof (x) === 'string') {
            return x;
        }
        if (typeof (x) === 'number') {
            return String(x);
        }
        if (x && !x._eqHashCode) {
            x._eqHashCode = makeEqHashCode();
        }
        if (x && x._eqHashCode) {
            return x._eqHashCode;
        }
        return '';
    };


    // getEqvHashCode: any -> string
    var getEqvHashCode = function (x) {
        if (baselib.numbers.isNumber(x)) {
            return baselib.numbers.toFixnum(x);
        }
        if (baselib.chars.isChar(x)) {
            return x.val;
        } 
        return getEqHashCode(x);
    };


    var eq = function (x, y) { return x === y; };
    var eqv = baselib.equality.eqv;
    var equal = function (x, y) {
        return baselib.equality.equals(x, y, new baselib.UnionFind()); 
    };


    // Creates a low-level hashtable, following the interface of 
    // http://www.timdown.co.uk/jshashtable/
    var makeLowLevelEqHash = function () {
        return new Hashtable(getEqHashCode,
                             function (x, y) { return x === y; });
    };


    var makeEqHashtable = function() { 
        return new WhalesongHashtable(
            "hasheq",
            getEqHashCode,
            eq,
            new Hashtable(getEqHashCode, eq));
    };

    var makeEqualHashtable = function() {
        return new WhalesongHashtable(
            "hash",
            getEqualHashCode,
            equal,
            new Hashtable(getEqualHashCode, equal));
    };
    
    
    var makeEqvHashtable = function() {
        return new WhalesongHashtable(
            "hasheqv",
            getEqvHashCode,
            eqv,
            new Hashtable(getEqvHashCode, eqv));
    };


    var makeImmutableEqHashtable = function() { 
        return makeEqHashtable().toImmutable();
    };

    var makeImmutableEqualHashtable = function() {
        return makeEqualHashtable().toImmutable();
    };
        
    var makeImmutableEqvHashtable = function() {
        return makeEqvHashtable().toImmutable();
    };


    // When we need to make comparators for the immutable hash tables, use this.
    var makeComparator = function(hash, eq) {
        return function(x, y) {
            var hx = hash(x), hy = hash(y);
            if (hx < hy) { return -1; }
            if (hx > hy) { return 1; }
            
            if (eq(x, y)) { return 0; }

            hx = getEqHashCode(x);
            hy = getEqHashCode(y);
            if (hx < hy) { return -1; }
            if (hx > hy) { return 1; }
            return 0;
        }
    };


    //////////////////////////////////////////////////////////////////////
    // Whalesong's Hashtables are a thin wrapper around the mutable Hashtable
    // class to make it printable and equatable.
    var WhalesongHashtable = function (type, hash_function, equality_function, hash) {
        this.type = type;
        this.hash_function = hash_function;
        this.equality_function = equality_function;
        this.hash = hash;
    };

    WhalesongHashtable.prototype.clone = function() {
        return new WhalesongHashtable(this.type, this.hash_function, this.equality_function, this.hash.clone());
    };

    WhalesongHashtable.prototype.size = function() {
        return this.hash.size();
    };

    WhalesongHashtable.prototype.toWrittenString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toWrittenString(keys[i], cache);
            var valStr = baselib.format.toWrittenString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };
    
    WhalesongHashtable.prototype.toDisplayedString = function (cache) {
        var keys = this.hash.keys();
        var ret = [], i;
        for (i = 0; i < keys.length; i++) {
            var keyStr = baselib.format.toDisplayedString(keys[i], cache);
            var valStr = baselib.format.toDisplayedString(this.hash.get(keys[i]), cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };

    WhalesongHashtable.prototype.keys = function() {
        return this.hash.keys();
    };

    WhalesongHashtable.prototype.values = function() {
        return this.hash.values();
    };


    WhalesongHashtable.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof WhalesongHashtable)) {
            return false; 
        }
        if (other.type !== this.type) { 
            return false;
        }
        if (this.hash.keys().length !== other.hash.keys().length) { 
            return false;
        }

        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++) {
            if (!(other.hash.containsKey(keys[i]) &&
                  baselib.equality.equals(this.hash.get(keys[i]),
                                          other.hash.get(keys[i]),
                                          aUnionFind))) {
                return false;
            }
        }
        return true;
    };

    WhalesongHashtable.prototype.hashCode = function(depth) {
        var k = getEqualHashCode(this.type);
        var keys = this.hash.keys(), i;
        for (i = 0; i < keys.length; i++) {
            k += hashMix(getEqualHashCode(this.hash.get(keys[i]), depth));
        }
        return hashMix(k);
    };


    WhalesongHashtable.prototype.get = function(key) {
        return this.hash.get(key);
    };

    WhalesongHashtable.prototype.put = function(key, value) {
        this.hash.put(key, value);
    };

    WhalesongHashtable.prototype.functionalPut = function(key, value) {
        return this.toImmutable().functionalPut(key, value);
    };

    WhalesongHashtable.prototype.remove = function(key) {
        this.hash.remove(key);
    };

    WhalesongHashtable.prototype.functionalRemove = function(key) {
        return this.toImmutable().functionalRemove(key);
    };

    WhalesongHashtable.prototype.containsKey = function(key) {
        return this.hash.containsKey(key);
    };

    WhalesongHashtable.prototype.isImmutable = function() {
        return false;
    };

    WhalesongHashtable.prototype.toImmutable = function() {
        var keycmp = makeComparator(this.hash_function, this.equality_function)
        var immutable = new WhalesongImmutableHashtable(
            this.type,
            this.hash_function,
            this.equality_function,
            LLRBTree.makeMap(keycmp));
        var keys = this.hash.keys();
        var i;
        for (i = 0; i < keys.length; i++) {
            immutable = immutable.functionalPut(keys[i], this.hash.get(keys[i]));
        }
        return immutable;
    };


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // Whalesong's immutable hashtables are a thin wrapper around the
    // llrbtree class to make it printable and equatable.
    // llrbtree comes from: https://github.com/dyoo/js-llrbtree
    var WhalesongImmutableHashtable = function (type,
                                                hash_function,
                                                equality_function,
                                                map) {
        this.type = type;
        this.hash_function = hash_function;
        this.equality_function = equality_function;
        this.map = map;
    };

    WhalesongImmutableHashtable.prototype.size = function() {
        return this.map.items().length;
    };


    WhalesongImmutableHashtable.prototype.toWrittenString = function (cache) {
        var items = this.map.items();
        var ret = [], i;
        for (i = 0; i < items.length; i++) {
            var keyStr = baselib.format.toWrittenString(items[i][0], cache);
            var valStr = baselib.format.toWrittenString(items[i][1], cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };
    
    WhalesongImmutableHashtable.prototype.toDisplayedString = function (cache) {
        var items = this.map.keys();
        var ret = [], i;
        for (i = 0; i < items.length; i++) {
            var keyStr = baselib.format.toDisplayedString(items[i][0], cache);
            var valStr = baselib.format.toDisplayedString(items[i][1], cache);
            ret.push('(' + keyStr + ' . ' + valStr + ')');
        }
        return ('#' + this.type + '(' + ret.join(' ') + ')');
    };

    WhalesongImmutableHashtable.prototype.keys = function() {
        return this.map.keys();
    };

    WhalesongImmutableHashtable.prototype.values = function() {
        return this.map.values();
    };

    WhalesongImmutableHashtable.prototype.equals = function (other, aUnionFind) {
        if (!(other instanceof WhalesongImmutableHashtable)) {
            return false; 
        }
        if (other.type !== this.type) { 
            return false;
        }
        var litems = this.map.items();
        var ritems = other.map.items();

        if (litems.length !== ritems.length) { 
            return false;
        }
        var i;
        for (i = 0; i < litems.length; i++) {
            if (!(baselib.equality.equals(litems[i][0], ritems[i][0], aUnionFind))) {
                return false;
            }
            if (!(baselib.equality.equals(litems[i][1], ritems[i][1], aUnionFind))) {
                return false;
            }
        }
        return true;
    };

    WhalesongImmutableHashtable.prototype.hashCode = function(depth) {
        var k = getEqualHashCode(this.type);
        var items = this.map.items(), i;
        for (i = 0; i < items.length; i++) {
            k = getEqualHashCode(items[i][0], depth);
            k = hashMix(k);
            k = getEqualHashCode(items[i][1], depth);
            k = hashMix(k);
        }
        return hashMix(k);
    };


    WhalesongImmutableHashtable.prototype.get = function(key) {
        return this.map.get(key);
    };

    WhalesongImmutableHashtable.prototype.put = function(key, value) {
        throw new Error();
    };

    WhalesongImmutableHashtable.prototype.functionalPut = function(key, value) {
        return new WhalesongImmutableHashtable(this.type,
                                               this.hash_function,
                                               this.equality_function,
                                               this.map.put(key, value));
    };

    WhalesongImmutableHashtable.prototype.remove = function(key) {
        throw new Error();
    };

    WhalesongImmutableHashtable.prototype.functionalRemove = function(key) {
        return new WhalesongImmutableHashtable(this.type,
                                               this.hash_function,
                                               this.equality_function,
                                               this.map.remove(key));
    };

    WhalesongImmutableHashtable.prototype.containsKey = function(key) {
        return this.map.contains(key);
    };

    WhalesongImmutableHashtable.prototype.isImmutable = function() { 
        return true;
    };
    //////////////////////////////////////////////////////////////////////    



    var isHash = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable);
    };

    var isHashEqual = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable) && x.type === 'hash';
    };

    var isHashEqv = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable) && x.type === 'hasheqv';
    };

    var isHashEq = function (x) { 
        return (x instanceof WhalesongHashtable || x instanceof WhalesongImmutableHashtable) && x.type === 'hasheq';
    };



    // Arbitrary magic number.  We have to cut off the hashing at some point.
    var MAX_HASH_DEPTH = 128;

    // Returns a JavaScript number.
    var getEqualHashCode = function (x, depth) {
        var i, t, k = 0;
        if (depth === void(0)) { depth = [0]; }

        if (depth[0] > MAX_HASH_DEPTH) { return 0; }

        if (baselib.numbers.isNumber(x)) {
            return hashMix(baselib.numbers.toFixnum(x));
        }

        if (baselib.strings.isString(x)) {
            t = x.toString();
            for (i = 0; i < t.length; i++) {
                k += t.charCodeAt(i);
                k = hashMix(k);
            }
            return k;
        }

        if (x === void(0) || x === null) {
            return 1;
        }

        if (typeof(x) === 'object' &&
            typeof(x.hashCode) === 'function') {
            depth[0] = depth[0] + 1;
            return x.hashCode(depth);
        }
        return 0;
    };


    // Does some weird math on k.  Grabbed from Racket's implementation of hashes.
    // References to: http://www.burtleburtle.net/bob/hash/doobs.html
    var hashMix = function(k) {
        k += (k << 10);
        k ^= (k >> 6);
        return k;
    };



    //////////////////////////////////////////////////////////////////////

    exports.getEqHashCode = getEqHashCode;
    exports.getEqualHashCode = getEqualHashCode;
    exports.getEqvHashCode = getEqvHashCode;

    exports.hashMix = hashMix;

    exports.makeEqHashCode = makeEqHashCode;
    exports.makeLowLevelEqHash = makeLowLevelEqHash;

    exports.makeEqHashtable = makeEqHashtable;
    exports.makeEqvHashtable = makeEqvHashtable;
    exports.makeEqualHashtable = makeEqualHashtable;

    exports.makeImmutableEqHashtable = makeImmutableEqHashtable;
    exports.makeImmutableEqvHashtable = makeImmutableEqvHashtable;
    exports.makeImmutableEqualHashtable = makeImmutableEqualHashtable;

    exports.isHash = isHash;

    exports.isHashEqual = isHashEqual;
    exports.isHashEqv = isHashEqv;
    exports.isHashEq = isHashEq;
}(window.plt.baselib, Hashtable));}());
/*jslint vars: true, maxerr: 50, indent: 4 */

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.regexps = exports;


    // Regular expressions.

    var RegularExpression = function (pattern) {
        this.pattern = pattern;
    };


    var ByteRegularExpression = function (pattern) {
        this.pattern = pattern;
    };

    //////////////////////////////////////////////////////////////////////

    exports.RegularExpression = RegularExpression;
    exports.ByteRegularExpression = ByteRegularExpression;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */


(function (baselib) {
    'use strict';
    var exports = {};
    baselib.paths = exports;

    // Paths

    var Path = function (p) {
        this.path = p;
    };

    Path.prototype.toString = function () {
        return "#<path:" + String(this.path) + ">";
    };


    Path.prototype.equals = function(other, aUnionFind) {
        return (other instanceof Path &&
                this.path === other.path);
    };

    Path.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("path");
        k += baselib.hashes.getEqualHashCode(this.path, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };


    //////////////////////////////////////////////////////////////////////

    var makePath = function (p) {
        return new Path(p);
    };

    var isPath = baselib.makeClassPredicate(Path);



    exports.Path = Path;
    exports.makePath = makePath;
    exports.isPath = isPath;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Exceptions

(function(baselib) {
    'use strict';
    var exports = {};
    baselib.boxes = exports;


    //////////////////////////////////////////////////////////////////////
    // Boxes
    
    var Box = function(x, mutable) {
	this.val = x;
	this.mutable = mutable;
    };

    Box.prototype.ref = function() {
        return this.val;
    };

    Box.prototype.set = function(newVal) {
        if (this.mutable) {
	    this.val = newVal;
        }
    };

    Box.prototype.toString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toWrittenString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toWrittenString(this.val, cache);
    };

    Box.prototype.toDisplayedString = function(cache) {
        cache.put(this, true);
        return "#&" + baselib.format.toDisplayedString(this.val, cache);
    };

    Box.prototype.toDomNode = function(params) {
        var node = document.createElement("span");
        if (params.getMode() === 'constructor') {
            node.appendChild(document.createTextNode("(box "));
            node.appendChild(params.recur(this.val));
            node.appendChild(document.createTextNode(")"));
        } else {
            node.appendChild(document.createTextNode('#&'));
            node.appendChild(params.recur(this.val));
        }
        return node;
    };

    Box.prototype.equals = function(other, aUnionFind) {
        return ((other instanceof Box) &&
	        baselib.equality.equals(this.val, other.val, aUnionFind));
    };

    Box.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Box");
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.val, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };

    
    var makeBox = function(x) { 
        return new Box(x, true); 
    };

    var makeImmutableBox = function(x) {
        return new Box(x, false); 
    };

    var isBox = function(x) {
        return x instanceof Box;
    };

    var isMutableBox = function(x) { 
        return (x instanceof Box && x.mutable); 
    };

    var isImmutableBox = function(x) { 
        return (x instanceof Box && (!x.mutable));
    };




    //////////////////////////////////////////////////////////////////////
    exports.Box = Box;
    exports.isBox = isBox;
    exports.isMutableBox = isMutableBox;
    exports.isImmutableBox = isImmutableBox;
    exports.makeBox = makeBox;
    exports.makeImmutableBox = makeImmutableBox;


}(this.plt.baselib));// Placeholders
/*jslint browser: true, unparam: true, vars: true, maxerr: 50, indent: 4 */
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.placeholders = exports;


    // Placeholders: same thing as boxes.  Distinct type just to support make-reader-graph.

    var Placeholder = function (x, mutable) {
        this.val = x;
    };

    Placeholder.prototype.ref = function () {
        return this.val;
    };

    Placeholder.prototype.set = function (newVal) {
        this.val = newVal;
    };

    Placeholder.prototype.toString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toWrittenString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDisplayedString = function (cache) {
        return "#<placeholder>";
    };

    Placeholder.prototype.toDomNode = function (cache) {
        var parent = document.createElement("span");
        parent.appendChild(document.createTextNode('#<placeholder>'));
        return parent;
    };

    Placeholder.prototype.equals = function (other, aUnionFind) {
        return ((other instanceof Placeholder) &&
                baselib.equality.equals(this.val, other.val, aUnionFind));
    };

    Placeholder.prototype.hashCode = function(depth) {
        var k = baselib.hashes.hashCode("Placeholder");
        k += baselib.hashes.hashCode(this.val, depth);
        return baselib.hashes.hashMix(k);
    };


    var makePlaceholder = function(v) {
        return new Placeholder(v);
    };

    var isPlaceholder = function (x) { 
        return x instanceof Placeholder; 
    };
    


    //////////////////////////////////////////////////////////////////////
    exports.Placeholder = Placeholder;
    exports.makePlaceholder = makePlaceholder;
    exports.isPlaceholder = isPlaceholder;



}(this.plt.baselib));/*jslint unparam: true, vars: true, maxerr: 50, indent: 4 */

// Keywords

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.keywords = exports;


    var Keyword = function (val) {
        this.val = val;
    };

    var keywordCache = {};
    
    // makeInstance: string -> Keyword.
    Keyword.makeInstance = function (val) {
        // To ensure that we can eq? symbols with equal values.
        if (!(keywordCache.hasOwnProperty(val))) {
            keywordCache[val] = new Keyword(val);
        }
        return keywordCache[val];
    };
    
    Keyword.prototype.equals = function (other, aUnionFind) {
        return other instanceof Keyword &&
            this.val === other.val;
    };

    Keyword.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("Keyword");
        k += baselib.hashes.getEqualHashCode(this.val, depth);
        k = baselib.hashes.hashMix(k);
        return k;
    };
    

    Keyword.prototype.toString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toWrittenString = function (cache) {
        return this.val;
    };

    Keyword.prototype.toDisplayedString = function (cache) {
        return this.val;
    };


    exports.Keyword = Keyword;

}(this.plt.baselib));/*jslint browser: true, unparam: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    "use strict";
    var exports = {};
    baselib.structs = exports;



    //////////////////////////////////////////////////////////////////////

    var Struct = function (constructorName, fields, structType) {
        this._constructorName = constructorName; 
        this._fields = [];
        this.structType = structType;
    };

    Struct.prototype.toWrittenString = function (cache) { 
        var buffer = [], i;
        cache.put(this, true);
        buffer.push("(");
        buffer.push(this._constructorName);
        for(i = 0; i < this._fields.length; i++) {
            buffer.push(" ");
            buffer.push(baselib.format.toWrittenString(this._fields[i], cache));
        }
        buffer.push(")");
        return buffer.join("");
    };

    Struct.prototype.toDisplayedString = function (cache) {
        return baselib.format.toWrittenString(this, cache); 
    };

    Struct.prototype.toDomNode = function (params) {
        var node = document.createElement("span"), i;
        $(node).append(document.createTextNode("("));
        $(node).append(document.createTextNode(this._constructorName));
        for(i = 0; i < this._fields.length; i++) {
            $(node).append(document.createTextNode(" "));
            $(node).append(params.recur(this._fields[i]));
        }
        $(node).append(document.createTextNode(")"));
        return node;
    };


    Struct.prototype.equals = function (other, aUnionFind) {
        var i;
        if (!(other instanceof this.type)) {
            return false;
        }
        for (i = 0; i < this._fields.length; i++) {
            if (! baselib.equality.equals(this._fields[i],
                                          other._fields[i],
                                          aUnionFind)) {
                return false;
            }
        }
        return true;
    };

    Struct.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode(this.name);
        var i;
        k = baselib.hashes.hashMix(k);
        for (i = 0; i < this._fields.length; i++) {
            k += baselib.hashes.getEqualHashCode(this._fields[i], depth);
            k = baselib.hashes.hashMix(k);
        }
        return k;
    };


    Struct.prototype.type = Struct;


    //////////////////////////////////////////////////////////////////////


    var StructType = function (name,             // string
                               type,             // StructType
                               numberOfArgs,     // number
                               numberOfFields,   // number
                               firstField,
                               applyGuard,
                               constructor,
                               predicate, 
                               accessor,
                               mutator,
                               propertiesList) {
        this.name = name;
        this.type = type;
        this.numberOfArgs = numberOfArgs;
        this.numberOfFields = numberOfFields;
        this.firstField = firstField;

        this.applyGuard = applyGuard;
        this.constructor = constructor;
        this.predicate = predicate;
        this.accessor = accessor;
        this.mutator = mutator;
        this.propertiesList = propertiesList;
    };


    StructType.prototype.toString = function (cache) {
        return '#<struct-type:' + this.name + '>';
    };


    StructType.prototype.equals = function (other, aUnionFind) {
        return this === other;
    };

    StructType.prototype.hashCode = function(depth) {
        var k = baselib.hashes.getEqualHashCode("StructType");
        k = baselib.hashes.hashMix(k);
        k += baselib.hashes.getEqualHashCode(this.name);
        k = baselib.hashes.hashMix(k);
        return k;
    };




    // guard-function: array string (array -> value)





    // Default structure guard just calls the continuation argument.
    var DEFAULT_GUARD = function (args, name, k) { 
        return k(args); 
    };


    // The default parent type refers to the toplevel Struct.
    var DEFAULT_PARENT_TYPE = { type: Struct,
                                numberOfArgs: 0,
                                numberOfFields: 0,
                                firstField: 0,
                                applyGuard: DEFAULT_GUARD };



    // makeStructureType: string StructType number number boolean
    //                    guard-function -> StructType
    //
    // Creates a new structure type.

    var makeStructureType = function (theName,
                                      parentType, 
                                      initFieldCnt, 
                                      autoFieldCnt, 
                                      autoV, 
                                      guard,
                                      propertiesList) {


        // Defaults
        autoFieldCnt = autoFieldCnt || 0;
        parentType = parentType || DEFAULT_PARENT_TYPE;
        guard = guard || DEFAULT_GUARD;


        // RawConstructor creates a new struct type inheriting from
        // the parent, with no guard checks.
        var RawConstructor = function (name, args, structType) {
            var i;
            parentType.type.call(this, name, args, structType);
            for (i = 0; i < initFieldCnt; i++) {
                this._fields.push(args[i+parentType.numberOfArgs]);
            }
            for (i = 0; i < autoFieldCnt; i++) {
                this._fields.push(autoV);
            }
        };
        RawConstructor.prototype = baselib.heir(parentType.type.prototype);

        var theNameSymbol = 
            baselib.symbols.makeSymbol(theName);

        // Set type, necessary for equality checking
        RawConstructor.prototype.type = RawConstructor;


        var constructAfterGuard =  function (res) { 
            return new RawConstructor(theName, res, newType); 
        };

        // The structure type consists of the name, its constructor, a
        // record of how many argument it and its parent type contains,
        // the list of autofields, the guard, and functions corresponding
        // to the constructor, the predicate, the accessor, and mutators.
        var newType = new StructType(
            theName,
            RawConstructor,
            initFieldCnt + parentType.numberOfArgs,
            initFieldCnt + autoFieldCnt,
            parentType.firstField + parentType.numberOfFields,
            function (args, name, k) {
                return guard(args, name,
                             function (result) {
                                 var parentArgs = result.slice(0, parentType.numberOfArgs);
                                 var restArgs = result.slice(parentType.numberOfArgs);
                                 return parentType.applyGuard(
                                     parentArgs, name,
                                     function (parentRes) {
                                         return k( parentRes.concat(restArgs) ); });
                             });
            },
            // constructor
            function (args) {
                return newType.applyGuard(
                    args,
                    theNameSymbol,
                    constructAfterGuard);
            },

            // predicate
            function (x) { 
                return x instanceof RawConstructor; 
            },

            // accessor
            function (x, i) { return x._fields[i + this.firstField]; },

            // mutator
            function (x, i, v) { x._fields[i + this.firstField] = v; },

            // structure properties list
            propertiesList);
        return newType;
    };




    var StructTypeProperty = function(name, guards, supers) {
        this.name = name;
        this.guards = guards;
        this.supers = supers;
    };



    // supportsStructureTypeProperty: StructType StructureTypeProperty -> boolean
    // Produces true if the structure type provides a binding for the
    // given structure property.
    var supportsStructureTypeProperty = function(structType, property) {
        var propertiesList = structType.propertiesList;
        if (! propertiesList) {
            return false;
        }
        while (propertiesList !== baselib.lists.EMPTY) {
            if (propertiesList.first.first === property) {
                return true;
            }
            propertiesList = propertiesList.rest;
        }
        return false;
    };


    // lookupStructureTypeProperty: StructType StructureTypeProperty -> any
    // Returns the binding associated to this particular structure type propery.
    var lookupStructureTypeProperty = function(structType, property) {
        var propertiesList = structType.propertiesList;
        if (! propertiesList) {
            return void(0);
        }
        while (propertiesList !== baselib.lists.EMPTY) {
            if (propertiesList.first.first === property) {
                return propertiesList.first.rest;
            }
            propertiesList = propertiesList.rest;
        }
        return void(0);
    };


    // A structure type property for noting if an exception supports
    var propExnSrcloc = new StructTypeProperty("prop:exn:srcloc");



    var isStruct = baselib.makeClassPredicate(Struct);
    var isStructType = baselib.makeClassPredicate(StructType);
    var isStructTypeProperty = baselib.makeClassPredicate(StructTypeProperty);



    //////////////////////////////////////////////////////////////////////


    exports.StructType = StructType;
    exports.Struct = Struct;
    exports.makeStructureType = makeStructureType;

    exports.StructTypeProperty = StructTypeProperty;
    exports.supportsStructureTypeProperty = supportsStructureTypeProperty;
    exports.lookupStructureTypeProperty = lookupStructureTypeProperty;

    exports.propExnSrcloc = propExnSrcloc;

    exports.isStruct = isStruct;
    exports.isStructType = isStructType;
    exports.isStructTypeProperty = isStructTypeProperty;
}(this.plt.baselib, $));/*jslint vars: true, white: true, plusplus: false, maxerr: 50, indent: 4 */
(function(baselib) {
    'use strict';

    var exports = {};
    baselib.srclocs = exports;

    // (define-struct srcloc (source line column position span))
    var srcloc = baselib.structs.makeStructureType(
        'srcloc', false, 5, 0, false, false);
    
    var makeSrcloc = function() { 
        var args = [].slice.call(arguments);
        return srcloc.constructor(args);
    };

    var isSrcloc = srcloc.predicate;
    var srclocSource = function(x) { return srcloc.accessor(x, 0); };
    var srclocLine = function(x) { return srcloc.accessor(x, 1); };
    var srclocColumn = function(x) { return srcloc.accessor(x, 2); };
    var srclocPosition = function(x) { return srcloc.accessor(x, 3); };
    var srclocSpan = function(x) { return srcloc.accessor(x, 4); };

    //////////////////////////////////////////////////////////////////////
    exports.makeSrcloc = makeSrcloc;
    exports.isSrcloc = isSrcloc;
    exports.srclocSource = srclocSource;
    exports.srclocLine = srclocLine;
    exports.srclocColumn = srclocColumn;
    exports.srclocPosition = srclocPosition;
    exports.srclocSpan = srclocSpan;

}(this.plt.baselib));// Arity structure
/*jslint unparam: true, sub: true, vars: true, maxerr: 50, indent: 4 */
/*globals $*/
(function (baselib, $) {
    'use strict';
    var exports = {};
    baselib.ports = exports;


    // Output Ports
    var OutputPort = function () {};
    var isOutputPort = baselib.makeClassPredicate(OutputPort);


    var StandardOutputPort = function () {
        OutputPort.call(this);
    };
    StandardOutputPort.prototype = baselib.heir(OutputPort.prototype);
    StandardOutputPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };

    var StandardErrorPort = function () {
        OutputPort.call(this);
    };
    StandardErrorPort.prototype = baselib.heir(OutputPort.prototype);
    StandardErrorPort.prototype.writeDomNode = function (MACHINE, domNode) {
        MACHINE.params['currentErrorDisplayer'](MACHINE, domNode);
        $(domNode).trigger({type : 'afterAttach'});
        $('*', domNode).trigger({type : 'afterAttach'});
    };





    var OutputStringPort = function () {
        this.buf = [];
    };
    OutputStringPort.prototype = baselib.heir(OutputPort.prototype);
    OutputStringPort.prototype.writeDomNode = function (MACHINE, v) {
        this.buf.push($(v).text());
    };
    OutputStringPort.prototype.getOutputString = function () {
        return this.buf.join('');
    };
    var isOutputStringPort = baselib.makeClassPredicate(OutputStringPort);




    // Input ports
    // Input Ports need to provide two things:
    //
    // readByte:
    // callWhenReady:

    var InputPort = function () {};
    InputPort.prototype.readByte = function(MACHINE) {
        return baselib.constants.EOF_VALUE;
    };
    InputPort.prototype.callWhenReady = function(MACHINE, k) {
        throw new Error("unimplemented");
    };
    var isInputPort = baselib.makeClassPredicate(InputPort);


    var StandardInputPort = function() {
        this.content = [];
        this.closed = false;
    };
    StandardInputPort.prototype = baselib.heir(InputPort.prototype);

    StandardInputPort.prototype.readByte = function(MACHINE) {
        if (this.content.length !== 0) {
            return this.content.shift();
        }
        return baselib.constants.EOF_VALUE;
    };

    StandardInputPort.prototype.callWhenReady = function(MACHINE, k) {
        if (this.content.length > 0) {
            return k();
        }
        if (this.closed) {
            return k();
        }
        var that = this;
        var textFieldDiv = $("<div>" +
                             "  <input class='readline' type='text' size='80%'/>" +
                             "  <input class='eofread' type='button' value='EOF'/>"+
                             "</div>");
        var readLine = textFieldDiv.find(".readline");
        var eofRead = textFieldDiv.find(".eofread");
        var cleanupAndContinue = function() {
            readLine.unbind('keypress');
            eofRead.unbind('click');
            textFieldDiv.remove();
            return k();
        };

        readLine.keypress(
            function(e) {
                var val, i;
                // On return, send the text content into that.content;
                if (e.which === 13) {
                    e.stopPropagation();
                    e.preventDefault();
                    val = readLine.val();
                    for (i = 0; i < val.length; i++) {
                        that.content.push(val.charCodeAt(i));
                    }
                    that.content.push('\n'.charCodeAt(0));
                    cleanupAndContinue();
                }
            });
        eofRead.click(
            function(e) {
                e.stopPropagation();
                e.preventDefault();
                that.closed = true;
                cleanupAndContinue();
            });
        MACHINE.params['currentDisplayer'](MACHINE, textFieldDiv.get(0));
        readLine.focus();
    };


    //////////////////////////////////////////////////////////////////////
    exports.OutputPort = OutputPort;
    exports.isOutputPort = isOutputPort;
    exports.StandardOutputPort = StandardOutputPort;
    exports.StandardErrorPort = StandardErrorPort;
    exports.OutputStringPort = OutputStringPort;
    exports.isOutputStringPort = isOutputStringPort;

    exports.InputPort = InputPort;
    exports.isInputPort = isInputPort;
    exports.StandardInputPort = StandardInputPort;


}(this.plt.baselib, $));/*jslint unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Procedures

// For historical reasons, this module is called 'functions' instead of 'procedures'.
// This may change soon.

/*global plt*/

(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.functions = exports;
    
    // Procedure types: a procedure is either a Primitive or a Closure.

    // A Primitive is a function that's expected to return.  It is not
    // allowed to call into Closures.  Its caller is expected to pop off
    // its argument stack space.
    //






    // A Closure is a function that takes on more responsibilities: it is
    // responsible for popping off stack space before it finishes, and it
    // is also explicitly responsible for continuing the computation by 
    // popping off the control stack and doing the jump.  Because of this,
    // closures can do pretty much anything to the machine.

    // A closure consists of its free variables as well as a label
    // into its text segment.
    var Closure = function (label, arity, closedVals, displayName) {
        this.label = label;              // (MACHINE -> void)
        this.racketArity = arity;              // number
        this.closedVals = closedVals;    // arrayof number
        this.displayName = displayName;  // string
    };


    // Finalize the return from a closure.  This is a helper function
    // for those who implement Closures by hand.
    //
    // If used in the body of a Closure, it must be in tail
    // position.  This finishes the closure call, and does the following:
    //
    //     * Clears out the existing arguments off the stack frame
    //     * Sets up the return value
    //     * Jumps either to the single-value return point, or the multiple-value
    //       return point.
    //
    // I'd personally love for this to be a macro and avoid the
    // extra function call here.
    var finalizeClosureCall = function (MACHINE) {
        MACHINE.cbt--;
        var returnArgs = [].slice.call(arguments, 1);

        // clear out stack space
        MACHINE.e.length -= MACHINE.a;

        if (returnArgs.length === 1) {
            MACHINE.v = returnArgs[0];
            return MACHINE.c.pop().label(MACHINE);
        } else if (returnArgs.length === 0) {
            MACHINE.a = 0;
            return (MACHINE.c.pop().label.mvr || plt.runtime.si_context_expected_1)(MACHINE);
        } else {
            MACHINE.a = returnArgs.length;
            MACHINE.v = returnArgs.shift();
            MACHINE.e.push.apply(MACHINE.e, returnArgs.reverse());
            return (MACHINE.c.pop().label.mvr || plt.runtime.si_context_expected_1)(MACHINE);
        }
    };


    var isClosure = function (x) {
        return x instanceof Closure;
    };


    var isProcedure = function (x) {
        return (typeof (x) === 'function' || x instanceof Closure);
    };


    var coerseClosureToJavaScript = function (v, MACHINE) {
        var f = function (succ, fail) {
            var args = [];
            var i;
            for (i = 0; i < arguments.length; i++) {
                args.push(arguments[i]);
            }

            MACHINE.exclusiveLock.acquire(
                "js-as-closure",
                function(releaseLock) {
                    var wrappedSucc = function() { 
                        releaseLock(); 
                        (succ || function () {}).apply(null, arguments); 
                    };
                    var wrappedFail = function(err) {
                        releaseLock(); 
                        (fail || function () {})(err); 
                    };
                    if (!(baselib.arity.isArityMatching(v.racketArity, args.length - 2))) {
                        var msg = baselib.format.format(
                            "arity mismatch: ~s expected ~s argument(s) but received ~s",
                            [v.displayName, v.racketArity, args.length - 2]);
                        releaseLock();
                        return wrappedFail(new baselib.exceptions.RacketError(
                            msg,
                            baselib.exceptions.makeExnFailContractArity(msg,
                                                                        MACHINE.captureContinuationMarks())));
                    }

                    var oldVal = MACHINE.v;
                    var oldArgcount = MACHINE.a;
                    var oldProc = MACHINE.p;
                    var oldErrorHandler = MACHINE.params['currentErrorHandler'];

                    var afterGoodInvoke = function (MACHINE) { 
                        plt.runtime.PAUSE(
                            function (restart) {
                                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                                var returnValue = MACHINE.v;
                                MACHINE.v = oldVal;
                                MACHINE.a = oldArgcount;
                                MACHINE.p = oldProc;
                                wrappedSucc(returnValue);
                            });
                    };
                    afterGoodInvoke.mvr = function (MACHINE) {
                        plt.runtime.PAUSE(
                            function (restart) {
                                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                                var returnValues = [MACHINE.v], i;
                                for (i = 0; i < MACHINE.a - 1; i++) {
                                    returnValues.push(MACHINE.e.pop());
                                }
                                MACHINE.v = oldVal;
                                MACHINE.a = oldArgcount;
                                MACHINE.p = oldProc;
                                wrappedSucc.apply(null, returnValues);
                            });
                    };

                    MACHINE.c.push(
                        new baselib.frames.CallFrame(afterGoodInvoke, v));
                    MACHINE.a = args.length - 2;
                    var i;
                    for (i = 0; i < args.length - 2; i++) {
                        MACHINE.e.push(args[args.length - 1 - i]);
                    }
                    MACHINE.p = v;
                    MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
                        MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                        MACHINE.v = oldVal;
                        MACHINE.a = oldArgcount;
                        MACHINE.p = oldProc;
                        wrappedFail(e);
                    };  

                    MACHINE._trampoline(v.label, false, releaseLock);
                });
        };
        return f;
    };

    // coerseToJavaScript: racket function -> JavaScript function
    // Given a closure or primitive, produces an
    // asynchronous JavaScript function.
    // The function will run on the provided MACHINE.
    //
    // It assumes that it must begin its own trampoline.
    var asJavaScriptFunction = function (v, MACHINE) {
        MACHINE = MACHINE || plt.runtime.currentMachine;
        if (isClosure(v)) {
            return coerseClosureToJavaScript(v, MACHINE);
        } else {
            baselib.exceptions.raise(MACHINE,
                                     baselib.exceptions.makeExnFailContract(
                                         baselib.format.format(
                                             "not a procedure: ~e",
                                             [v]),
                                         MACHINE.captureContinuationMarks()));
        }
    };


    // internallCallDuringPause: call a Racket procedure and get its results.
    // The use assumes the machine is in a running-but-paused state, where the
    // lock is still in effect.  The lock will continue to be in effect
    // after coming back from the internal call.
    var internalCallDuringPause = function (MACHINE, proc, success, fail) {
        var args = [];
        var i;
        for (i = 0; i < arguments.length; i++) {
            args.push(arguments[i]);
        }

        var i;
        var oldArgcount, oldVal, oldProc, oldErrorHandler, oldControlLength, oldEnvLength;
        if (! baselib.arity.isArityMatching(proc.racketArity, args.length - 4)) {
            var msg = baselib.format.format("arity mismatch: ~s expected ~s arguments, but received ~s",
                                            [proc.displayName, proc.racketArity, args.length - 4]);
            return fail(baselib.exceptions.makeExnFailContractArity(msg,
                                                                    MACHINE.captureContinuationMarks()));
        }

        if (! isClosure(proc)) {
            return fail(baselib.exceptions.makeExnFail(
                baselib.format.format(
                    "Not a procedure: ~e",
                    [proc]),
                MACHINE.captureContinuationMarks()));

        }

        oldVal = MACHINE.v;
        oldArgcount = MACHINE.a;
        oldProc = MACHINE.p;
        oldControlLength = MACHINE.c.length;
        oldEnvLength = MACHINE.e.length;

        oldErrorHandler = MACHINE.params['currentErrorHandler'];
        var afterGoodInvoke = function (MACHINE) { 
            plt.runtime.PAUSE(function (restart) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                var returnValue = MACHINE.v;
                MACHINE.v = oldVal;
                MACHINE.a = oldArgcount;
                MACHINE.p = oldProc;
                return success(returnValue);
            });
        };
        afterGoodInvoke.mvr = function (MACHINE) {
            plt.runtime.PAUSE(function (restart) {
                MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                var returnValues = [MACHINE.v];
                var i;
                for (i = 0; i < MACHINE.a - 1; i++) {
                    returnValues.push(MACHINE.e.pop());
                }
                MACHINE.v = oldVal;
                MACHINE.a = oldArgcount;
                MACHINE.p = oldProc;
                return success.apply(null, returnValues);
            });
        };

        MACHINE.c.push(
            new baselib.frames.CallFrame(afterGoodInvoke, proc));
        MACHINE.a = args.length - 4;
        for (i = 0; i < args.length - 4; i++) {
            MACHINE.e.push(args[args.length - 1 - i]);
        }
        MACHINE.p = proc;
        MACHINE.params['currentErrorHandler'] = function (MACHINE, e) {
            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
            MACHINE.v = oldVal;
            MACHINE.a = oldArgcount;
            MACHINE.p = oldProc;
            MACHINE.c.length = oldControlLength;
            MACHINE.e.length = oldEnvLength;
            return fail(e);
        };
        MACHINE._trampoline(proc.label, 
                            false, 
                            function() {
                                // The lock should still being held, so we don't
                                // automatically unlock control.
                            });
    };







    var makeClosure = function (name, arity, f, closureArgs) {
        if (! closureArgs) { closureArgs = []; }
        return new Closure(f,
                           arity,
                           closureArgs,
                           name);
    };


    var makePrimitiveProcedure = function (name, arity, f) {
        var proc = makeClosure(name,
                               arity,
                               function(M) {
                                   M.cbt--;
                                   M.v = f(M);
                                   M.e.length -= M.a;
                                   return M.c.pop().label(M);
                               },
                               []);
        // Also, record the raw implementation of the function.
        proc._i = f;
        return proc;
    };








    var renameProcedure = function (f, name) {
        return makeClosure(name, f.racketArity, f.label, f.closedVals);
    };



    // Applying a procedure.
    // Assumptions: the procedure register has been assigned, as has
    // the argcount and environment.
    // Must be running in the context of a trampoline.
    var rawApply = function(M) {
        M.cbt--;
        if (baselib.arity.isArityMatching(M.p.racketArity, M.a)) {
            return M.p.label(M);
        } else {
            baselib.exceptions.raiseArityMismatchError(M, M.p, M.a);
        }
    };



    //////////////////////////////////////////////////////////////////////
    exports.Closure = Closure;
    exports.internalCallDuringPause = internalCallDuringPause;
    exports.finalizeClosureCall = finalizeClosureCall;

    exports.makePrimitiveProcedure = makePrimitiveProcedure;
    exports.makeClosure = makeClosure;

    exports.isClosure = isClosure;

    exports.isProcedure = isProcedure;


    exports.renameProcedure = renameProcedure;

    exports.asJavaScriptFunction = asJavaScriptFunction;
    exports.rawApply = rawApply;


}(this.plt.baselib, this.plt));/*jslint sub: true, vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
/*global plt*/

// Modules
(function (baselib, plt) {
    'use strict';
    var exports = {};
    baselib.modules = exports;

    var Namespace = function(modrec) {
        this.modrec = modrec;

        // string -> integer
        // Returns the position within the prefix that we should be looking.
        this.mapping = {}; 
        this.prefix = void(0);
        this.extra = {};
    };

    Namespace.prototype.get = function(name) {
        if (this.mapping.hasOwnProperty(name)) {
            return this.prefix[this.mapping[name]];
        }
        if (this.extra.hasOwnProperty(name)) {
            return this.extra[name];
        }
        return void(0);
    };

    Namespace.prototype.refreshPrefixMapping = function() {
        var prefix = this.modrec.prefix;
        var name;
        var i;
        for (i = 0; i < prefix.length; i++) {
            name = prefix.names[i];
            this.mapping[name] = i;
            if (this.extra.hasOwnProperty(name)) {
                prefix[i] = this.extra[name];
                delete this.extra[name];
            }
        }
        this.prefix = prefix;
    };

    Namespace.prototype.hasKey = function(name) {
        return this.mapping.hasOwnProperty(name);
    };

    Namespace.prototype.set = function(name, value) {
        if (this.mapping.hasOwnProperty(name)) {
            this.prefix[this.mapping[name]] = value;
            return;
        };
        if (this.extra.hasOwnProperty(name)) {
            this.extra[name] = value;
            return;
        }
        this.extra[name] = value;
        return;
    };

    var ModuleRecord = function (name, label) {
        this.name = name;
        this.label = label;
        this.isInvoked = false;
        this.prefix = false;
        this.namespace = new Namespace(this);

        // JavaScript-implemented code will assign privateExports
        // with all of the exported identifiers.
        this.privateExports = {};
    };

    // Returns the offset into the prefix in which the value will be stored.
    ModuleRecord.prototype.getPrefixOffset = function(externalName) {
        var i;
        for (i = 0; i < this.prefix.names.length; i++) {
            if (this.prefix.names[i] === externalName) {
                return i;
            }
        }
        return void(0);
    };

    // Returns access to the names defined in the module.
    ModuleRecord.prototype.getNamespace = function () {
        return this.namespace;
    };

    ModuleRecord.prototype.finalizeModuleInvokation = function () {
        this.namespace.refreshPrefixMapping();
    };
    

    // External invokation of a module.
    ModuleRecord.prototype.invoke = function (MACHINE, succ, fail) {
        this._invoke(false, MACHINE, succ, fail);
    };

    // Internal invokation of a module.
    ModuleRecord.prototype.internalInvoke = function (MACHINE, succ, fail) {
        this._invoke(true, MACHINE, succ, fail);
    };

    // Private: general invokation of a module
    ModuleRecord.prototype._invoke = function (isInternal, MACHINE, succ, fail) {
        var that = this;
        MACHINE = MACHINE || plt.runtime.currentMachine;
        succ = succ || function () {};
        fail = fail || function () {};

        var oldErrorHandler = MACHINE.params['currentErrorHandler'];
        var afterGoodInvoke = function (MACHINE) { 
            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
            if (isInternal) { succ(); }
            else {
                throw new plt.runtime.HaltError(succ)
            }
        };

        if (this.isInvoked) {
            succ();
        } else {
            if (isInternal) {
                MACHINE.params['currentErrorHandler'] = function (MACHINE, anError) {
                    MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                    fail(MACHINE, anError);
                };
                MACHINE.c.push(new plt.baselib.frames.CallFrame(afterGoodInvoke, null));
                throw that.label;
            } else {
                MACHINE.exclusiveLock.acquire(
                    void(0),
                    function(release) {
                        MACHINE.params['currentErrorHandler'] = function (MACHINE, anError) {
                            MACHINE.params['currentErrorHandler'] = oldErrorHandler;
                            fail(MACHINE, anError);
                        };
                        MACHINE.c.push(new plt.baselib.frames.CallFrame(afterGoodInvoke, null));
                        MACHINE._trampoline(that.label, false, release);
                    });
            }
        }
    };
    


    exports.ModuleRecord = ModuleRecord;


}(this.plt.baselib, this.plt));/*global plt*/
/*jslint browser: true, unparam: true, vars: true, white: true, maxerr: 50, indent: 4 , plusplus: true */

// Continuation marks
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.contmarks = exports;


    var ContinuationMarkSet = function(kvlists) {
        this.kvlists = kvlists;
    };


    ContinuationMarkSet.prototype.shift = function() {
        this.kvlists.shift();
    };

    ContinuationMarkSet.prototype.toDomNode = function(params) {
        var dom = document.createElement("span");
        dom.appendChild(document.createTextNode('#<continuation-mark-set>'));
        return dom;
    };

    ContinuationMarkSet.prototype.toWrittenString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.toDisplayedString = function(cache) {
        return '#<continuation-mark-set>';
    };

    ContinuationMarkSet.prototype.ref = function(key, promptTag) {
        // FIXME: ref needs to watch the promptTag as well and capture up to it.
        var i, j;
        var result = [];
        var kvlist;
        for (i = 0; i < this.kvlists.length; i++) {
            kvlist = this.kvlists[i];
            for (j = 0; j < kvlist.length; j++) {
                if (baselib.equality.equals(kvlist[j][0], key)) {
                    result.push(kvlist[j][1]);
                }
            }
        }
        return baselib.lists.arrayToList(result);
    };

    // Returns an approximate stack trace.
    // getContext: MACHINE -> (arrayof (U Procedure (Vector source line column position span)))
    ContinuationMarkSet.prototype.getContext = function(MACHINE) {
        var i, j;
        var result = [];
        var kvlist;

        var tracedAppKey = plt.runtime.getTracedAppKey(MACHINE);
        var tracedCalleeKey = plt.runtime.getTracedCalleeKey(MACHINE);
        var proc, locationVector;

        for (i = 0; i < this.kvlists.length; i++) {
            kvlist = this.kvlists[i];
            for (j = 0; j < kvlist.length; j++) {
                if (kvlist[j][0] === tracedAppKey) {
                    locationVector = kvlist[j][1];
                    result.push(locationVector);
                } else if (kvlist[j][0] === tracedCalleeKey) {
                    proc = kvlist[j][1];
                    if (proc !== null) {
                        result.push(proc);
                    }
                }
            }
        }
        return result;
    };


    var isContinuationMarkSet = baselib.makeClassPredicate(ContinuationMarkSet);





    // A continuation prompt tag labels a prompt frame.
    var ContinuationPromptTag = function(name) {
	this.name = name;         // String

    };


    var isContinuationPromptTag = baselib.makeClassPredicate(ContinuationPromptTag);

    var DEFAULT_CONTINUATION_PROMPT_TAG =
        new ContinuationPromptTag("default-continuation-prompt-tag");


    exports.ContinuationMarkSet = ContinuationMarkSet;
    exports.isContinuationMarkSet = isContinuationMarkSet;
    exports.ContinuationPromptTag = ContinuationPromptTag;

    exports.isContinuationPromptTag = isContinuationPromptTag;
    exports.DEFAULT_CONTINUATION_PROMPT_TAG = DEFAULT_CONTINUATION_PROMPT_TAG;
}(this.plt.baselib));/*jslint browser: false, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function(baselib) {
    'use strict';
    var exports = {};
    baselib.arity = exports;



    var ArityAtLeast = baselib.structs.makeStructureType(
        'arity-at-least', false, 1, 0, false, false);


    // An arity is either a primitive number, an ArityAtLeast instance,
    // or a list of either primitive numbers or ArityAtLeast instances.



    var isArityAtLeast = ArityAtLeast.predicate;
    var arityAtLeastValue = function(x) { 
        var val = ArityAtLeast.accessor(x, 0);
        return val;
    };


    ArityAtLeast.type.prototype.toString = function() {
        return '#<arity-at-least ' + arityAtLeastValue(this) + '>';
    };



    // isArityMatching: arity natural -> boolean
    // Produces true if n satisfies the arity.
    var isArityMatching = function(arity, n) {
	if (typeof(arity) === 'number') {
	    return arity === n;
	} else if (isArityAtLeast(arity)) {
	    return n >= arityAtLeastValue(arity);
	} else {
	    while (arity !== baselib.lists.EMPTY) {
		if (typeof(arity.first) === 'number') {
		    if (arity.first === n) { return true; }
		} else if (isArityAtLeast(arity.first)) {
		    if (n >= arityAtLeastValue(arity.first)) { return true; }
		}
		arity = arity.rest;
	    }
	    return false;
	}
    };





    //////////////////////////////////////////////////////////////////////

    exports.ArityAtLeast = ArityAtLeast;
    exports.makeArityAtLeast = function() { 
        var args = [].slice.call(arguments);
        return ArityAtLeast.constructor(args);
    };
    exports.isArityAtLeast = isArityAtLeast;
    exports.isArityMatching = isArityMatching;
    exports.arityAtLeastValue = arityAtLeastValue;

}(this.plt.baselib));/*jslint vars: true, maxerr: 50, indent: 4 */

// Structure types

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.inspectors = exports;


    var Inspector = function () {
    };
    var DEFAULT_INSPECTOR = new Inspector();

    Inspector.prototype.toString = function () {
        return "#<inspector>";
    };

    var isInspector = baselib.makeClassPredicate(Inspector);



    exports.Inspector = Inspector;
    exports.DEFAULT_INSPECTOR = DEFAULT_INSPECTOR;

    exports.isInspector = isInspector;


}(this.plt.baselib));/*jslint browser: true, undef: false, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */

// Exceptions

(function(baselib) {
    'use strict';
    var exceptions = {};
    baselib.exceptions = exceptions;



    var RacketError = function(message, racketError) {
        Error.call(this, message);
        this.message = message;
        this.racketError = racketError;
    };
    RacketError.prototype = baselib.heir(Error.prototype);
    var isRacketError = baselib.makeClassPredicate(RacketError);



    // (define-struct exn (message continuation-mark-set))
    var Exn = baselib.structs.makeStructureType(
        'exn', false, 2, 0, false, false);


    // (define-struct (exn:break exn) (continuation))
    var ExnBreak = baselib.structs.makeStructureType(
        'exn:break', Exn, 1, 0, false, false);


    var ExnFail = baselib.structs.makeStructureType(
        'exn:fail', Exn, 0, 0, false, false);

    var ExnFailContract = baselib.structs.makeStructureType(
        'exn:fail:contract', ExnFail, 0, 0, false, false);

    var ExnFailContractArity = baselib.structs.makeStructureType(
        'exn:fail:contract:arity', ExnFailContract, 0, 0, false, false);

    // exn:fail:contract (id)
    var ExnFailContractVariable = baselib.structs.makeStructureType(
        'exn:fail:contract:variable', ExnFailContract, 1, 0, false, false);

    var ExnFailContractDivisionByZero = baselib.structs.makeStructureType(
        'exn:fail:contract:divide-by-zero', ExnFailContract, 0, 0, false, false);





    var exceptionHandlerKey = new baselib.symbols.Symbol("exnh");





    //////////////////////////////////////////////////////////////////////

    // Raise error to the toplevel.

    // If the error is of an exception type, make sure e.message holds the string
    // value to allow integration with systems that don't recognize Racket error 
    // structures.
    var raise = function(MACHINE, e) { 
        if (isRacketError(e) && Exn.predicate(e.racketError)) {
            e.message = Exn.accessor(e.racketError, 0);
        } else if (Exn.predicate(e)) {
            e = new RacketError(Exn.accessor(e, 0), e);
        }

        // if (window.console !== void(0) &&
        //     typeof(window.console.log) === 'function') {
        //     window.console.log(MACHINE);
        //     if (e.stack) { window.console.log(e.stack); }
        //     else { window.console.log(e); }
        // } 

        throw e; 
    };


    var raiseFailure = function(MACHINE, msg) {
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFail.constructor([msg, contMarks]));
    };

    var raiseContractError = function(MACHINE, msg) {
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContract.constructor([msg, contMarks]));
    };

    var raiseDivisionByZeroError = function(MACHINE, msg) {
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContractDivisionByZero.constructor([msg, contMarks]));
    };


    var raiseUnboundToplevelError = function(MACHINE, name) {
        var message = baselib.format.format("Not bound: ~a", [name]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, 
              ExnFailContractVariable.constructor([message, 
                                                   contMarks, 
                                                   baselib.symbols.makeSymbol(name)])); 
    };


    var raiseArgumentTypeError = function(MACHINE, 
                                          callerName,
                                          expectedTypeName,
                                          argumentOffset,
                                          actualValue) {
        var message;
        var contMarks = MACHINE.captureContinuationMarks();
        if (argumentOffset !== void(0)) {
            message = baselib.format.format(
                          "~a: expected ~a as argument ~e but received ~e",
                          [callerName,
                           expectedTypeName,
                           (argumentOffset + 1),
                           actualValue]);
            raise(MACHINE, ExnFailContract.constructor([message, contMarks]));
        } else {
            message = baselib.format.format(
                          "~a: expected ~a but received ~e",
                          [callerName,
                           expectedTypeName,
                           actualValue]);
            raise(MACHINE, ExnFailContract.constructor([message, contMarks]));
        }
    };

    var raiseContextExpectedValuesError = function(MACHINE, expected) {
        var message = baselib.format.format("expected ~e values, received ~e values",
                                            [expected, MACHINE.a]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, ExnFailContract.constructor([message, contMarks]));
    };

    var raiseArityMismatchError = function(MACHINE, proc, received) {
        raise(MACHINE, makeArityMismatchError(MACHINE, proc, received));
    };

    var makeArityMismatchError = function(MACHINE, proc, received) {
        var message = baselib.format.format("~a: expected ~e value(s), received ~e value(s)",
                                            [proc.displayName,
                                             proc.racketArity,
                                             received]);
        var contMarks = MACHINE.captureContinuationMarks();
        return ExnFailContractArity.constructor([message, contMarks]);
    };


    var raiseOperatorApplicationError = function(MACHINE, operator) {
        var message = baselib.format.format("not a procedure: ~e",
                                            [operator]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE, 
              ExnFailContract.constructor([message, contMarks]));
    };


    var raiseOperatorIsNotPrimitiveProcedure = function(MACHINE, operator) {
        var message = baselib.format.format("not a primitive procedure: ~e",
                                            [operator]);
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE,
              ExnFailContract.constructor([message, contMarks]));
    };


    var raiseUnimplementedPrimitiveError = function(MACHINE, name) {
        var message = "unimplemented kernel procedure: " + name;
        var contMarks = MACHINE.captureContinuationMarks();
        raise(MACHINE,
              ExnFailContract.constructor([message, contMarks]));
    };









    //////////////////////////////////////////////////////////////////////
    // Exports



    exceptions.RacketError = RacketError;
    exceptions.isRacketError = isRacketError;

    exceptions.Exn = Exn;
    exceptions.makeExn = function(msg, marks) { return Exn.constructor([msg, marks]); };
    exceptions.isExn = Exn.predicate;
    exceptions.exnMessage = function(exn) { return Exn.accessor(exn, 0); };
    exceptions.exnContMarks = function(exn) { return Exn.accessor(exn, 1); };
    exceptions.exnSetContMarks = function(exn, v) { Exn.mutator(exn, 1, v); };

    exceptions.ExnBreak = ExnBreak;
    exceptions.makeExnBreak = function(msg, marks) { return ExnBreak.constructor([msg, marks]); };
    exceptions.isExnBreak = ExnBreak.predicate;
    exceptions.exnBreakContinuation = 
        function(exn) { return ExnBreak.accessor(exn, 0); };

    exceptions.ExnFail = ExnFail;
    exceptions.makeExnFail = function(msg, marks) { return ExnFail.constructor([msg, marks]); };
    exceptions.isExnFail = ExnFail.predicate;

    exceptions.ExnFailContract = ExnFailContract;
    exceptions.makeExnFailContract = function(msg, marks) { return ExnFailContract.constructor([msg, marks]); };
    exceptions.isExnFailContract = ExnFailContract.predicate;

    exceptions.ExnFailContractArity = ExnFailContractArity;
    exceptions.makeExnFailContractArity = function(msg, marks) { return ExnFailContractArity.constructor([msg, marks]); };
    exceptions.isExnFailContractArity = ExnFailContractArity.predicate;

    exceptions.ExnFailContractVariable = ExnFailContractVariable;
    exceptions.makeExnFailContractVariable = function(msg, marks) { return ExnFailContractVariable.constructor([msg, marks]); };
    exceptions.isExnFailContractVariable = ExnFailContractVariable.predicate;
    exceptions.exnFailContractVariableId = 
        function(exn) { return ExnFailContractVariable.accessor(exn, 0); };


    exceptions.ExnFailContractDivisionByZero = ExnFailContractDivisionByZero;
    exceptions.makeExnFailContractDivisionByZero = 
        function(msg, marks) { return ExnFailContractDivisionByZero.constructor([msg, marks]); };
    exceptions.isExnFailContractDivisionByZero = ExnFailContractDivisionByZero.predicate;


    exceptions.exceptionHandlerKey = exceptionHandlerKey;




    exceptions.raise = raise;
    exceptions.raiseFailure = raiseFailure;
    exceptions.raiseContractError = raiseContractError;
    exceptions.raiseDivisionByZeroError = raiseDivisionByZeroError;
    exceptions.raiseUnboundToplevelError = raiseUnboundToplevelError;
    exceptions.raiseArgumentTypeError = raiseArgumentTypeError;
    exceptions.raiseContextExpectedValuesError = raiseContextExpectedValuesError;
    exceptions.raiseArityMismatchError = raiseArityMismatchError;
    exceptions.makeArityMismatchError = makeArityMismatchError;
    exceptions.raiseOperatorApplicationError = raiseOperatorApplicationError;
    exceptions.raiseOperatorIsNotPrimitiveProcedure = raiseOperatorIsNotPrimitiveProcedure;
    exceptions.raiseUnimplementedPrimitiveError = raiseUnimplementedPrimitiveError;


}(this.plt.baselib));/*jslint vars: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */
// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.readergraph = exports;


    var readerGraph = function (x, objectHash, n) {
        var i;
        if (typeof (x) === 'object' && objectHash.containsKey(x)) {
            return objectHash.get(x);
        }

        if (baselib.lists.isPair(x)) {
            var consPair = baselib.lists.makePair(x.first, x.rest);
            objectHash.put(x, consPair);
            consPair.first = readerGraph(x.first, objectHash, n + 1);
            consPair.rest = readerGraph(x.rest, objectHash, n + 1);
            return consPair;
        }

        if (baselib.vectors.isVector(x)) {
            var len = x.length();
            var aVector = baselib.vectors.makeVector(x.elts.slice(0));
            objectHash.put(x, aVector); 
            for (i = 0; i < len; i++) {
                aVector.elts[i] = readerGraph(aVector.elts[i], objectHash, n + 1);
            }
            return aVector;
        }

        if (baselib.boxes.isBox(x)) {
            var aBox = baselib.boxes.makeBox(x.ref());
            objectHash.put(x, aBox);
            aBox.val = readerGraph(x.ref(), objectHash, n + 1);
            return aBox;
        }

        if (baselib.hashes.isHash(x)) {
            throw new Error("make-reader-graph of hash not implemented yet");
        }

        if (baselib.structs.isStruct(x)) {
            var aStruct = baselib.clone(x);
            objectHash.put(x, aStruct);
            for (i = 0; i < x._fields.length; i++) {
                x._fields[i] = readerGraph(x._fields[i], objectHash, n + 1);
            }
            return aStruct;
        }

        if (baselib.placeholders.isPlaceholder(x)) {
            return readerGraph(x.ref(), objectHash, n + 1);
        }

        return x;
    };

    exports.readerGraph = readerGraph;

}(this.plt.baselib));/*jslint vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// Helper functions for argument checking.

(function (baselib) {
    'use strict';
    var exports = {};
    baselib.check = exports;

    var EMPTY = baselib.lists.EMPTY;
    var isPair = baselib.lists.isPair;
    var isList = baselib.lists.isList;
    var makeLowLevelEqHash = baselib.hashes.makeLowLevelEqHash;


    //////////////////////////////////////////////////////////////////////

    // testArgument: (X -> boolean) X number string string -> boolean
    // Produces the argument value the predicate is true, and otherwise raises an error.
    var testArgument = function (MACHINE,
                                 expectedTypeName,
                                 predicate,                          
                                 val, 
                                 index, 
                                 callerName) {
        if (predicate(val)) {
            return val;
        } else {
            if (typeof(expectedTypeName) === 'function') { 
                expectedTypeName = expectedTypeName(); 
            }
            baselib.exceptions.raiseArgumentTypeError(MACHINE, 
                                                      callerName,
                                                      expectedTypeName,
                                                      index,
                                                      val);
        }
    };


    var makeCheckArgumentType = function (predicate, predicateName) {
        return function (MACHINE, callerName, position) {
            return testArgument(
                MACHINE,
                predicateName,
                predicate,
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };



    var makeCheckListofArgumentType = function (predicate, predicateName) {
        var listPredicate = function (x) {
            if (! isList(x)) { return false; }
            while (true) {
                if (x === EMPTY){
                    return true;
                }
                if (! predicate(x.first)) {
                    return false;
                }
                x = x.rest;
            }
        };
        return function (MACHINE, callerName, position) {
            return testArgument(
                MACHINE,
                'list of ' + predicateName,
                listPredicate,
                MACHINE.e[MACHINE.e.length - 1 - position],
                position,
                callerName);
        };
    };







    var testArity = function (MACHINE, callerName, observed, minimum, maximum) {
        if (observed < minimum || observed > maximum) {
            baselib.exceptions.raise(
                MACHINE, 
                baselib.exceptions.ExnFailContractArity.constructor(
                    [callerName + ": expected at least " + minimum
                     + " arguments "
                     + " but received " + observed,
                     MACHINE.captureContinuationMarks()]));
        }
    };




    var checkOutputPort = makeCheckArgumentType(
        baselib.ports.isOutputPort,
        'output port');

    var checkInputPort = makeCheckArgumentType(
        baselib.ports.isInputPort,
        'input port');

    var checkSymbol = makeCheckArgumentType(
        baselib.symbols.isSymbol,
        'symbol');

    var checkString = makeCheckArgumentType(
        baselib.strings.isString,
        'string');

    var checkSymbolOrString = makeCheckArgumentType(
        function(x) { return (baselib.symbols.isSymbol(x) || 
                              baselib.strings.isString(x)); },
        'symbol or string');

    var checkMutableString = makeCheckArgumentType(
        baselib.strings.isMutableString,
        'mutable string');

    var checkChar = makeCheckArgumentType(
        baselib.chars.isChar,
        'character');

    var checkProcedure = makeCheckArgumentType(
        baselib.functions.isProcedure,
        'procedure');

    var checkNumber = makeCheckArgumentType(
        baselib.numbers.isNumber,
        'number');

    var checkReal = makeCheckArgumentType(
        baselib.numbers.isReal,
        'real');

    var checkNatural = makeCheckArgumentType(
        baselib.numbers.isNatural,
        'natural');

    var checkByte = makeCheckArgumentType(
        baselib.numbers.isByte,
        'byte');

    var checkBytes = makeCheckArgumentType(
        baselib.bytes.isBytes,
        'bytes');

    var checkNaturalInRange = function(M, callerName, index, a, b) {
        var expectedTypeName;
        var x = M.e[M.e.length - 1 - index];
        // fast path: if a, b, and x are numbers
        if (typeof(x) === 'number' && typeof(a) === 'number' && typeof(b) === 'number') {
            if (a <= x && x < b) { 
                return x; 
            }
            else {
                expectedTypeName = baselib.format.format('natural between ~a and ~a', [a, b]);
                return baselib.exceptions.raiseArgumentTypeError(m, 
                                                                 callerName,
                                                                 expectedTypeName,
                                                                 index,
                                                                 x);
            }
        } else {
            if (baselib.numbers.lessThanOrEqual(a, x) && baselib.numbers.lessThan(x, b)) {
                return x;
            } else {
                expectedTypeName = baselib.format.format('natural between ~a and ~a', [a, b]);
                return baselib.exceptions.raiseArgumentTypeError(m, 
                                                                 callerName,
                                                                 expectedTypeName,
                                                                 index,
                                                                 x);
            }
        }
    };


    var checkInteger = makeCheckArgumentType(
        baselib.numbers.isInteger,
        'integer');

    var checkRational = makeCheckArgumentType(
        baselib.numbers.isRational,
        'rational');

    var checkNonNegativeReal = makeCheckArgumentType(
        baselib.numbers.isNonNegativeReal,
        'non-negative real');

    var checkPair = makeCheckArgumentType(
        baselib.lists.isPair,
        'pair');

    var checkList = makeCheckArgumentType(
        isList,
        'list');

    var checkVector = makeCheckArgumentType(
        baselib.vectors.isVector,
        'vector');

    var checkBoolean = makeCheckArgumentType(
        function (x) { return x === true || x === false; },
        'boolean');

    var checkBox = makeCheckArgumentType(
        baselib.boxes.isBox,
        'box');

    var checkMutableBox = makeCheckArgumentType(
        baselib.boxes.isMutableBox,
        'mutable box');

    var checkInspector = makeCheckArgumentType(
        baselib.inspectors.isInspector,
        'inspector');


    var checkPlaceholder = makeCheckArgumentType(
        baselib.placeholders.isPlaceholder,
        'placeholder');


    var checkSrcloc = makeCheckArgumentType(
        baselib.srclocs.isSrcloc,
        'srcloc');

    var checkContinuationMarkSet = makeCheckArgumentType(
        baselib.contmarks.isContinuationMarkSet,
        'continuation mark set');

    var checkContinuationPromptTag = makeCheckArgumentType(
        baselib.contmarks.isContinuationPromptTag,
        'continuation prompt tag');

    var checkExn = makeCheckArgumentType(
        baselib.exceptions.isExn,
        'exn');

    var checkHash = makeCheckArgumentType(
        baselib.hashes.isHash,
        'hash');
    var checkHasheq = makeCheckArgumentType(
        baselib.hashes.isHasheq,
        'hash');
    var checkHasheqv = makeCheckArgumentType(
        baselib.hashes.isHasheqv,
        'hash');
    var checkMutableHash = makeCheckArgumentType(
        function(x) { return baselib.hashes.isHash(x) && ! x.isImmutable()},
        'mutable hash');
    var checkImmutableHash = makeCheckArgumentType(
        function(x) { return baselib.hashes.isHash(x) && x.isImmutable()},
        'immutable hash');






    //////////////////////////////////////////////////////////////////////


    exports.testArgument = testArgument;
    exports.testArity = testArity;
    exports.makeCheckArgumentType = makeCheckArgumentType;
    exports.makeCheckListofArgumentType = makeCheckListofArgumentType;
    exports.checkOutputPort = checkOutputPort;
    exports.checkInputPort = checkInputPort;
    exports.checkSymbol = checkSymbol;
    exports.checkString = checkString;
    exports.checkSymbolOrString = checkSymbolOrString;
    exports.checkMutableString = checkMutableString;
    exports.checkChar = checkChar;
    exports.checkProcedure = checkProcedure;
    exports.checkNumber = checkNumber;
    exports.checkReal = checkReal;
    exports.checkNonNegativeReal = checkNonNegativeReal;
    exports.checkNatural = checkNatural;
    exports.checkNaturalInRange = checkNaturalInRange;
    exports.checkByte = checkByte;
    exports.checkBytes = checkBytes;
    exports.checkInteger = checkInteger;
    exports.checkRational = checkRational;
    exports.checkPair = checkPair;
    exports.checkList = checkList;
    exports.checkVector = checkVector;
    exports.checkBox = checkBox;
    exports.checkMutableBox = checkMutableBox;
    exports.checkInspector = checkInspector;
    exports.checkByte = checkByte;
    exports.checkBoolean = checkBoolean;
    exports.checkPlaceholder = checkPlaceholder;
    exports.checkSrcloc = checkSrcloc;
    exports.checkContinuationMarkSet = checkContinuationMarkSet;
    exports.checkContinuationPromptTag = checkContinuationPromptTag;
    exports.checkExn = checkExn;
    exports.checkHash = checkHash;
    exports.checkImmutableHash = checkImmutableHash;
    exports.checkMutableHash = checkMutableHash;

}(this.plt.baselib));
/*global plt*/
/*jslint unparam: true, sub: true, vars: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

// Arity structure
(function (baselib) {
    'use strict';
    var exports = {};
    baselib.primitives = exports;


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;

    var isProcedure = baselib.functions.isProcedure;
    var isReal = baselib.numbers.isReal;
    var isInexact = baselib.numbers.isInexact;
    var isComplex = baselib.numbers.isComplex;
    var isRational = baselib.numbers.isRational;
    var isBytes = baselib.bytes.isBytes;

    var isNatural = baselib.numbers.isNatural;
    var isPair = baselib.lists.isPair;
    var isList = baselib.lists.isList;
    var isChar = baselib.chars.isChar;
    var isVector = baselib.vectors.isVector;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var isBox = baselib.boxes.isBox;
    var isStruct = baselib.structs.isStruct;
    var isStructType = baselib.structs.isStructType;
    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var makeFloat = baselib.numbers.makeFloat;
    var makeComplex = baselib.numbers.makeComplex;
    var makeComplexPolar = baselib.numbers.makeComplexPolar;

    var makeSymbol = baselib.symbols.makeSymbol;

    var makeBox = baselib.boxes.makeBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;

    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;


    // Other helpers
    var withArguments = baselib.withArguments;
    var toDomNode = baselib.format.toDomNode;



    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseContractError = baselib.exceptions.raiseContractError;
    var raiseDivisionByZeroError = baselib.exceptions.raiseDivisionByZeroError;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;



    var testArgument = baselib.check.testArgument;

    var checkOutputPort = baselib.check.checkOutputPort;
    var checkInputPort = baselib.check.checkInputPort;
    var checkString = baselib.check.checkString;
    var checkSymbolOrString = baselib.check.checkSymbolOrString;
    var checkMutableString = baselib.check.checkMutableString;
    var checkSymbol = baselib.check.checkSymbol;
    var checkByte = baselib.check.checkByte;
    var checkChar = baselib.check.checkChar;
    var checkProcedure = baselib.check.checkProcedure;
    var checkNumber = baselib.check.checkNumber;
    var checkReal = baselib.check.checkReal;
    var checkNonNegativeReal = baselib.check.checkNonNegativeReal;
    var checkNatural = baselib.check.checkNatural;
    var checkNaturalInRange = baselib.check.checkNaturalInRange;
    var checkInteger = baselib.check.checkInteger;
    var checkIntegerForChar = baselib.check.makeCheckArgumentType(
        function(x) {
            return (baselib.numbers.isInteger(x) &&
                    ((baselib.numbers.lessThanOrEqual(0, x) &&
                      baselib.numbers.lessThanOrEqual(x, 55295))
                     ||
                     (baselib.numbers.lessThanOrEqual(57344, x) &&
                      baselib.numbers.lessThanOrEqual(x, 1114111))));
        },
        'integer'
    );
    var checkRational = baselib.check.checkRational;
    var checkPair = baselib.check.checkPair;
    var checkList = baselib.check.checkList;
    var checkListofChars = baselib.check.makeCheckListofArgumentType(isChar, 'character');
    var checkListofPairs = baselib.check.makeCheckListofArgumentType(isPair, 'pair');
    var checkVector = baselib.check.checkVector;
    var checkBox = baselib.check.checkBox;
    var checkMutableBox = baselib.check.checkMutableBox;
    var checkInspector = baselib.check.checkInspector;
    var checkPlaceholder = baselib.check.checkPlaceholder;
    var checkSrcloc = baselib.check.checkSrcloc;
    var checkContinuationPromptTag = baselib.check.checkContinuationPromptTag;
    var checkContinuationMarkSet = baselib.check.checkContinuationMarkSet;
    var checkExn = baselib.check.checkExn;
    var checkHash = baselib.check.checkHash;
    var checkMutableHash = baselib.check.checkMutableHash;
    var checkImmutableHash = baselib.check.checkImmutableHash;

    // Just for consistency with the other names, we provide checkAny, which
    // doesn't really do any checking.
    var checkAny = function(M, name, offset) {
        return M.e[M.e.length-1-offset];
    };

    var checkPromptTag = baselib.check.makeCheckArgumentType(
        baselib.contmarks.isContinuationPromptTag,
        'prompt tag');

    var PromptFrame = baselib.frames.PromptFrame;

    //////////////////////////////////////////////////////////////////////





    // Primitives are the set of primitive values.  Not all primitives
    // are coded here; several of them (including call/cc) are injected by
    // the bootstrapping code in compiler/boostrapped-primitives.rkt
    var Primitives = {};

    var installPrimitiveProcedure = function (name, arity, f) {
        Primitives[name] = makePrimitiveProcedure(name, arity, f);
    };

    var installPrimitiveClosure = function (name, arity, f) {
        Primitives[name] = makeClosure(name, arity, f, []);
    };


    var installPrimitiveConstant = function (name, v) {
        Primitives[name] = v;
    };



    installPrimitiveConstant('pi', baselib.numbers.pi);
    installPrimitiveConstant('e', baselib.numbers.e);
    installPrimitiveConstant('null', NULL);
    installPrimitiveConstant('true', true);
    installPrimitiveConstant('false', false);
    installPrimitiveConstant('eof', baselib.constants.EOF_VALUE);


    // The parameter keys here must be uninterned symbols, so we explicitly
    // call the symbol constructor here.
    installPrimitiveConstant('exception-handler-key',
                             new baselib.symbols.Symbol("exnh"));
    installPrimitiveConstant('parameterization-key',
                             new baselib.symbols.Symbol("paramz"));
    installPrimitiveConstant('break-enabled-key',
                             new baselib.symbols.Symbol("break-on?"));


    var gensymCounter = 0;
    installPrimitiveProcedure(
        'gensym',
        makeList(0, 1),
        function(M) {
            var baseName = "g";
            if (M.a === 1) {
                baseName = checkSymbolOrString(M, 'gensym', 0).toString();
            }
            gensymCounter++;
            return new baselib.symbols.Symbol(baseName + gensymCounter);
        });


    installPrimitiveProcedure(
        'display',
        makeList(1, 2),
        function (M) {
            var firstArg = M.e[M.e.length - 1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'display', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'display'));
            return VOID;
        });

    installPrimitiveProcedure(
        'write',
        makeList(1, 2),
        function (M) {
            var firstArg = M.e[M.e.length - 1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'write', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'write'));
            return VOID;
        });

    installPrimitiveProcedure(
        'write-byte',
        makeList(1, 2),
        function (M) {
            var firstArg = checkByte(M, 'write-byte', 0);
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'display', 1);
            }
            outputPort.writeDomNode(M, toDomNode(String.fromCharCode(firstArg), 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'newline', makeList(0, 1),
        function (M) {
            var outputPort = M.params.currentOutputPort;
            if (M.a === 1) {
                outputPort = checkOutputPort(M, 'newline', 1);
            }
            outputPort.writeDomNode(M, toDomNode("\n", 'display'));
            return VOID;
        });

    installPrimitiveProcedure(
        'displayln',
        makeList(1, 2),
        function (M){
            var firstArg = M.e[M.e.length-1];
            var outputPort = M.params.currentOutputPort;
            if (M.a === 2) {
                outputPort = checkOutputPort(M, 'displayln', 1);
            }
            outputPort.writeDomNode(M, toDomNode(firstArg, 'display'));
            outputPort.writeDomNode(M, toDomNode("\n", 'display'));
            return VOID;
        });



    installPrimitiveProcedure(
        'format',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, formatString;
            formatString = checkString(M, 'format', 0).toString();
            for(i = 1; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            return baselib.format.format(formatString, args, 'format');
        });


    installPrimitiveProcedure(
        'printf',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, formatString, result, outputPort;
            formatString = checkString(M, 'printf', 0).toString();
            for(i = 1; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort = M.params.currentOutputPort;
            outputPort.writeDomNode(M, toDomNode(result, 'display'));
            return VOID;
        });


    installPrimitiveProcedure(
        'fprintf',
        baselib.arity.makeArityAtLeast(2),
        function (M) {
            var args = [], i, formatString, outputPort, result;
            outputPort = checkOutputPort(M, 'fprintf', 0);
            formatString = checkString(M, 'fprintf', 1).toString();
            for(i = 2; i < M.a; i++) {
                args.push(M.e[M.e.length - 1 - i]);
            }
            result = baselib.format.format(formatString, args, 'format');
            outputPort.writeDomNode(M, toDomNode(result, 'display'));
            return VOID;
        });



    installPrimitiveProcedure(
        'current-print',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentPrint'] =
                    checkProcedure(M, 'current-print', 0);
                return VOID;
            } else {
                return M.params['currentPrint'];
            }
        });


    installPrimitiveProcedure(
        'current-print-mode',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['print-mode'] = checkString(M, 'print-mode', 0);
                return VOID;
            } else {
                return M.params['print-mode'];
            }
        });


    installPrimitiveProcedure(
        'current-output-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentOutputPort'] =
                    checkOutputPort(M, 'current-output-port', 0);
                return VOID;
            } else {
                return M.params['currentOutputPort'];
            }
        });



    installPrimitiveProcedure(
        'current-error-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentErrorPort'] =
                    checkOutputPort(M, 'current-output-port', 0);
                return VOID;
            } else {
                return M.params['currentOutputPort'];
            }
        });



    installPrimitiveProcedure(
        'current-input-port',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentInputPort'] =
                    checkInputPort(M, 'current-input-port', 0);
                return VOID;
            } else {
                return M.params['currentInputPort'];
            }
        });



    installPrimitiveClosure(
        'read-byte',
        makeList(0, 1),
        function(M) {
            var inputPort = M.params['currentInputPort'];
            if (M.a === 1) {
                inputPort = checkInputPort(M, 'read-byte', 0);
            }
            return plt.runtime.PAUSE(function(restart) {
                inputPort.callWhenReady(M, function() {
                    restart(function(MACHINE) {
                        plt.runtime.finalizeClosureCall(MACHINE,
                                                        inputPort.readByte(MACHINE));
                    });
                });
            });
        });



    installPrimitiveProcedure(
        '=',
        baselib.arity.makeArityAtLeast(2),
        function (M) {
	    var i;
            var firstArg = checkNumber(M, '=', 0), secondArg;
            for (i = 1; i < M.a; i++) {
                secondArg = checkNumber(M, '=', i);
                if (! (baselib.numbers.equals(firstArg, secondArg))) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        '=~',
        3,
        function (M) {
            var x = checkReal(M, '=~', 0);
            var y = checkReal(M, '=~', 1);
            var range = checkNonNegativeReal(M, '=~', 2);
            return baselib.numbers.lessThanOrEqual(
                baselib.numbers.abs(baselib.numbers.subtract(x, y)),
                range);
        });



    var makeChainingBinop = function (predicate, name) {
        return function (M) {
            var firstArg = checkNumber(M, name, 0), secondArg, i;
            for (i = 1; i < M.a; i++) {
                secondArg = checkNumber(M, name, i);
                if (! (predicate(firstArg, secondArg))) {
                    return false;
                }
                firstArg = secondArg;
            }
            return true;
        };
    };

    installPrimitiveProcedure(
        '<',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThan, '<'));


    installPrimitiveProcedure(
        '>',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThan, '>'));


    installPrimitiveProcedure(
        '<=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.lessThanOrEqual, '<='));


    installPrimitiveProcedure(
        '>=',
        baselib.arity.makeArityAtLeast(2),
        makeChainingBinop(baselib.numbers.greaterThanOrEqual, '>='));


    installPrimitiveProcedure(
        '+',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = 0;
            var i = 0;
            for (i = 0; i < M.a; i++) {
                result = baselib.numbers.add(
                    result,
                    checkNumber(M, '+', i));
            }
            return result;
        });


    installPrimitiveProcedure(
        '*',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = 1;
            var i = 0;
            for (i=0; i < M.a; i++) {
                result = baselib.numbers.multiply(
                    result,
                    checkNumber(M, '*', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        '-',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            if (M.a === 1) {
                return baselib.numbers.subtract(
                    0,
                    checkNumber(M, '-', 0));
            }
            var result = checkNumber(M, '-', 0), i;
            for (i = 1; i < M.a; i++) {
                result = baselib.numbers.subtract(
                    result,
                    checkNumber(M, '-', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        '/',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var result = checkNumber(M, '/', 0), i;
            for (i = 1; i < M.a; i++) {
                result = baselib.numbers.divide(
                    result,
                    checkNumber(M, '/', i));
            }
            return result;
        });

    installPrimitiveProcedure(
        'add1',
        1,
        function (M) {
            var firstArg = checkNumber(M, 'add1', 0);
            return baselib.numbers.add(firstArg, 1);
        });


    installPrimitiveProcedure(
        'sub1',
        1,
        function (M) {
            var firstArg = checkNumber(M, 'sub1', 0);
            return baselib.numbers.subtract(firstArg, 1);
        });


    installPrimitiveProcedure(
        'zero?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return baselib.numbers.equals(firstArg, 0);
        });


    installPrimitiveProcedure(
        'cons',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return makePair(firstArg, secondArg);
        });


    installPrimitiveProcedure(
        'list',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var result = NULL, i;
            for (i = 0; i < M.a; i++) {
                result = makePair(M.e[M.e.length - (M.a - i)],
                                  result);
            }
            return result;
        });

    installPrimitiveProcedure(
        'list*',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var result = checkAny(M, 'list*', M.a - 1), i;
            for (i = M.a - 2; i >= 0; i--) {
                result = makePair(M.e[M.e.length - 1 - i],
                                  result);
            }
            return result;
        });


    installPrimitiveProcedure(
        'list-ref',
        2,
        function (M) {
            var lst = checkList(M, 'list-ref', 0);
            var index = checkNaturalInRange(M, 'list-ref', 1,
                                            0, baselib.lists.length(lst));
            return baselib.lists.listRef(lst, baselib.numbers.toFixnum(index));
        });

    installPrimitiveProcedure(
        'unsafe-car',
        1,
        function (M) {
            var firstArg = checkAny(M, 'unsafe-car', 0);
            return firstArg.first;
        });
    installPrimitiveProcedure(
        'unsafe-cdr',
        1,
        function (M) {
            var firstArg = checkAny(M, 'unsafe-cdr', 0);
            return firstArg.rest;
        });
    installPrimitiveProcedure(
        'car',
        1,
        function (M) {
            var firstArg = checkPair(M, 'car', 0);
            return firstArg.first;
        });
    installPrimitiveProcedure(
        'cdr',
        1,
        function (M) {
            var firstArg = checkPair(M, 'cdr', 0);
            return firstArg.rest;
        });

    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // The code from this point up to the end of the c**r functions
    // is autogenerated by whalesong/generate-c-star-d.rkt.
    //
    // Don't modify this code manually: rather, edit the generator and
    // inject the content back in here.
    // Too bad we don't have macros in JavaScript...

    installPrimitiveProcedure(
        'caar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)) {
                return x.first.first;
            } else {
                raiseArgumentTypeError(M, "caar", "caarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)) {
                return x.first.rest;
            } else {
                raiseArgumentTypeError(M, "cdar", "cdarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cadr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)) {
                return x.rest.first;
            } else {
                raiseArgumentTypeError(M, "cadr", "cadrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cddr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)) {
                return x.rest.rest;
            } else {
                raiseArgumentTypeError(M, "cddr", "cddrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caaar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.first)) {
                return x.first.first.first;
            } else {
                raiseArgumentTypeError(M, "caaar", "caaarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdaar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.first)) {
                return x.first.first.rest;
            } else {
                raiseArgumentTypeError(M, "cdaar", "cdaarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cadar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.rest)) {
                return x.first.rest.first;
            } else {
                raiseArgumentTypeError(M, "cadar", "cadarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cddar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.rest)) {
                return x.first.rest.rest;
            } else {
                raiseArgumentTypeError(M, "cddar", "cddarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caadr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.first)) {
                return x.rest.first.first;
            } else {
                raiseArgumentTypeError(M, "caadr", "caadrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdadr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.first)) {
                return x.rest.first.rest;
            } else {
                raiseArgumentTypeError(M, "cdadr", "cdadrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caddr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.rest)) {
                return x.rest.rest.first;
            } else {
                raiseArgumentTypeError(M, "caddr", "caddrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdddr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.rest)) {
                return x.rest.rest.rest;
            } else {
                raiseArgumentTypeError(M, "cdddr", "cdddrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caaaar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.first)&&isPair(x.first.first.first)) {
                return x.first.first.first.first;
            } else {
                raiseArgumentTypeError(M, "caaaar", "caaaarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdaaar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.first)&&isPair(x.first.first.first)) {
                return x.first.first.first.rest;
            } else {
                raiseArgumentTypeError(M, "cdaaar", "cdaaarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cadaar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.first)&&isPair(x.first.first.rest)) {
                return x.first.first.rest.first;
            } else {
                raiseArgumentTypeError(M, "cadaar", "cadaarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cddaar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.first)&&isPair(x.first.first.rest)) {
                return x.first.first.rest.rest;
            } else {
                raiseArgumentTypeError(M, "cddaar", "cddaarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caadar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.rest)&&isPair(x.first.rest.first)) {
                return x.first.rest.first.first;
            } else {
                raiseArgumentTypeError(M, "caadar", "caadarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdadar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.rest)&&isPair(x.first.rest.first)) {
                return x.first.rest.first.rest;
            } else {
                raiseArgumentTypeError(M, "cdadar", "cdadarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caddar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.rest)&&isPair(x.first.rest.rest)) {
                return x.first.rest.rest.first;
            } else {
                raiseArgumentTypeError(M, "caddar", "caddarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdddar',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.first)&&isPair(x.first.rest)&&isPair(x.first.rest.rest)) {
                return x.first.rest.rest.rest;
            } else {
                raiseArgumentTypeError(M, "cdddar", "cdddarable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caaadr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.first)&&isPair(x.rest.first.first)) {
                return x.rest.first.first.first;
            } else {
                raiseArgumentTypeError(M, "caaadr", "caaadrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdaadr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.first)&&isPair(x.rest.first.first)) {
                return x.rest.first.first.rest;
            } else {
                raiseArgumentTypeError(M, "cdaadr", "cdaadrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cadadr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.first)&&isPair(x.rest.first.rest)) {
                return x.rest.first.rest.first;
            } else {
                raiseArgumentTypeError(M, "cadadr", "cadadrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cddadr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.first)&&isPair(x.rest.first.rest)) {
                return x.rest.first.rest.rest;
            } else {
                raiseArgumentTypeError(M, "cddadr", "cddadrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'caaddr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.rest)&&isPair(x.rest.rest.first)) {
                return x.rest.rest.first.first;
            } else {
                raiseArgumentTypeError(M, "caaddr", "caaddrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cdaddr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.rest)&&isPair(x.rest.rest.first)) {
                return x.rest.rest.first.rest;
            } else {
                raiseArgumentTypeError(M, "cdaddr", "cdaddrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cadddr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.rest)&&isPair(x.rest.rest.rest)) {
                return x.rest.rest.rest.first;
            } else {
                raiseArgumentTypeError(M, "cadddr", "cadddrable value", 0, x);
            }
        });
    installPrimitiveProcedure(
        'cddddr',
        1,
        function(M) {
            var x = M.e[M.e.length-1];
            if (isPair(x)&&isPair(x.rest)&&isPair(x.rest.rest)&&isPair(x.rest.rest.rest)) {
                return x.rest.rest.rest.rest;
            } else {
                raiseArgumentTypeError(M, "cddddr", "cddddrable value", 0, x);
            }
        });

    // End autogenerated code.
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    installPrimitiveProcedure(
        'pair?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isPair(firstArg);
        });


    installPrimitiveProcedure(
        'list?',
        1,
        function (M) {
            return isList(M.e[M.e.length -1]);
        });


    installPrimitiveProcedure(
        'set-car!',
        2,
        function (M) {
            var firstArg = checkPair(M, 'set-car!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.first = secondArg;
            return VOID;
        });


    installPrimitiveProcedure(
        'set-cdr!',
        2,
        function (M) {
            var firstArg = checkPair(M, 'set-car!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.rest = secondArg;
            return VOID;
        });

    installPrimitiveProcedure(
        'not',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return (firstArg === false);
        });


    installPrimitiveProcedure(
        'null?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return firstArg === NULL;
        });


    installPrimitiveProcedure(
        'vector?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isVector(firstArg);
        });

    installPrimitiveProcedure(
        'vector',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var i;
            var result = [];
            for (i = 0; i < M.a; i++) {
                result.push(M.e[M.e.length-1-i]);
            }
            var newVector = makeVector(result);
            return newVector;
        });


    installPrimitiveProcedure(
        'make-vector',
        makeList(1, 2),
        function (M) {
            var value = 0;
            var length = baselib.numbers.toFixnum(
                checkNatural(M, 'make-vector', 0));
            if (M.a === 2) {
                value = M.e[M.e.length - 2];
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return makeVector(arr);
        });

    installPrimitiveProcedure(
        'vector->list',
        1,
        function (M) {
            var elts = checkVector(M, 'vector->list', 0).elts;
            var i;
            var result = NULL;
            for (i = 0; i < elts.length; i++) {
                result = makePair(elts[elts.length - 1 - i], result);
            }
            return result;
        });

    installPrimitiveProcedure(
        'list->vector',
        1,
        function (M) {
            var firstArg = checkList(M, 'list->vector', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first);
                firstArg = firstArg.rest;
            }
            return makeVector(result);
        });


    installPrimitiveProcedure(
        'vector-ref',
        2,
        function (M) {
            var elts = checkVector(M, 'vector-ref', 0).elts;
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(M, 'vector-ref', 1, 0, elts.length));
            return elts[index];
        });


    installPrimitiveProcedure(
        'vector-set!',
        3,
        function (M) {
            var elts = checkVector(M, 'vector-set!', 0).elts;
            // FIXME: check out-of-bounds vector
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(M, 'vector-set!', 1,
                                    0, elts.length));
            var val = M.e[M.e.length - 1 - 2];
            elts[index] = val;
            return VOID;
        });


    installPrimitiveProcedure(
        'vector-length',
        1,
        function (M) {
            return checkVector(M, 'vector-length', 0).elts.length;
        });



    installPrimitiveProcedure(
        'make-string',
        makeList(1, 2),
        function (M) {
            var value = String.fromCharCode(0);
            var length = baselib.numbers.toFixnum(
                checkNatural(M, 'make-string', 0));
            if (M.a === 2) {
                value = checkChar(M, 'make-string', 1).val;
            }
            var arr = [];
	    var i;
            for(i = 0; i < length; i++) {
                arr[i] = value;
            }
            return baselib.strings.makeMutableString(arr);
        });

    installPrimitiveProcedure(
        'substring',
        makeList(2, 3),
        function(M) {
            var str = checkString(M, 'substring', 0).toString();
            var start = baselib.numbers.toFixnum(checkNatural(M, 'substring', 1));
            var end = str.length;
            if (M.a === 3) {
                end = baselib.numbers.toFixnum(checkNatural(M, 'substring', 2));
            }
            return baselib.strings.makeMutableString((str.substring(start, end)).split(""));
        });

    installPrimitiveProcedure(
        'string-copy',
        1,
        function(M) {
            var str = checkString(M, 'substring', 0).toString();
            return baselib.strings.makeMutableString(str.substring(0, str.length).split(""));
        });


    installPrimitiveProcedure(
        'list->string',
        1,
        function (M) {
            var firstArg = checkListofChars(M, 'list->string', 0);
            var result = [];
            while (firstArg !== NULL) {
                result.push(firstArg.first.val);
                firstArg = firstArg.rest;
            }
            return result.join('');
        });


    installPrimitiveProcedure(
        'string',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var i;
            var chars = [];
            for (i = 0; i < M.a; i++) {
                chars.push(checkChar(M, 'string', i).val);
            }
            return chars.join('');
        });


    installPrimitiveProcedure(
        'string->list',
        1,
        function (M) {
            var str = checkString(M, 'string->list', 0).toString();
            var i;
            var result = NULL;
            for (i = str.length - 1; i >= 0; i--) {
                result = makePair(baselib.chars.makeChar(str.charAt(i)), result);
            }
            return result;
        });



    installPrimitiveProcedure(
        'string-set!',
        3,
        function (M) {
            var str = checkMutableString(M, 'string-set!', 0);
            var k = checkNatural(M, 'string-set!', 1);
            var ch = checkChar(M, 'string-set!', 2);
	    str.set(baselib.numbers.toFixnum(k), ch.val);
            return VOID;
        });





    installPrimitiveProcedure(
        'symbol?',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return isSymbol(firstArg);
        });

    installPrimitiveProcedure(
        'symbol->string',
        1,
        function (M) {
            var firstArg = checkSymbol(M, 'symbol->string', 0);
            return firstArg.toString();
        });


    installPrimitiveProcedure(
        'string=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if (s !== checkString(M, 'string=?', i).toString()) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string<=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string<=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s <= checkString(M, 'string<=?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string<?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string<?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s < checkString(M, 'string<?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string>=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string>=?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s >= checkString(M, 'string>=?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string>?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string>?', 0).toString();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s > checkString(M, 'string>?', i).toString()) === false) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-ci=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if (s !== checkString(M, 'string-ci=?', i).toString().toUpperCase()) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-ci<=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci<=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s <= checkString(M, 'string-ci<=?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci<?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci<?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s < checkString(M, 'string-ci<?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci>=?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci>=?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s >= checkString(M, 'string-ci>=?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });

    installPrimitiveProcedure(
        'string-ci>?',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var s = checkString(M, 'string-ci>?', 0).toString().toUpperCase();
	    var i;
            for (i = 1; i < M.a; i++) {
                if ((s > checkString(M, 'string-ci>?', i).toString().toUpperCase()) === false) {
                    return false;
                }
            }
            return true;
        });


    installPrimitiveProcedure(
        'string-append',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            var buffer = [];
            var i;
            for (i = 0; i < M.a; i++) {
                buffer.push(checkString(M, 'string-append', i).toString());
            }
            return buffer.join('');
        });

    installPrimitiveProcedure(
        'string-length',
        1,
        function (M) {
            var firstArg = checkString(M, 'string-length', 0).toString();
            return firstArg.length;
        });


    installPrimitiveProcedure(
        'string-ref',
        2,
        function (M) {
            var firstArg = checkString(M, 'string-ref', 0).toString();
            var index = baselib.numbers.toFixnum(
                checkNaturalInRange(M, 'string-ref', 1,
                                    0, firstArg.length));
            return baselib.chars.makeChar(firstArg.charAt(index));
        });



    installPrimitiveProcedure(
        'string?',
        1,
        function (M) {
            return isString(M.e[M.e.length - 1]);
        });


    installPrimitiveProcedure(
        'number->string',
        1,
        function (M) {
            return checkNumber(M, 'number->string', 0).toString();
        });


    installPrimitiveProcedure(
        'string->symbol',
        1,
        function (M) {
            return makeSymbol(checkString(M, 'string->symbol', 0).toString());
        });


    installPrimitiveProcedure(
        'string->number',
        1,
        function (M) {
            return baselib.numbers.fromString(
                checkString(M, 'string->number', 0).toString());
        });


    installPrimitiveProcedure(
        'boolean?',
        1,
        function(M) {
            var v = M.e[M.e.length - 1];
            return (v === true || v === false);
        });


    installPrimitiveProcedure(
        'char?',
        1,
        function(M) {
            return isChar(M.e[M.e.length -1 ]);
        });


    var makeCharComparator = function(name, cmp) {
        return function(M) {
            var s = checkChar(M, name, 0).val;
	    var i;
            for (i = 1; i < M.a; i++) {
                if (!(cmp(s, checkChar(M, name, i).val))) {
                    return false;
                }
            }
            return true;
        };
    };

    installPrimitiveProcedure(
        'char>?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char>?',
                           function(x, y) {
                               return x > y;
                           }));

    installPrimitiveProcedure(
        'char>=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char>=?',
                           function(x, y) {
                               return x >= y;
                           }));

    installPrimitiveProcedure(
        'char<?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char<?',
                           function(x, y) {
                               return x < y;
                           }));

    installPrimitiveProcedure(
        'char<=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char<=?',
                           function(x, y) {
                               return x <= y;
                           }));

    installPrimitiveProcedure(
        'char=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char=?',
                           function(x, y) {
                               return x === y;
                           }));

    installPrimitiveProcedure(
        'char-ci>?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci>?',
                           function(x, y) {
                               return x.toUpperCase() > y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci>=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci>=?',
                           function(x, y) {
                               return x.toUpperCase() >= y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci<?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci<?',
                           function(x, y) {
                               return x.toUpperCase() < y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci<=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci<=?',
                           function(x, y) {
                               return x.toUpperCase() <= y.toUpperCase();
                           }));

    installPrimitiveProcedure(
        'char-ci=?',
        baselib.arity.makeArityAtLeast(2),
        makeCharComparator('char-ci=?',
                           function(x, y) {
                               return x.toUpperCase() === y.toUpperCase();
                           }));



    installPrimitiveProcedure(
        'char->integer',
        1,
        function(M) {
            return checkChar(M, 'char->integer', 0).val.charCodeAt(0);
        });

    installPrimitiveProcedure(
        'integer->char',
        1,
        function(M) {
            var ch = baselib.numbers.toFixnum(checkIntegerForChar(M, 'integer->char', 0));
            return baselib.chars.makeChar(String.fromCharCode(ch));
        });

    installPrimitiveProcedure(
        'char-upcase',
        1,
        function(M) {
            var ch = checkChar(M, 'char=?', 0).val;
            return baselib.chars.makeChar(ch.toUpperCase());
        });

    installPrimitiveProcedure(
        'char-downcase',
        1,
        function(M) {
            var ch = checkChar(M, 'char=?', 0).val;
            return baselib.chars.makeChar(ch.toLowerCase());
        });

    installPrimitiveProcedure(
        'char-numeric?',
        1,
        function(M) {
            var val = checkChar(M, 'char-numeric?', 0).val;
            return val >= '0' && val <= '9';
        });

    installPrimitiveProcedure(
        'char-alphabetic?',
        1,
        function(M) {
            var val = checkChar(M, 'char-alphabetic?', 0).val;
            return ((val >= 'a' && val <= 'z') ||
                    (val >= 'A' && val <= 'Z'));
        });

    var whitespaceRegexp = new RegExp("^\\s*$");
    installPrimitiveProcedure(
        'char-whitespace?',
        1,
        function(M) {
            var val = checkChar(M, 'char-whitespace?', 0).val;
            return val.match(whitespaceRegexp ? true : false);
      });


    installPrimitiveProcedure(
        'char-upper-case?',
        1,
        function(M) {
            var val = checkChar(M, 'char-upper-case?', 0).val;
            return val === val.toUpperCase();
      });

    installPrimitiveProcedure(
        'char-lower-case?',
        1,
        function(M) {
            var val = checkChar(M, 'char-lower-case?', 0).val;
            return val === val.toLowerCase();
      });


    installPrimitiveProcedure(
        'box',
        1,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            return makeBox(firstArg);
        });

    installPrimitiveProcedure(
        'unbox',
        1,
        function (M) {
            var firstArg = checkBox(M, 'unbox', 0);
            return firstArg.ref();
        });

    installPrimitiveProcedure(
        'set-box!',
        2,
        function (M) {
            var firstArg = checkMutableBox(M, 'set-box!', 0);
            var secondArg = M.e[M.e.length-2];
            firstArg.set(secondArg);
            return VOID;
        });

    installPrimitiveProcedure(
        'void',
        baselib.arity.makeArityAtLeast(0),
        function (M) {
            return VOID;
        });


    installPrimitiveProcedure(
        'random',
        makeList(0, 1),
        function (M) {
            if (M.a === 0) {
                return makeFloat(Math.random());
            } else {
                var n = checkNatural(M, 'random', 0);
                return Math.floor(Math.random() * baselib.numbers.toFixnum(n));
            }
        });


    installPrimitiveProcedure(
        'eq?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return firstArg === secondArg;
        });

    installPrimitiveProcedure(
        'eqv?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return baselib.equality.eqv(firstArg, secondArg);
        });



    installPrimitiveProcedure(
        'equal?',
        2,
        function (M) {
            var firstArg = M.e[M.e.length-1];
            var secondArg = M.e[M.e.length-2];
            return equals(firstArg, secondArg);
        });


    // This definition of apply will take precedence over the
    // implementation of apply in the boostrapped-primitives.rkt,
    // since it provides nicer error handling.
    var applyImplementation = function (M) {
        if(--M.cbt < 0) {
            throw applyImplementation;
        }
        var proc = checkProcedure(M, 'apply', 0);
        M.e.pop();
        M.a--;
        checkList(M, 'apply', M.a - 1);
        M.spliceListIntoStack(M.a - 1);
        M.p = proc;
        if (baselib.arity.isArityMatching(proc.racketArity, M.a)) {
            return proc.label(M);
        } else {
            raiseArityMismatchError(M, proc, M.a);
        }
    };

    installPrimitiveClosure(
        'apply',
        baselib.arity.makeArityAtLeast(2),
        applyImplementation);


    // FIXME: The definition of call-with-values is in
    // bootstrapped-primitives.rkt.  We may want to replace it with an
    // explicitly defined one here.





    installPrimitiveProcedure(
        'procedure?',
        1,
        function (M) {
            return isProcedure(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'procedure-arity-includes?',
        2,
        function (M) {
            var proc = checkProcedure(M, 'procedure-arity-includes?', 0);
            var a = checkNatural(M, 'procedure-arity-includes?', 1);
            return baselib.arity.isArityMatching(proc.racketArity, a);
        });

    installPrimitiveProcedure(
        'procedure-arity',
        1,
        function (M) {
            var proc = checkProcedure(M, 'procedure-arity-includes?', 0);
            return proc.racketArity;
        });


    installPrimitiveProcedure(
        'procedure-rename',
        2,
        function (M) {
            var proc = checkProcedure(M, 'procedure-rename', 0);
            var name = checkSymbol(M, 'procedure-rename', 1);
            return baselib.functions.renameProcedure(proc, name);
        });



    installPrimitiveProcedure(
        'member',
        2,
        function (M) {
            var x = M.e[M.e.length-1];
            var lst = M.e[M.e.length-2];
            while (true) {
                if (lst === NULL) {
                    return false;
                }
                if (! isPair(lst)) {
                    raiseArgumentTypeError(M,
                                           'member',
                                           'list',
                                           1,
                                           M.e[M.e.length - 1 - 1]);
                }
                if (equals(x, (lst.first))) {
                    return lst;
                }
                lst = lst.rest;
            }
        });


    installPrimitiveProcedure(
        'reverse',
        1,
        function (M) {
            var rev = NULL;
            var lst = M.e[M.e.length-1];
            while(lst !== NULL) {
                rev = makePair(testArgument(M, 'pair', isPair, lst, 0, 'reverse').first,
                               rev);
                lst = lst.rest;
            }
            return rev;
        });

    installPrimitiveProcedure(
        'void?',
        1,
        function(M) {
            return M.e[M.e.length -1] === VOID;
        });


    installPrimitiveProcedure(
        'box?',
        1,
        function(M) {
            return isBox(M.e[M.e.length -1]);
        });


    installPrimitiveProcedure(
        'eof-object?',
        1,
        function(M) {
            return M.e[M.e.length -1] === baselib.constants.EOF_VALUE;
        });

    installPrimitiveProcedure(
	'number?',
	1,
	function(M) {
	    return isNumber(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'real?',
	1,
	function(M) {
	    return isReal(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'inexact?',
	1,
	function(M) {
	    return isInexact(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
	'complex?',
	1,
	function(M) {
	    return isComplex(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
        'bytes?',
        1,
        function(M) {
            return isBytes(M.e[M.e.length-1]);
        });

    installPrimitiveProcedure(
	'byte?',
	1,
	function(M) {
	    var v = M.e[M.e.length - 1];
            if(!isNatural(v)) { return false; }
            v = baselib.numbers.toFixnum(v);
            return v >= 0 && v < 256;
	});

    installPrimitiveProcedure(
	'rational?',
	1,
	function(M) {
	    return isRational(M.e[M.e.length - 1]);
	});

    installPrimitiveProcedure(
        'even?',
        1,
        function(M) {
            var n = checkInteger(M, 'even?', 0);
            return baselib.numbers.equals(0, baselib.numbers.modulo(n, 2));
        });

    installPrimitiveProcedure(
        'odd?',
        1,
        function(M) {
            var n = checkInteger(M, 'odd?', 0);
            return baselib.numbers.equals(1, baselib.numbers.modulo(n, 2));
        });


    installPrimitiveProcedure(
        'positive?',
        1,
        function(M) {
            var n = checkReal(M, 'positive?', 0);
            return baselib.numbers.greaterThan(n, 0);
        });

    installPrimitiveProcedure(
        'negative?',
        1,
        function(M) {
            var n = checkReal(M, 'negative?', 0);
            return baselib.numbers.lessThan(n, 0);
        });


    installPrimitiveProcedure(
        'inexact->exact',
        1,
        function (M) {
            return baselib.numbers.toExact(
                checkNumber(M, 'inexact->exact', 0));
        });

    installPrimitiveProcedure(
        'exact->inexact',
        1,
        function (M) {
            return baselib.numbers.toInexact(
                checkNumber(M, 'exact->inexact', 0));
        });

    installPrimitiveProcedure(
        'abs',
        1,
        function (M) {
            return baselib.numbers.abs(
                checkNumber(M, 'abs', 0));
        });

    installPrimitiveProcedure(
        'acos',
        1,
        function (M) {
            return baselib.numbers.acos(
                checkNumber(M, 'acos', 0));
        });


    installPrimitiveProcedure(
        'asin',
        1,
        function (M) {
            return baselib.numbers.asin(
                checkNumber(M, 'asin', 0));
        });

    installPrimitiveProcedure(
        'sin',
        1,
        function (M) {
            return baselib.numbers.sin(
                checkNumber(M, 'sin', 0));
        });



    installPrimitiveProcedure(
        'sinh',
        1,
        function (M) {
            return baselib.numbers.sinh(
                checkNumber(M, 'sinh', 0));
        });


    installPrimitiveProcedure(
        'tan',
        1,
        function (M) {
            return baselib.numbers.tan(
                checkNumber(M, 'tan', 0));
        });


    installPrimitiveProcedure(
        'atan',
        makeList(1, 2),
        function (M) {
            if (M.a === 1) {
                return baselib.numbers.atan(
                    checkNumber(M, 'atan', 0));
            } else {
                return makeFloat(
                    Math.atan2(
                        baselib.numbers.toFixnum(checkNumber(M, 'atan', 0)),
                        baselib.numbers.toFixnum(checkNumber(M, 'atan', 1))));
            }
        });


    installPrimitiveProcedure(
        'angle',
        1,
        function (M) {
            return baselib.numbers.angle(
                checkNumber(M, 'angle', 0));
        });

    installPrimitiveProcedure(
        'magnitude',
        1,
        function (M) {
            return baselib.numbers.magnitude(
                checkNumber(M, 'magnitude', 0));
        });

    installPrimitiveProcedure(
        'conjugate',
        1,
        function (M) {
            return baselib.numbers.conjugate(
                checkNumber(M, 'conjugate', 0));
        });




    installPrimitiveProcedure(
        'cos',
        1,
        function (M) {
            return baselib.numbers.cos(
                checkNumber(M, 'cos', 0));
        });


    installPrimitiveProcedure(
        'cosh',
        1,
        function (M) {
            return baselib.numbers.cosh(
                checkNumber(M, 'cosh', 0));
        });

    installPrimitiveProcedure(
        'gcd',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, x;
            for (i = 0; i < M.a; i++) {
                args.push(checkNumber(M, 'gcd', i));
            }
            x = args.shift();
            return baselib.numbers.gcd(x, args);
        });

    installPrimitiveProcedure(
        'lcm',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
            var args = [], i, x;
            for (i = 0; i < M.a; i++) {
                args.push(checkNumber(M, 'lcm', i));
            }
            x = args.shift();
            return baselib.numbers.lcm(x, args);
        });




    installPrimitiveProcedure(
        'exp',
        1,
        function (M) {
            return baselib.numbers.exp(
                checkNumber(M, 'exp', 0));
        });


    installPrimitiveProcedure(
        'expt',
        2,
        function (M) {
            return baselib.numbers.expt(
                checkNumber(M, 'expt', 0),
                checkNumber(M, 'expt', 1));
        });

    installPrimitiveProcedure(
        'exact?',
        1,
        function (M) {
            return baselib.numbers.isExact(
                checkNumber(M, 'exact?', 0));
        });


    installPrimitiveProcedure(
        'integer?',
        1,
        function (M) {
            return baselib.numbers.isInteger(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'exact-integer?',
        1,
        function (M) {
            return (baselib.numbers.isInteger(M.e[M.e.length - 1]) &&
                    baselib.numbers.isExact(M.e[M.e.length - 1]));
        });

    installPrimitiveProcedure(
        'exact-nonnegative-integer?',
        1,
        function (M) {
            return isNatural(M.e[M.e.length - 1]);
        });



    installPrimitiveProcedure(
        'imag-part',
        1,
        function (M) {
            return baselib.numbers.imaginaryPart(
                checkNumber(M, 'imag-part', 0));
        });


    installPrimitiveProcedure(
        'real-part',
        1,
        function (M) {
            return baselib.numbers.realPart(
                checkNumber(M, 'real-part', 0));
        });


    installPrimitiveProcedure(
        'make-polar',
        2,
        function (M) {
            return makeComplexPolar(
                checkReal(M, 'make-polar', 0),
                checkReal(M, 'make-polar', 1));
        });


    installPrimitiveProcedure(
        'make-rectangular',
        2,
        function (M) {
            return makeComplex(
                checkReal(M, 'make-rectangular', 0),
                checkReal(M, 'make-rectangular', 1));
        });

    installPrimitiveProcedure(
        'modulo',
        2,
        function (M) {
            return baselib.numbers.modulo(
                checkInteger(M, 'modulo', 0),
                checkInteger(M, 'modulo', 1));
        });


    installPrimitiveProcedure(
        'remainder',
        2,
        function (M) {
            return baselib.numbers.remainder(
                checkInteger(M, 'remainder', 0),
                checkInteger(M, 'remainder', 1));
        });


    installPrimitiveProcedure(
        'quotient',
        2,
        function (M) {
            return baselib.numbers.quotient(
                checkInteger(M, 'quotient', 0),
                checkInteger(M, 'quotient', 1));
        });



    installPrimitiveProcedure(
        'floor',
        1,
        function (M) {
            return baselib.numbers.floor(
                checkReal(M, 'floor', 0));
        });


    installPrimitiveProcedure(
        'ceiling',
        1,
        function (M) {
            return baselib.numbers.ceiling(
                checkReal(M, 'ceiling', 0));
        });


    installPrimitiveProcedure(
        'round',
        1,
        function (M) {
            return baselib.numbers.round(
                checkReal(M, 'round', 0));
        });


    installPrimitiveProcedure(
        'truncate',
        1,
        function (M) {
            var n = checkReal(M, 'truncate', 0);
            if (baselib.numbers.lessThan(n, 0)) {
                return baselib.numbers.ceiling(n);
            } else {
                return baselib.numbers.floor(n);
            }
        });


    installPrimitiveProcedure(
        'numerator',
        1,
        function (M) {
            return baselib.numbers.numerator(
                checkRational(M, 'numerator', 0));
        });


    installPrimitiveProcedure(
        'denominator',
        1,
        function (M) {
            return baselib.numbers.denominator(
                checkRational(M, 'denominator', 0));
        });


    installPrimitiveProcedure(
        'log',
        1,
        function (M) {
            return baselib.numbers.log(
                checkNumber(M, 'log', 0));
        });


    installPrimitiveProcedure(
        'sqr',
        1,
        function (M) {
            return baselib.numbers.sqr(
                checkNumber(M, 'sqr', 0));
        });




    installPrimitiveProcedure(
        'sqrt',
        1,
        function (M) {
            return baselib.numbers.sqrt(
                checkNumber(M, 'sqrt', 0));
        });



    installPrimitiveProcedure(
        'integer-sqrt',
        1,
        function (M) {
            return baselib.numbers.integerSqrt(
                checkInteger(M, 'integer-sqrt', 0));
        });



    installPrimitiveProcedure(
        'sgn',
        1,
        function (M) {
            return baselib.numbers.sign(
                checkInteger(M, 'sgn', 0));
        });


    installPrimitiveProcedure(
        'min',
        baselib.arity.makeArityAtLeast(1),
        function(M) {
            var i;
            var next;
            var currentMin = checkReal(M, 'min', 0);
            for (i = 1; i < M.a; i++) {
                next = checkReal(M, 'min', i);
                if (baselib.numbers.lessThan(next, currentMin)) {
                    currentMin = next;
                }
            }
            return currentMin;
        });

    installPrimitiveProcedure(
        'max',
        baselib.arity.makeArityAtLeast(1),
        function(M) {
            var i;
            var next;
            var currentMax = checkReal(M, 'min', 0);
            for (i = 1; i < M.a; i++) {
                next = checkReal(M, 'min', i);
                if (baselib.numbers.greaterThan(next, currentMax)) {
                    currentMax = next;
                }
            }
            return currentMax;
        });






    installPrimitiveProcedure(
        'error',
        baselib.arity.makeArityAtLeast(1),
        function (M) {
	    var i;
            if (M.a === 1) {
                var sym = checkSymbol(M, 'error', 1);
                raise(M, baselib.exceptions.makeExnFail(sym.toString(),
                                                        M.captureContinuationMarks()));
            }

            if (isString(M.e[M.e.length - 1])) {
                var vs = [];
                for (i = 1; i < M.a; i++) {
                    vs.push(baselib.format.format("~e", [M.e[M.e.length - 1 - i]]));
                }
                raise(M, baselib.exceptions.makeExnFail(M.e[M.e.length - 1].toString() +
                                                        ": " +
                                                        vs.join(' '),
                                                        M.captureContinuationMarks()));
            }

            if (isSymbol(M.e[M.e.length - 1])) {
                var fmtString = checkString(M, 'error', 1);
                var args = [M.e[M.e.length - 1]];
                for (i = 2; i < M.a; i++) {
                    args.push(M.e[M.e.length - 1 - i]);
                }
                raise(M, baselib.exceptions.makeExnFail(
                    baselib.format.format('~s: ' + fmtString.toString(),
                                          args),
                    M.captureContinuationMarks()));
            }

            // Fall-through
            raiseArgumentTypeError(M, 'error', 'symbol or string', 0, M.e[M.e.length - 1]);
        });


    installPrimitiveProcedure(
        'raise',
        makeList(1, 2),
        function(M) {
            var v = M.e[M.e.length - 1];
            // At the moment, not using the continuation barrier yet.
            // var withBarrier = M.e[M.e.length - 2];
            raise(M, v);
        });



    installPrimitiveProcedure(
        'raise-mismatch-error',
        3,
        function (M) {
            var name = checkSymbol(M, 'raise-mismatch-error', 0);
            var message = checkString(M, 'raise-mismatch-error', 0);
            var val = M.e[M.e.length - 1 - 2];
            raise(M, baselib.exceptions.makeExnFail(
		baselib.format.format("~a: ~a~e",
                                      [name,
                                       message,
                                       val]),
                M.captureContinuationMarks()));
        });


    installPrimitiveProcedure(
        'raise-type-error',
        baselib.arity.makeArityAtLeast(3),
        function (M) {
            var name = checkSymbol(M, 'raise-type-error', 0);
            var expected = checkString(M, 'raise-type-error', 1);
            if (M.a === 3) {
                raiseArgumentTypeError(M,
                                       name,
                                       expected,
                                       void(0),
                                       M.e[M.e.length - 1 - 2]);
            } else {
                raiseArgumentTypeError(M,
                                       name,
                                       expected,
                                       checkNatural(M, 'raise-type-error', 2),
                                       M.e[M.e.length - 1 - 2]);
            }
        });



    installPrimitiveProcedure(
        'make-exn',
        2,
        function(M) {
            var message = checkString(M, 'make-exn', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn', 1);
            return baselib.exceptions.makeExn(message, marks);
        });


    installPrimitiveConstant(
        'struct:exn:fail',
        baselib.exceptions.ExnFail);


    installPrimitiveConstant(
        'prop:exn:srclocs',
        baselib.structs.propExnSrcloc);


    installPrimitiveProcedure(
        'make-exn:fail',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail', 1);
            return baselib.exceptions.makeExnFail(message, marks);
        });


    installPrimitiveProcedure(
        'make-exn:fail:contract',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract', 1);
            return baselib.exceptions.makeExnFailContract(message, marks);
        });


    installPrimitiveProcedure(
        'make-exn:fail:contract:arity',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract:arity', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract:arity', 1);
            return baselib.exceptions.makeExnFailContractArity(message, marks);
        });

    installPrimitiveProcedure(
        'make-exn:fail:contract:variable',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract:variable', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract:variable', 1);
            return baselib.exceptions.makeExnFailContractVariable(message, marks);
        });

    installPrimitiveProcedure(
        'make-exn:fail:contract:divide-by-zero',
        2,
        function(M) {
            var message = checkString(M, 'make-exn:fail:contract:divide-by-zero', 0);
            var marks = checkContinuationMarkSet(M, 'make-exn:fail:contract:divide-by-zero', 1);
            return baselib.exceptions.makeExnFailContractDivisionByZero(message, marks);
        });

    installPrimitiveProcedure(
        'exn-message',
        1,
        function(M) {
            var exn = checkExn(M, 'exn-message', 0);
            return baselib.exceptions.exnMessage(exn);
        });

    installPrimitiveProcedure(
        'exn-continuation-marks',
        1,
        function(M) {
            var exn = checkExn(M, 'exn-continuation-marks', 0);
            return baselib.exceptions.exnContMarks(exn);
        });


    installPrimitiveProcedure(
        'current-continuation-marks',
        makeList(0, 1),
        function(M) {
            var promptTag = baselib.contmarks.DEFAULT_CONTINUATION_PROMPT_TAG;
            if (M.a === 1) {
                promptTag = checkContinuationPromptTag(M, 'current-continuation-marks', 0);
            }
            var contMarks = M.captureContinuationMarks(promptTag);
            return contMarks;
        });

    installPrimitiveProcedure(
        'continuation-mark-set->list',
        makeList(2, 3),
        function(M) {
            var marks = checkContinuationMarkSet(M, 'continuation-mark-set->list', 0);
            var key = checkAny(M, 'continuation-mark-set->list', 1);
            var promptTag = baselib.contmarks.DEFAULT_CONTINUATION_PROMPT_TAG;
            if (M.a === 3) {
                promptTag = checkContinuationPromptTag(M, 'current-continuation-marks', 2);
            }
            return marks.ref(key, promptTag);
        });



    installPrimitiveClosure(
        'make-struct-type',
        makeList(4, 5, 6, 7, 8, 9, 10, 11),
        function (M) {
            withArguments(
                M,
                4,
                [false,
                 NULL,
                 false,
                 false,
                 NULL,
                 false,
                 false],
                function (name,
                          superType,
                          initFieldCount,
                          autoFieldCount,
                          autoV,
                          props,
                          inspector,  // FIXME: currently ignored
                          procSpec,   // FIXME: currently ignored
                          immutables, // FIXME: currently ignored
                          guard,      // FIXME: currently ignored
                          constructorName
                         ) {
                    var structType = baselib.structs.makeStructureType(
                        name,
                        superType,
                        initFieldCount,
                        autoFieldCount,
                        autoV,
                        //inspector,
                        //procSpec,
                        //immutables,
                        guard,
                        props);

                    var constructorValue =
                        makePrimitiveProcedure(
                            constructorName,
                            initFieldCount + (superType ? superType.numberOfArgs : 0),
                            function (M) {
                                var args = M.e.slice(M.e.length - M.a).reverse();
                                return structType.constructor(args);
                            });

                    var predicateValue =
                        makePrimitiveProcedure(
                            name.toString() + "?",
                            1,
                            function (M) {
                                return structType.predicate(M.e[M.e.length - 1]);
                            });

                    var accessorValue =
                        makePrimitiveProcedure(
                            name.toString() + "-accessor",
                            2,
                            function (M) {
                                return structType.accessor(
                                    M.e[M.e.length - 1],
                                    baselib.numbers.toFixnum(M.e[M.e.length - 2]));
                            });
                    accessorValue.structType = structType;

                    var mutatorValue =
                        makePrimitiveProcedure(
                            name.toString() + "-mutator",
                            3,
                            function (M) {
                                return structType.mutator(
                                    M.e[M.e.length - 1],
                                    baselib.numbers.toFixnum(M.e[M.e.length - 2]),
                                    M.e[M.e.length - 3]);
                            });
                    mutatorValue.structType = structType;


                    finalizeClosureCall(M,
                                        structType,
                                        constructorValue,
                                        predicateValue,
                                        accessorValue,
                                        mutatorValue);
                });
        });

    installPrimitiveProcedure(
        'struct?',
        1,
        function(M) {
            return isStruct(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'struct-type?',
        1,
        function(M) {
            return isStructType(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'current-inspector',
        makeList(0, 1),
        function (M) {
            if (M.a === 1) {
                M.params['currentInspector'] =
                    checkInspector(M, 'current-inspector', 0);
                return VOID;
            } else {
                return M.params['currentInspector'];
            }
        }
    );


    installPrimitiveProcedure(
        'make-struct-field-accessor',
        makeList(2, 3),
        function (M){
            var structType = M.e[M.e.length - 1].structType;
            var index = M.e[M.e.length - 2];
            var name;
            if (M.a === 3) {
                name = structType.name + "-" + M.e[M.e.length - 3].toString();
            } else {
                name = structType.name + "-" + 'field' + index;
            }
            var checkStruct = baselib.check.makeCheckArgumentType(structType.predicate,
                                                                  structType.name);
            return makePrimitiveProcedure(
                name,
                1,
                function (M) {
                    var aStruct = checkStruct(M, name, 0);
                    return structType.accessor(
                        aStruct,
                        baselib.numbers.toFixnum(index));
                });
        });


    installPrimitiveProcedure(
        'make-struct-field-mutator',
        makeList(2, 3),
        function (M){
            var structType = M.e[M.e.length - 1].structType;
            var index = M.e[M.e.length - 2];
            var name;
            if (M.a === 3) {
                name = "set-" + structType.name + "-" + M.e[M.e.length - 3].toString() + "!";
            } else {
                name = "set-" + structType.name + "-" + 'field' + index + "!";
            }
            var checkStruct = baselib.check.makeCheckArgumentType(structType.predicate,
                                                                  structType.name);
            return makePrimitiveProcedure(
                name,
                2,
                function (M) {
                    var aStruct = checkStruct(M, name, 0);
                    structType.mutator(
                        aStruct,
                        baselib.numbers.toFixnum(index),
                        M.e[M.e.length - 2]);
                    return VOID;
                });
        });


    installPrimitiveProcedure(
        'make-placeholder',
        1,
        function(M) {
            var v = M.e[M.e.length - 1];
            return baselib.placeholders.makePlaceholder(v);
        });


    installPrimitiveProcedure(
        'placeholder-set!',
        2,
        function(M) {
            var placeholder = checkPlaceholder(M, 'placeholder-set!', 0);
            var val = M.e[M.e.length - 2];
            placeholder.set(val);
            return VOID;
        });


    installPrimitiveProcedure(
        'make-reader-graph',
        1,
        function(M) {
            var x = M.e[M.e.length - 1];
            return baselib.readergraph.readerGraph(x,
                                                   baselib.hashes.makeLowLevelEqHash(),
                                                   0);
        });




    installPrimitiveProcedure(
        'srcloc',
        5,
        function(M) {
            var source = M.e[M.e.length - 1];
            var line = checkNatural(M, 'srcloc', 1);
            var column = checkNatural(M, 'srcloc', 2);
            var position = checkNatural(M, 'srcloc', 3);
            var span = checkNatural(M, 'srcloc', 4);
            return baselib.srclocs.makeSrcloc(source, line, column, position, span);
        });

    installPrimitiveProcedure(
        'make-srcloc',
        5,
        function(M) {
            var source = M.e[M.e.length - 1];
            var line = checkNatural(M, 'make-srcloc', 1);
            var column = checkNatural(M, 'make-srcloc', 2);
            var position = checkNatural(M, 'make-srcloc', 3);
            var span = checkNatural(M, 'make-srcloc', 4);
            return baselib.srclocs.makeSrcloc(source, line, column, position, span);
        });

    installPrimitiveProcedure(
        'srcloc?',
        1,
        function(M) {
            return baselib.srclocs.isSrcloc(M.e[M.e.length - 1]);
        });

    installPrimitiveProcedure(
        'srcloc-source',
        1,
        function(M) {
            return baselib.srclocs.srclocSource(checkSrcloc(M, 'srcloc-source', 0));
        });

    installPrimitiveProcedure(
        'srcloc-line',
        1,
        function(M) {
            return baselib.srclocs.srclocLine(checkSrcloc(M, 'srcloc-line', 0));
        });

    installPrimitiveProcedure(
        'srcloc-column',
        1,
        function(M) {
            return baselib.srclocs.srclocColumn(checkSrcloc(M, 'srcloc-column', 0));
        });


    installPrimitiveProcedure(
        'srcloc-position',
        1,
        function(M) {
            return baselib.srclocs.srclocPosition(checkSrcloc(M, 'srcloc-position', 0));
        });


    installPrimitiveProcedure(
        'srcloc-span',
        1,
        function(M) {
            return baselib.srclocs.srclocSpan(checkSrcloc(M, 'srcloc-span', 0));
        });



    installPrimitiveProcedure(
        'make-continuation-prompt-tag',
        makeList(0, 1),
        function(M) {
            var sym;
            if (M.a === 1) {
                sym = checkSymbol(M, "make-continuation-prompt-tag", 0);
                return new baselib.contmarks.ContinuationPromptTag(sym.toString());
            }
            return new baselib.contmarks.ContinuationPromptTag(void(0));
        });

    installPrimitiveProcedure(
        'continuation-prompt-tag?',
        1,
        function(M) {
            return baselib.contmarks.isContinuationPromptTag(M.e[M.e.length - 1]);
        });



    installPrimitiveProcedure(
        'default-continuation-prompt-tag',
        0,
        function(M) {
            return baselib.contmarks.DEFAULT_CONTINUATION_PROMPT_TAG;
        });

    installPrimitiveProcedure(
        'current-inexact-milliseconds',
        0,
        function(M) {
            return makeFloat((new Date()).valueOf());
        });


    installPrimitiveProcedure(
        'current-seconds',
        0,
        function() {
            return Math.floor( (new Date()).getTime() / 1000 );
        });


    // initializeHash: (listof pair) WhalesongHashtable -> WhalesongHashtable
    var initializeHash = function(lst, hash) {
	while (lst !== NULL) {
	    hash.put(lst.first.first, lst.first.rest);
	    lst = lst.rest;
	}
	return hash;
    };

    var initializeImmutableHash = function(lst, hash) {
	while (lst !== NULL) {
	    hash = hash.functionalPut(lst.first.first, lst.first.rest);
	    lst = lst.rest;
	}
	return hash;
    };


    installPrimitiveProcedure(
        'hash?',
        1,
        function(M) {
            return baselib.hashes.isHash(checkAny(M, 'hash?', 0));
        });
    installPrimitiveProcedure(
        'hash-equal?',
        1,
        function(M) {
            return baselib.hashes.isHashEqual(checkAny(M, 'hash-equal?', 0));
        });
    installPrimitiveProcedure(
        'hash-eq?',
        1,
        function(M) {
            return baselib.hashes.isHashEq(checkAny(M, 'hash-eq?', 0));
        });
    installPrimitiveProcedure(
        'hash-eqv?',
        1,
        function(M) {
            return baselib.hashes.isHashEqv(checkAny(M, 'hash-eqv?', 0));
        });


    installPrimitiveProcedure(
        'make-hasheq',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheq', 0);
            }
            return initializeHash(lst, plt.baselib.hashes.makeEqHashtable());
        });

    installPrimitiveProcedure(
        'make-hasheqv',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheqv', 0);
            }
            return initializeHash(lst, plt.baselib.hashes.makeEqvHashtable());
        });

    installPrimitiveProcedure(
        'make-hash',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hash', 0);
            }
            return initializeHash(lst, plt.baselib.hashes.makeEqualHashtable());
        });

    installPrimitiveProcedure(
        'hash-copy',
        1,
        function(M) {
            var hash = checkMutableHash(M, 'hash-copy', 0);
            return hash.clone();
        });
    
    installPrimitiveProcedure(
        'hash-count',
        1,
        function(M) {
            return checkHash(M, 'hash-count', 0).size();
        });

    installPrimitiveProcedure(
        'hash',
        baselib.arity.makeArityAtLeast(0),
        function(M) {
            var lst = NULL, i;
            for(i = 0; i < M.a; i+=2) {
                if (i+1 < M.a) {
                    lst = makePair(makePair(checkAny(M, 'hash', i), checkAny(M, 'hash', i + 1)),
                                   lst);
                } else {
                    raiseContractError(
                        M,
                        baselib.format.format(
                            "hash: key does not have a value (i.e., an odd number of arguments were provided): ~e",
                            [checkAny(M, 'hash', i)]));
                }
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqualHashtable());
        });

    installPrimitiveProcedure(
        'hasheq',
        baselib.arity.makeArityAtLeast(0),
        function(M) {
            var lst = NULL, i;
            for(i = 0; i < M.a; i+=2) {
                if (i+1 < M.a) {
                    lst = makePair(makePair(checkAny(M, 'hasheq', i), checkAny(M, 'hasheq', i + 1)),
                                   lst);
                } else {
                    raiseContractError(
                        M,
                        baselib.format.format(
                            "hasheq: key does not have a value (i.e., an odd number of arguments were provided): ~e",
                            [checkAny(M, 'hasheq', i)]));
                }
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqHashtable());
        });

    installPrimitiveProcedure(
        'hasheqv',
        baselib.arity.makeArityAtLeast(0),
        function(M) {
            var lst = NULL, i;
            for(i = 0; i < M.a; i+=2) {
                if (i+1 < M.a) {
                    lst = makePair(makePair(checkAny(M, 'hasheqv', i), checkAny(M, 'hasheqv', i + 1)),
                                   lst);
                } else {
                    raiseContractError(
                        M,
                        baselib.format.format(
                            "hasheqv: key does not have a value (i.e., an odd number of arguments were provided): ~e",
                            [checkAny(M, 'hasheqv', i)]));
                }
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqvHashtable());
        });

    installPrimitiveProcedure(
        'make-immutable-hasheq',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheq', 0);
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqHashtable());
        });

    installPrimitiveProcedure(
        'make-immutable-hasheqv',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hasheqv', 0);
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqvHashtable());
        });

    installPrimitiveProcedure(
        'make-immutable-hash',
        makeList(0, 1),
        function(M) {
            var lst = NULL;
            if (M.a === 1) {
                lst = checkListofPairs(M, 'make-hash', 0);
            }
            return initializeImmutableHash(lst, plt.baselib.hashes.makeImmutableEqualHashtable());
        });

    installPrimitiveClosure(
        'hash-ref',
        makeList(2, 3),
        function(M) {
            var hash = checkHash(M, 'hash-ref', 0);
            var key = checkAny(M, 'hash-ref', 1);
            var thunkOrFailVal;
            if (M.a === 3) {
                thunkOrFailVal = checkAny(M, 'hash-ref', 2);
            }
            if (hash.containsKey(key)) {
                finalizeClosureCall(M, hash.get(key));
            } else {
                if (M.a === 2) {
                    raiseContractError(
                        M,
                        baselib.format.format("hash-ref: no value found for key: ~e",
                                           [key]));
                } else {
                    if (isProcedure(thunkOrFailVal)) {
                        M.p = thunkOrFailVal;
                        M.e.length -= M.a;
                        M.a = 0;
                        baselib.functions.rawApply(M);
                    } else {
                        finalizeClosureCall(M, thunkOrFailVal);
                    }
                }
            }
        });

    installPrimitiveProcedure(
        'hash-has-key?',
        2,
        function(M) {
            var hash = checkHash(M, 'hash-ref', 0);
            var key = checkAny(M, 'hash-ref', 1);
            return hash.containsKey(key);
        });

    installPrimitiveProcedure(
        'hash-set!',
        3,
        function(M){ 
            var hash = checkMutableHash(M, 'hash-set!', 0);
            var key = checkAny(M, 'hash-set!', 1);
            var value = checkAny(M, 'hash-set!', 2);
            hash.put(key, value);
            return VOID;
        });

    installPrimitiveProcedure(
        'hash-set',
        3,
        function(M){ 
            var hash = checkImmutableHash(M, 'hash-set', 0);
            var key = checkAny(M, 'hash-set', 1);
            var value = checkAny(M, 'hash-set', 2);
            return hash.functionalPut(key, value);
        });


    installPrimitiveProcedure(
        'hash-remove!',
        2,
        function(M){ 
            var hash = checkMutableHash(M, 'hash-remove!', 0);
            var key = checkAny(M, 'hash-remove!', 1);
            hash.remove(key);
            return VOID;
        });


    installPrimitiveProcedure(
        'hash-remove',
        2,
        function(M){ 
            var hash = checkImmutableHash(M, 'hash-remove', 0);
            var key = checkAny(M, 'hash-remove', 1);
            return hash.functionalRemove(key);
        });

    installPrimitiveProcedure(
        'hash-keys',
        1,
        function(M) {
            var hash = checkHash(M, 'hash-keys', 0);
            return baselib.lists.arrayToList(hash.keys());
        });

    installPrimitiveProcedure(
        'hash-values',
        1,
        function(M) {
            var hash = checkHash(M, 'hash-keys', 0);
            return baselib.lists.arrayToList(hash.values());
        });

    installPrimitiveProcedure(
        'hash-has-key?',
        2,
        function(M){
            var hash = checkHash(M, 'hash-set!', 0);
            var key = checkAny(M, 'hash-set!', 1);
            return hash.containsKey(key);
        });

    installPrimitiveProcedure(
        'equal-hash-code',
        1,
        function(M) {
            return baselib.hashes.getEqualHashCode(checkAny(M, 'equal-hash-code', 0));
        });


    installPrimitiveClosure(
        'abort-current-continuation',
        2, //baselib.arity.makeArityAtLeast(1),
        function(M) {
            var promptTag = checkPromptTag(M, 'abort-current-continuation', 0);
            var vals = [];
            var frame;
            for(i = 1; i < M.a; i++) {
                vals.push(M.e[M.e.length-1-i]);
            }
            
            // First, find the continuation prompt.
            while(true) {
                frame = M.c.pop();
                if (frame instanceof PromptFrame) {
                    break;
                }
            }
            // Shrink the environment to what was observed when the PromptFrame was installed.
            M.e.length = frame.envLength;

            // Default behavior:
            // Re-establish the prompt frame and call the thunk.
            // FIXME: generalize to different handlers!
            M.e.push(c);
            if (isProcedure(vals[0])) {
                M.p = vals[0];
                M.a = 0;
                baselib.functions.rawApply(M);
            } else {
                raiseArgumentTypeError(M,
                                       'abort-current-continuation',
                                       'thunk',
                                       1,
                                       vals[0]);
            }
        });




    exports['Primitives'] = Primitives;
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure;
    exports['installPrimitiveClosure'] = installPrimitiveClosure;
    exports['installPrimitiveConstant'] = installPrimitiveConstant;

}(this.plt.baselib));
/*jslint browser: true, undef: true, unparam: true, sub: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */


// runtime.js: the main runtime library for whalesong.
//

// All of the values here are namespaced under "plt.runtime".
/*global $*/
(function(plt, baselib) {
    'use strict';
    var runtime = {};
    plt.runtime = runtime;



    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // We try to isolate the effect of external modules: all the identifiers we
    // pull from external modules should be listed here, and should otherwise not
    // show up outside this section!
    var isNumber = baselib.numbers.isNumber;
    var isNatural = baselib.numbers.isNatural;
    var isReal = baselib.numbers.isReal;
    var isPair = baselib.lists.isPair;
    var isCaarPair = function(x) { return isPair(x) && isPair(x.first); };
    var isList = baselib.lists.isList;
    var isVector = baselib.vectors.isVector;
    var isString = baselib.strings.isString;
    var isSymbol = baselib.symbols.isSymbol;
    var isPath = baselib.paths.isPath;

    var equals = baselib.equality.equals;

    var NULL = baselib.lists.EMPTY;
    var VOID = baselib.constants.VOID_VALUE;

    var NEGATIVE_ZERO = baselib.numbers.negative_zero;
    var INF = baselib.numbers.inf;
    var NEGATIVE_INF = baselib.numbers.negative_inf;
    var NAN = baselib.numbers.nan;

    var makeFloat = baselib.numbers.makeFloat;
    var makeRational = baselib.numbers.makeRational;
    var makeBignum = baselib.numbers.makeBignum;
    var makeComplex = baselib.numbers.makeComplex;


    var makeSymbol = baselib.symbols.makeSymbol;
    var makePath = baselib.paths.makePath;
    var makeBytes = baselib.bytes.makeBytes;
    var makeBytesFromBase64 = baselib.bytes.makeBytesFromBase64;

    var makeBox = baselib.boxes.makeBox;
    var isBox = baselib.boxes.isBox;

    var makeVector = baselib.vectors.makeVector;
    var makeList = baselib.lists.makeList;
    var makePair = baselib.lists.makePair;
    var makeChar = baselib.chars.makeChar;

    var makeStructureType = baselib.structs.makeStructureType;


    var Struct = baselib.structs.Struct;
    var StructType = baselib.structs.StructType;

    var Closure = baselib.functions.Closure;
    var finalizeClosureCall = baselib.functions.finalizeClosureCall;
    var makePrimitiveProcedure = baselib.functions.makePrimitiveProcedure;
    var makeClosure = baselib.functions.makeClosure;

    var ContinuationPromptTag = baselib.contmarks.ContinuationPromptTag;


    // Other helpers
    var heir = baselib.heir;
    var makeClassPredicate = baselib.makeClassPredicate;
    var toDomNode = baselib.format.toDomNode;
    var toWrittenString = baselib.format.toWrittenString;
    var toDisplayedString = baselib.format.toDisplayedString;



    // Frame structures.
    var Frame = baselib.frames.Frame;
    var CallFrame = baselib.frames.CallFrame;
    var PromptFrame = baselib.frames.PromptFrame;

    // Module structure
    var ModuleRecord = baselib.modules.ModuleRecord;



    // Ports
    var isOutputPort = baselib.ports.isOutputPort;
    var StandardOutputPort = baselib.ports.StandardOutputPort;
    var StandardErrorPort = baselib.ports.StandardErrorPort;
    var StandardInputPort = baselib.ports.StandardInputPort;
    var isOutputStringPort = baselib.ports.isOutputStringPort;




    // Exceptions and error handling.
    var raise = baselib.exceptions.raise;
    var raiseUnboundToplevelError = baselib.exceptions.raiseUnboundToplevelError;
    var raiseArgumentTypeError = baselib.exceptions.raiseArgumentTypeError;
    var raiseContextExpectedValuesError = baselib.exceptions.raiseContextExpectedValuesError;
    var raiseArityMismatchError = baselib.exceptions.raiseArityMismatchError;
    var raiseOperatorApplicationError = baselib.exceptions.raiseOperatorApplicationError;
    var raiseOperatorIsNotPrimitiveProcedure = baselib.exceptions.raiseOperatorIsNotPrimitiveProcedure;
    var raiseUnimplementedPrimitiveError = baselib.exceptions.raiseUnimplementedPrimitiveError;


    var ArityAtLeast = baselib.arity.ArityAtLeast;
    var makeArityAtLeast = baselib.arity.makeArityAtLeast;
    var isArityMatching = baselib.arity.isArityMatching;


    var testArgument = baselib.check.testArgument;
    var testArity = baselib.check.testArity;
    var makeCheckArgumentType = baselib.check.makeCheckArgumentType;


    var Primitives = baselib.primitives.Primitives;
    var installPrimitiveProcedure = baselib.primitives.installPrimitiveProcedure;



    // This value used to be dynamically determined, but something on iOS5
    // breaks badly when I try this.
    // We're very conservative now.
     var STACK_LIMIT_ESTIMATE = 200;



    //////////////////////////////////////////////////////////////////////



    var defaultCurrentPrintImplementation = function (MACHINE) {
        if(--MACHINE.cbt < 0) {
            throw defaultCurrentPrintImplementation;
        }
        var oldArgcount = MACHINE.a;

	var elt = MACHINE.e[MACHINE.e.length - 1];
	var outputPort =
	    MACHINE.params.currentOutputPort;
	if (elt !== VOID) {
	    outputPort.writeDomNode(
                MACHINE,
                toDomNode(elt, MACHINE.params['print-mode']));
	    outputPort.writeDomNode(MACHINE, toDomNode("\n", 'display'));
	}
        MACHINE.a = oldArgcount;
        return finalizeClosureCall(MACHINE, VOID);
    };
    var defaultCurrentPrint = makeClosure(
	"default-printer",
	1,
	defaultCurrentPrintImplementation);



    // makeRandomNonce: -> string
    // Creates a randomly-generated nonce.
    var makeRandomNonce = function() {
        var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
        var LEN = 32;
        var result = [];
        var i;
        for (i = 0; i < LEN; i++) {
            result.push(chars.charAt(Math.floor(Math.random() * chars.length)));
        }
        return result.join('');
    };


    //////////////////////////////////////////////////////////////////////

    // Exclusive Locks.  Even though JavaScript is a single-threaded
    // evaluator, we still have a need to create exclusive regions
    // of evaluation, since we might inadvertantly access some state
    // with two computations, with use of setTimeout.
    var ExclusiveLock = function() {
        this.locked = false;  // (U false string)
        this.alreadyReleased = false;
        this.waiters = [];
    };


    ExclusiveLock.prototype.acquire = function(id, onAcquire) {
        var that = this;
        if (!id) {
            id = makeRandomNonce();
        }

        this.alreadyReleased = false;

        if (this.locked === false) {
            this.locked = id;
            onAcquire.call(
                that,
                // releaseLock
                function() {
                    var waiter;
                    if (that.alreadyReleased) {
                        throw new Error(
                            "Internal error: trying to release the lock, but already released");
                    }
                    if (that.locked === false) {
                        throw new Error(
                            "Internal error: trying to unlock the lock, but already unlocked");
                    }
                    that.locked = false;
                    that.alreadyReleased = true;
                    if (that.waiters.length > 0) {
                        waiter = that.waiters.shift();
                        setTimeout(
                            function() {
                                that.acquire(waiter.id, waiter.onAcquire);
                            },
                            0);
                    }
                });
        } else {
            this.waiters.push({ id: id,
                                onAcquire: onAcquire } );
        }
    };
    //////////////////////////////////////////////////////////////////////





    //////////////////////////////////////////////////////////////////////]
    // The MACHINE

    var Machine = function() {
	this.cbt = STACK_LIMIT_ESTIMATE;  // calls before trampoline
	this.v = void(0);         // value register
	this.p = void(0);        // procedure register
	this.a = void(0);           // argument count
	this.e = [];                // environment
	this.c = [];            // control: Arrayof (U Frame CallFrame PromptFrame)
	this.running = false;
	this.modules = {};     // String -> ModuleRecord
        this.mainModules = []; // Arrayof String
	this.params = {

            // print-as-expression: boolean
            'print-as-expression' : false,

            // print-mode: (one-of "write" "print" "constructor")
            'print-mode' : 'write',


	    // currentDisplayer: DomNode -> Void
	    // currentDisplayer is responsible for displaying to the browser.
	    'currentDisplayer': function(MACHINE, domNode) {
		$(domNode).appendTo(document.body);
	    },

	    // currentErrorDisplayer: DomNode -> Void
	    // currentErrorDisplayer is responsible for displaying errors to the browser.
	    'currentErrorDisplayer': function(MACHINE, domNode) {
                $(domNode).appendTo(document.body);
	    },

            'currentInspector': baselib.inspectors.DEFAULT_INSPECTOR,

	    'currentOutputPort': new StandardOutputPort(),
	    'currentErrorPort': new StandardErrorPort(),
            'currentInputPort': new StandardInputPort(),
	    'currentSuccessHandler': function(MACHINE) {},
	    'currentErrorHandler': function(MACHINE, exn) {
                MACHINE.params.currentErrorDisplayer(
                    MACHINE,
                    toDomNode(exn, MACHINE.params['print-mode']));
            },

	    'currentNamespace': { get: function() {}, 
                                  set : function() {}, 
                                  hasKey : function() { return false; }
                                },

	    // These parameters control how often
	    // control yields back to the browser
	    // for response.  The implementation is a
	    // simple PID controller.
	    //
	    // To tune this, adjust desiredYieldsPerSecond.
	    // Do no touch numBouncesBeforeYield or
	    // maxNumBouncesBeforeYield, because those
	    // are adjusted automatically by the
	    // recomputeMaxNumBouncesBeforeYield
	    // procedure.
	    'desiredYieldsPerSecond': 5,
	    'numBouncesBeforeYield': 2000,   // self-adjusting
	    'maxNumBouncesBeforeYield': 2000, // self-adjusting

	    'currentPrint': defaultCurrentPrint


	};
	this.primitives = Primitives;
        this.exclusiveLock = new ExclusiveLock();
    };


    // Try to get the continuation mark key used for procedure application tracing.
    var getTracedAppKey = function(MACHINE) {
        if (MACHINE.modules['whalesong/lang/private/traced-app.rkt']) {
            return MACHINE.modules['whalesong/lang/private/traced-app.rkt'].getNamespace().get('traced-app-key') || 'traced-app-key';
        }
        return void(0);
    };

    var getTracedCalleeKey = function(MACHINE) {
        if (MACHINE.modules['whalesong/lang/private/traced-app.rkt']) {
            return MACHINE.modules['whalesong/lang/private/traced-app.rkt'].getNamespace().get('traced-callee-key') || 'traced-callee-key';
        }
        return void(0);
    };



    // captureControl implements the continuation-capturing part of
    // call/cc.  It grabs the control frames up to (but not including) the
    // prompt tagged by the given tag.
    Machine.prototype.captureControl = function(skip, tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.c.length - 1 - skip; i >= 0; i--) {
	    if (MACHINE.c[i].tag === tag) {
		return MACHINE.c.slice(i + 1,
					     MACHINE.c.length - skip);
	    }
	}
	raise(MACHINE, new Error("captureControl: unable to find tag " + tag));
    };



    // restoreControl clears the control stack (up to, but not including the
    // prompt tagged by tag), and then appends the rest of the control frames.
    // At the moment, the rest of the control frames is assumed to be in the
    // top of the environment.
    Machine.prototype.restoreControl = function(tag) {
	var MACHINE = this;
	var i;
	for (i = MACHINE.c.length - 1; i >= 0; i--) {
	    if (MACHINE.c[i].tag === tag) {
		MACHINE.c =
		    MACHINE.c.slice(0, i+1).concat(
			MACHINE.e[MACHINE.e.length - 1]);
		return;
	    }
	}
	raise(MACHINE, new Error("restoreControl: unable to find tag " + tag));

    };


    // Splices the list argument in the environment.  Adjusts MACHINE.a
    // appropriately.
    Machine.prototype.spliceListIntoStack = function(depth) {
	var MACHINE = this;
	var lst = MACHINE.e[MACHINE.e.length - 1 - depth];
	var vals = [];
	while(lst !== NULL) {
	    vals.push(lst.first);
	    lst = lst.rest;
	}
	vals.reverse();
	MACHINE.e.splice.apply(MACHINE.e,
				 [MACHINE.e.length - 1 - depth, 1].concat(vals));
	MACHINE.a = MACHINE.a + vals.length - 1;
    };


    // Unsplices a list from the MACHINE stack.
    Machine.prototype.unspliceRestFromStack = function(depth, length) {
	var MACHINE = this;
	var lst = NULL;
	var i;
	for (i = 0; i < length; i++) {
	    lst = makePair(MACHINE.e[MACHINE.e.length - depth - length + i],
                           lst);
	}
	MACHINE.e.splice(MACHINE.e.length - depth - length,
			   length,
			   lst);
	MACHINE.a = MACHINE.a - length + 1;
    };


    // Save the continuation mark on the top control frame.
    Machine.prototype.installContinuationMarkEntry = function(key, value) {
        var frame = this.c[this.c.length - 1];
        var marks = frame.getMarks();
        var i;
        var l = marks.length;
        for (i = 0; i < l; i++) {
            if (key === marks[i][0]) {
                marks[i][1] = value;
                return;
            }
        }
        marks.push([key, value]);
    };


    Machine.prototype.captureContinuationMarks = function(promptTag) {
        var kvLists = [];
        var i;
        var control = this.c;
        var tracedCalleeKey = getTracedCalleeKey(this);
        for (i = control.length-1; i >= 0; i--) {
            if (promptTag !== null &&
                control[i] instanceof PromptFrame && control[i].tag === promptTag) {
                break;
            }
            if (control[i].getMarks().length !== 0) {
                kvLists.push(control[i].getMarks());
            }

            if (tracedCalleeKey !== null &&
                control[i] instanceof CallFrame &&
                control[i].p !== null) {
                kvLists.push([[tracedCalleeKey, control[i].p]]);
            }
        }
        return new baselib.contmarks.ContinuationMarkSet(kvLists);
    };






    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    // The toplevel trampoline.
    //
    //
    // trampoline: MACHINE (MACHINE -> void) -> void
    //
    // All evaluation in Racketland happens in the context of this
    // trampoline.
    //
    var recomputeMaxNumBouncesBeforeYield;

    var scheduleTrampoline = function(MACHINE, f, release) {
        setTimeout(
	    function() {
                MACHINE._trampoline(f, false, release);
            },
            0);
    };

    // Creates a restarting function, that reschedules f in a context
    // with the old argcount in place.
    // Meant to be used only by the trampoline.
    var makeRestartFunction = function(MACHINE, release, pauseLock) {
        var oldArgcount = MACHINE.a;
        return function(f) {
            pauseLock.acquire(
                void(0),
                function(pauseReleaseLock) {
                    MACHINE.a = oldArgcount;
                    MACHINE._trampoline(f, false, release);
                    pauseReleaseLock();
                });
        };
    };


    // These are exception values that are treated specially in the context
    // of the trampoline.

    var HaltError = function(onHalt) {
        // onHalt: MACHINE -> void
        this.onHalt = onHalt || function(MACHINE) {};
    };


    var Pause = function(onPause) {
        // onPause: MACHINE -> void
        this.onPause = onPause;
    };
    var THE_SINGLETON_PAUSE = new Pause();
    var PAUSE = function(onPause) {
        THE_SINGLETON_PAUSE.onPause = onPause;
        throw(THE_SINGLETON_PAUSE);
    };


    // WARNING WARNING WARNING
    //
    // Make sure to get an exclusive lock before jumping into trampoline.
    // Otherwise, Bad Things will happen.
    //
    // e.g. machine.lock.acquire('id', function(release) { machine.trampoline... release();});
    Machine.prototype.trampoline = function(initialJump, noJumpingOff) {
        var that = this;

        that.exclusiveLock.acquire(
            'trampoline',
            function(release) {
                that._trampoline(initialJump, noJumpingOff, release);
            });
    };

    Machine.prototype._trampoline = function(initialJump, noJumpingOff, release) {
        var that = this;
        var thunk = initialJump;
        var startTime = (new Date()).valueOf();
        that.cbt = STACK_LIMIT_ESTIMATE;
        that.params.numBouncesBeforeYield =
            that.params.maxNumBouncesBeforeYield;
        that.running = true;

        while(true) {
            try {
                thunk(that);
                break;
            } catch (e) {
                // There are a few kinds of things that can get thrown
                // during racket evaluation:
                //
                // functions: this gets thrown if the Racket code
                // realizes that the number of bounces has grown too
                // large.  The thrown function represents a restarter
                // function.  The running flag remains true.
                //
                // Pause: causes the machine evaluation to pause, with
                // the expectation that it will restart momentarily.
                // The running flag on the machine will remain true.
                //
                // HaltError: causes evaluation to immediately halt.
                // We schedule the onHalt function of the HaltError to
                // call afterwards.  The running flag on the machine
                // is set to false.
                //
                // Everything else: otherwise, we send the exception value
                // to the current error handler and exit.
                // The running flag is set to false.
                if (typeof(e) === 'function') {
                    thunk = e;
                    that.cbt = STACK_LIMIT_ESTIMATE;


                    // If we're running an a model that prohibits
                    // jumping off the trampoline, continue.
                    if (noJumpingOff) {
                        continue;
                    }

                    if (that.params.numBouncesBeforeYield-- < 0) {
                        recomputeMaxNumBouncesBeforeYield(
                            that,
                            (new Date()).valueOf() - startTime);
                        scheduleTrampoline(that, thunk, release);
                        return;
                    }
                } else if (e === THE_SINGLETON_PAUSE) {
                    var pauseLock = new ExclusiveLock();
                    var oldArgcount = that.a;
                    var restarted = false;
                    var restart = function(f) {
                        pauseLock.acquire(
                            void(0),
                            function(releasePauseLock) {
                                restarted = true;
                                that.a = oldArgcount;
                                that._trampoline(f, false, release);
                                releasePauseLock();
                            });
                    };
                    var internalCall = function(proc, success, fail) {
                        var i;
                        if (restarted) {
                            return;
                        }
                        var args = [];
                        for (i = 3; i < arguments.length; i++) {
                            args.push(arguments[i]);
                        }
                        pauseLock.acquire(
                            void(0),
                            function(release) {
                                var newSuccess = function() {
                                    success.apply(null, arguments);
                                    release();
                                };
                                var newFail = function() {
                                    fail.apply(null, arguments);
                                    release();
                                };
                                baselib.functions.internalCallDuringPause.apply(
                                    null, [that, proc, newSuccess, newFail].concat(args));
                            });
                    };
                    e.onPause(restart, internalCall);
                    return;
                } else if (e instanceof HaltError) {
                    that.running = false;
                    e.onHalt(that);
                    release();
                    return;
                } else {
                    // General error condition: just exit out
                    // of the trampoline and call the current error handler.
                    that.running = false;
                    that.params.currentErrorHandler(that, e);
                    release();
                    return;
                }
            }
        }
        that.running = false;
        that.params.currentSuccessHandler(that);
        release();
        return;

    };


    // recomputeGas: state number -> number
    recomputeMaxNumBouncesBeforeYield = function(MACHINE, observedDelay) {
	// We'd like to see a delay of DESIRED_DELAY_BETWEEN_BOUNCES so
	// that we get MACHINE.params.desiredYieldsPerSecond bounces per
	// second.
	var DESIRED_DELAY_BETWEEN_BOUNCES =
	    (1000 / MACHINE.params.desiredYieldsPerSecond);
	var ALPHA = 50;
	var delta = (ALPHA * ((DESIRED_DELAY_BETWEEN_BOUNCES -
			       observedDelay) /
			      DESIRED_DELAY_BETWEEN_BOUNCES));
	MACHINE.params.maxNumBouncesBeforeYield =
            Math.max(Math.floor(MACHINE.params.maxNumBouncesBeforeYield + delta),
                     1);
    };










    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////









    // There is a single, distinguished default continuation prompt tag
    // that's used to wrap around toplevel prompts.
    var DEFAULT_CONTINUATION_PROMPT_TAG =
        baselib.contmarks.DEFAULT_CONTINUATION_PROMPT_TAG;








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    var VariableReference = function(prefix, pos) {
        this.prefix = prefix;
        this.pos = pos;
    };








    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Implementation of the ready function.  This will fire off when
    // setReadyTrue is called.
    var ready, setReadyTrue, setReadyFalse;
    (function() {
        var runtimeIsReady = true;
        var readyWaiters = [];
        var notifyWaiter = function(w) {
            w();
        };

        ready = function(f) {
            if (runtimeIsReady) {
                notifyWaiter(f);
            } else {
                readyWaiters.push(f);
            }
        };

        setReadyTrue = function() {
            runtimeIsReady = true;
            while(runtimeIsReady && readyWaiters.length > 0) {
                notifyWaiter(readyWaiters.shift());
            }
        };

        setReadyFalse = function() {
            runtimeIsReady = false;
        };

    }());


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////

    // Executes all programs that have been labeled as a main module
    var invokeMains = function(machine, succ, fail) {
        runtime.ready(function () {
            if (window.console && window.console.log) {
                window.console.log("invoking main modules");
            }
            setReadyFalse();
            machine = machine || runtime.currentMachine;
            succ = succ || function() {};
            fail = fail || function() {};
            var mainModules = machine.mainModules.slice();
            var loop = function() {
                if (mainModules.length > 0) {
                    var nextModule = mainModules.shift();
                    nextModule.invoke(machine, loop, fail);
                } else {
                    setReadyTrue();
                    succ();
                }
            };
            setTimeout(loop, 0);
        });
    };

    // Looks up a name in any of the machine's main modules.
    var lookupInMains = function(name, machine) {
        var i;
        machine = machine || runtime.currentMachine;
        for (i = 0; i < machine.mainModules.length; i++) {
            var ns = machine.mainModules[i].getNamespace();
            if(ns.hasKey(name)) {
                return ns.get(name);
            }
        }
    };



    var checkClosureAndArity = function(M) {
        if(!(M.p instanceof Closure)){
            raiseOperatorApplicationError(M,M.p);
        }
        if(!isArityMatching(M.p.racketArity,M.a)) {
            raiseArityMismatchError(M,M.p,M.a);
        }
    };

    var checkPrimitiveArity = function(M) {
        if(!isArityMatching(M.p.racketArity,M.a)) {
            raiseArityMismatchError(M,M.p,M.a);
        }
    };


    //////////////////////////////////////////////////////////////////////
    // Superinstructions to try to reduce code size.
    var si_context_expected = function(n) {
        if (n === 1) { return si_context_expected_1; }
        var f = function(M) { raiseContextExpectedValuesError(M, n); };
        return f;
    };
    var si_context_expected_1 = function(M) { raiseContextExpectedValuesError(M, 1); }

    // A block that omits the multiple values returned on the stack and
    // continues on with the target function f.
    var si_pop_multiple_values_and_continue = function(target) {
        var f = function(M) {
            if(--M.cbt<0) { throw f; }
            M.e.length -= (M.a-1);
            return target(M);
        };
        return f;
    };


    //////////////////////////////////////////////////////////////////////
    var checkedIsZero = function(M, n) {
        if (typeof(n) === 'number') { return n===0; }
        return plt.baselib.numbers.equals(
            testArgument(M, 'number', isNumber, n, 0, 'zero?'),
            0);
    };

    var checkedAdd1 = function(M, n) {
        if (typeof(n) === 'number' && n < 9e15) { return n+1; }
        return plt.baselib.numbers.add(
            testArgument(M, 'number', isNumber, n, 0, 'add1'),
            1);
    };

    var checkedSub1 = function(M, n) {
        if (typeof(n) === 'number' && n > -9e15) { return n-1; }
        return plt.baselib.numbers.subtract(
            testArgument(M, 'number', isNumber, n, 0, 'sub1'),
            1);
    };

    var checkedNegate = function(M, n) {
        if (typeof(n) === 'number') { return -n; }
        return plt.baselib.numbers.subtract(
            0,
            testArgument(M, 'number', isNumber, n, 0, '-'));
    };

    var checkedAdd = function(M, x, y) {
        var sum, i;
        // fast path optimization: binop addition on fixnums
        if (arguments.length === 3) {
            if (typeof(x) === 'number' && typeof(y) === 'number') {
                sum = x + y;
                if (sum < -9e15 || sum > 9e15) {
                    return plt.baselib.numbers.add(x, y);
                }
                return sum;
            } else {
                if (! isNumber(x)) {
                    raiseArgumentTypeError(M, '+', 'number', 0, x);
                }
                if (! isNumber(y)) {
                    raiseArgumentTypeError(M, '+', 'number', 1, y);
                }
                return plt.baselib.numbers.add(x, y);
            }
        }
        // Secondary path: if everything is a fixnum...
        sum = 0;
        for (i = 1; i < arguments.length; i++) {
            if (typeof(arguments[i]) === 'number') {
                sum += arguments[i];
                if (sum < -9e15 || sum > 9e15) {
                    return checkedAddSlowPath(M, Array.prototype.slice.call(arguments, 1));
                }
            } else {
                return checkedAddSlowPath(M, Array.prototype.slice.call(arguments, 1));
            }
        }
        return sum;
    };

    var checkedAddSlowPath = function(M, args) {
        var i;
        var sum = 0;
        for (i = 0; i < args.length; i++) {
            if (! isNumber(args[i])) {
                raiseArgumentTypeError(M, '+', 'number', i, args[i]);
            }
            sum = plt.baselib.numbers.add(sum, args[i]);
        }
        return sum;
    };

    var checkedMul = function(M, x, y) {
        var prod, i;
        // fast path optimization: binop addition on fixnums
        if (arguments.length === 3) {
            if (typeof(x) === 'number' && typeof(y) === 'number') {
                prod = x * y;
                if (prod < -9e15 || prod > 9e15) {
                    return plt.baselib.numbers.multiply(x, y);
                }
                return prod;
            } else {
                if (! isNumber(x)) {
                    raiseArgumentTypeError(M, '*', 'number', 0, x);
                }
                if (! isNumber(y)) {
                    raiseArgumentTypeError(M, '*', 'number', 1, y);
                }
                return plt.baselib.numbers.multiply(x, y);
            }
        }
        // Secondary path: if everything is a fixnum...
        prod = 1;
        for (i = 1; i < arguments.length; i++) {
            if (typeof(arguments[i]) === 'number') {
                prod *= arguments[i];
                if (prod < -9e15 || prod > 9e15) {
                    return checkedMulSlowPath(M, Array.prototype.slice.call(arguments, 1));
                }
            } else {
                return checkedMulSlowPath(M, Array.prototype.slice.call(arguments, 1));
            }
        }
        return prod;
    };

    var checkedMulSlowPath = function(M, args) {
        var i, prod;
        if (! isNumber(args[0])) {
            raiseArgumentTypeError(M, '*', 'number', 0, args[0]);
        }
        var prod = args[0];
        for (i = 1; i < args.length; i++) {
            if (! isNumber(args[i])) {
                raiseArgumentTypeError(M, '*', 'number', i, args[i]);
            }
            prod = plt.baselib.numbers.multiply(prod, args[i]);
        }
        return prod;
    };


    var checkedSub = function(M, x, y) {
        // Assumption: at least two arguments to subtract.
        var sum;
        // fast path optimization: binop subtraction on fixnums
        if (arguments.length === 3) {
            if (typeof(x) === 'number' && typeof(y) === 'number') {
                sum = x - y;
                if (sum < -9e15 || sum > 9e15) {
                    return checkedSubSlowPath(M, Array.prototype.slice.call(arguments, 1));
                }
                return sum;
            } else {
                if (! isNumber(x)) {
                    raiseArgumentTypeError(M, '-', 'number', 0, x);
                }
                if (! isNumber(y)) {
                    raiseArgumentTypeError(M, '-', 'number', 1, y);
                }
                return plt.baselib.numbers.subtract(x, y);
            }
        }
        return checkedSubSlowPath(M, Array.prototype.slice.call(arguments, 1));
    };

    var checkedSubSlowPath = function(M, args) {
        var i;
        if (! isNumber(args[0])) {
            raiseArgumentTypeError(M, '-', 'number', 0, args[0]);
        }
        var sum = args[0];
        for (i = 1; i < args.length; i++) {
            if (! isNumber(args[i])) {
                raiseArgumentTypeError(M, '-', 'number', i, args[i]);
            }
            sum = plt.baselib.numbers.subtract(sum, args[i]);
        }
        return sum;
    };

    var checkedGreaterThan = function(M, x, y) {
        // fast path optimization: binop comparison on fixnums
        if (arguments.length === 3) {
            if (typeof(x) === 'number' && typeof(y) === 'number') {
                return x > y;
            } else {
                if (! isNumber(x)) {
                    raiseArgumentTypeError(M, '>', 'number', 0, x);
                }
                if (! isNumber(y)) {
                    raiseArgumentTypeError(M, '>', 'number', 1, y);
                }
                return plt.baselib.numbers.greaterThan(x, y);
            }
        }
        return checkedGreaterThanSlowPath(M, Array.prototype.slice.call(arguments, 1));
    };

    var checkedGreaterThanSlowPath = function(M, args) {
        var i;
        if (! isNumber(args[0])) {
            raiseArgumentTypeError(M, '>', 'number', 0, args[0]);
        }
        for (i = 1; i < args.length ; i++) {
            if (! isNumber(args[i])) {
                raiseArgumentTypeError(M, '>', 'number', i, args[i]);
            }
            if (! plt.baselib.numbers.greaterThan(args[i-1], args[i])) {
                return false;
            }
        }
        return true;
    };


    var checkedNumEquals = function(M, x, y) {
        // Assumption: at least two arguments to compare
        var i;

        // fast path optimization: binop comparison on fixnums
        if (arguments.length === 3) {
            if (typeof(x) === 'number' && typeof(y) === 'number') {
                return x === y;
            } else {
                if (! isNumber(x)) {
                    raiseArgumentTypeError(M, '=', 'number', 0, x);
                }
                if (! isNumber(y)) {
                    raiseArgumentTypeError(M, '=', 'number', 1, y);
                }
                return plt.baselib.numbers.equals(x, y);
            }
        }
        if (typeof(arguments[1]) !== 'number') {
            return checkedNumEqualsSlowPath(M, Array.prototype.slice.call(arguments, 1));
        }
        var n = arguments[1];
        for (i = 2; i < arguments.length; i++) {
            if (typeof(arguments[i]) === 'number') {
                if (n !== arguments[i]) { return false; }
            } else {
                return checkedNumEqualsSlowPath(M, Array.prototype.slice.call(arguments, 1));
            }
        }
        return true;
    };

    var checkedNumEqualsSlowPath = function(M, args) {
        var i;
        if (! isNumber(args[0])) {
            raiseArgumentTypeError(M, '=', 'number', 0, args[0]);
        }
        var n = args[0];
        for (i = 1; i < args.length; i++) {
            if (! isNumber(args[i])) {
                raiseArgumentTypeError(M, '=', 'number', i, args[i]);
            }
            if (! plt.baselib.numbers.equals(n, args[i])) {
                return false;
            }
        }
        return true;
    };

    var checkedCar = function(M, v) {
        if (isPair(v)) { return v.first; }
        raiseArgumentTypeError(M, 'car', 'pair', 0, v);
    };

    var checkedCdr = function(M, v) {
        if (isPair(v)) { return v.rest; }
        raiseArgumentTypeError(M, 'cdr', 'pair', 0, v);
    };

    var checkedVectorRef = function(M, vec, i) {
        var expectedTypeName;
        if (isVector(vec)) {
            if (typeof(i) === 'number') {
                if (i >= 0 && i < vec.elts.length) {
                    return vec.elts[i];
                }                
            } else if (isNatural(i)) {
                i = baselib.numbers.toFixnum(i);
                if (i >= 0 && i < vec.elts.length) {
                    return vec.elts[i];
                }
            }
            expectedTypeName = baselib.format.format('natural between 0 and ~a', 
                                                     [vec.elts.length]);
            raiseArgumentTypeError(M, 'vector-ref', expectedTypeName, 1, i);
        } else {
            raiseArgumentTypeError(M, 'vector-ref', 'vector', 0, vec);
        }
    };


    var checkedVectorSet = function(M, vec, i, val) {
        var expectedTypeName;
        if (isVector(vec)) {
            if (typeof(i) === 'number') {
                if (i >= 0 && i < vec.elts.length) {
                    vec.elts[i] = val;
                    return VOID;
                }                
            } else if (isNatural(i)) {
                i = baselib.numbers.toFixnum(i);
                if (i >= 0 && i < vec.elts.length) {
                    vec.elts[i] = val;
                    return VOID;
                }
            }
            expectedTypeName = baselib.format.format('natural between 0 and ~a', 
                                                     [vec.elts.length]);
            raiseArgumentTypeError(M, 'vector-set!', expectedTypeName, 1, i);
        } else {
            raiseArgumentTypeError(M, 'vector-set!', 'vector', 0, vec);
        }
    };


    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////


    // Exports
    var exports = runtime;
    exports['currentMachine'] = new Machine();
    exports['invokeMains'] = invokeMains;
    exports['lookupInMains'] = lookupInMains;


    // installing new primitives
    exports['installPrimitiveProcedure'] = installPrimitiveProcedure;
    exports['makePrimitiveProcedure'] = makePrimitiveProcedure;
    exports['Primitives'] = Primitives;

    exports['ready'] = ready;
    // Private: the runtime library will set this flag to true when
    // the library has finished loading.
    exports['setReadyTrue'] = setReadyTrue;
    exports['setReadyFalse'] = setReadyFalse;

    exports['Machine'] = Machine;
    exports['Frame'] = Frame;
    exports['CallFrame'] = CallFrame;
    exports['PromptFrame'] = PromptFrame;
    exports['Closure'] = Closure;
    exports['ModuleRecord'] = ModuleRecord;
    exports['VariableReference'] = VariableReference;
    exports['ContinuationPromptTag'] = ContinuationPromptTag;
    exports['DEFAULT_CONTINUATION_PROMPT_TAG'] =
	DEFAULT_CONTINUATION_PROMPT_TAG;
    exports['NULL'] = NULL;
    exports['VOID'] = VOID;

    exports['NEGATIVE_ZERO'] = NEGATIVE_ZERO;
    exports['INF'] = INF;
    exports['NEGATIVE_INF'] = NEGATIVE_INF;
    exports['NAN'] = NAN;





    exports['testArgument'] = testArgument;
    exports['testArity'] = testArity;
    exports['makeCheckArgumentType'] = makeCheckArgumentType;


    exports['raise'] = raise;
    exports['raiseUnboundToplevelError'] = raiseUnboundToplevelError;
    exports['raiseArgumentTypeError'] = raiseArgumentTypeError;
    exports['raiseContextExpectedValuesError'] = raiseContextExpectedValuesError;
    exports['raiseArityMismatchError'] = raiseArityMismatchError;
    exports['raiseOperatorApplicationError'] = raiseOperatorApplicationError;
    exports['raiseOperatorIsNotPrimitiveProcedure'] = raiseOperatorIsNotPrimitiveProcedure;
    exports['raiseUnimplementedPrimitiveError'] = raiseUnimplementedPrimitiveError;


    exports['finalizeClosureCall'] = finalizeClosureCall;


    //////////////////////////////////////////////////////////////////////


    // Type constructors

    // numbers
    exports['makeList'] = makeList;
    exports['makePair'] = makePair;
    exports['makeChar'] = makeChar;
    exports['makeVector'] = makeVector;
    exports['makeBox'] = makeBox;
    exports['makeFloat'] = makeFloat;
    exports['makeRational'] = makeRational;
    exports['makeBignum'] = makeBignum;
    exports['makeComplex'] = makeComplex;
    exports['makeSymbol'] = makeSymbol;
    exports['makePath'] = makePath;
    exports['makeBytes'] = makeBytes;
    exports['makeBytesFromBase64'] = makeBytesFromBase64;


    exports['checkPair'] = baselib.check.checkPair;
    exports['checkNumber'] = baselib.check.checkNumber;
    exports['checkString'] = baselib.check.checkString;



    // Type predicates
    exports['isPair'] = isPair;
    exports['isCaarPair'] = isCaarPair;
    exports['isList'] = isList;
    exports['isVector'] = isVector;
    exports['isOutputPort'] = isOutputPort;
    exports['isOutputStringPort'] = isOutputStringPort;
    exports['isBox'] = isBox;
    exports['isString'] = isString;
    exports['isSymbol'] = isSymbol;
    exports['isPath'] = isPath;
    exports['isNumber'] = isNumber;
    exports['isNatural'] = isNatural;
    exports['isReal'] = isReal;
    exports['isProcedure'] = plt.baselib.functions.isProcedure;
    exports['equals'] = equals;

    exports['toDomNode'] = toDomNode;
    exports['toWrittenString'] = toWrittenString;
    exports['toDisplayedString'] = toDisplayedString;

    exports['ArityAtLeast'] = ArityAtLeast;
    exports['makeArityAtLeast'] = makeArityAtLeast;
    exports['isArityMatching'] = isArityMatching;

    exports['heir'] = heir;
    exports['makeClassPredicate'] = makeClassPredicate;

    exports['PAUSE'] = PAUSE;
    exports['HaltError'] = HaltError;



    exports['makeStructureType'] = makeStructureType;
    exports['Struct'] = Struct;
    exports['StructType'] = StructType;

    exports['getTracedAppKey'] = getTracedAppKey;
    exports['getTracedCalleeKey'] = getTracedCalleeKey;

    exports['si_context_expected'] = si_context_expected;
    exports['si_context_expected_1'] = si_context_expected_1;
    exports['checkClosureAndArity'] = checkClosureAndArity;
    exports['checkPrimitiveArity'] = checkPrimitiveArity;

    exports['checkedIsZero'] = checkedIsZero;
    exports['checkedAdd1'] = checkedAdd1;
    exports['checkedSub1'] = checkedSub1;
    exports['checkedNegate'] = checkedNegate;
    exports['checkedAdd'] = checkedAdd;
    exports['checkedAddSlowPath'] = checkedAddSlowPath;
    exports['checkedMul'] = checkedMul;
    exports['checkedMulSlowPath'] = checkedMulSlowPath;
    exports['checkedSub'] = checkedSub;
    exports['checkedSubSlowPath'] = checkedSubSlowPath;
    exports['checkedNumEquals'] = checkedNumEquals;
    exports['checkedNumEqualsSlowPath'] = checkedNumEqualsSlowPath;
    exports['checkedGreaterThan'] = checkedGreaterThan;
    exports['checkedGreaterThanSlowPath'] = checkedGreaterThanSlowPath;
    exports['checkedCar'] = checkedCar;
    exports['checkedCdr'] = checkedCdr;
    exports['checkedVectorRef'] = checkedVectorRef;
    exports['checkedVectorSet'] = checkedVectorSet;


    exports['makeRandomNonce'] = makeRandomNonce;
}(this.plt, this.plt.baselib));
(function(M, SUCCESS, FAIL, PARAMS) {(function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _226=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_186_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_186)(M);};





var _183=function(M){if(--M.cbt<0){throw _183;}
//"lambda body for do-it"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _173=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _166=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_126_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_126)(M);};

var _150=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_154,M.p));
return((M.p).label)(M);};

var _128=function(M){if(--M.cbt<0){throw _128;}
//"lambda body for rest-lists"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_176)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _142=function(M){if(M.v===false){return(_140)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1467;
M.e[M.e.length-2]="all lists must have the same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _130=function(M){M.c.push(new RT.PromptFrame(_132,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([M.primitives["and"],false,false]);M.e[M.e.length-1].names=["and",false,false];
M.v=new RT.Closure(_123,2,[M.e[M.e.length-1]],"do-it");
M.e[M.e.length-1][2]=M.v;
M.v=new RT.Closure(_124,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][1]=M.v;
M.v=new RT.Closure(_129,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _90=function(M){if(--M.cbt<0){throw _90;}
return(_88)(M);};

var _115=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _106=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_108)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _88=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_92,M.p));
return((M.p).label)(M);};

var _85=function(M){if(M.v===false){return(_83)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1468;
M.e[M.e.length-2]="all lists must have the same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _80=function(M){if(M.v===false){return(_78)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _63=function(M){if(--M.cbt<0){throw _63;}
//"lambda body for do-it"

M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.p=_64_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_64)(M);};

var _54=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _320=function(M){M.c.push(new RT.PromptFrame(_322,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_319,2,void(0),"assoc");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _27=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_31,M.p));
return((M.p).label)(M);};

var _22=function(M){M.e.push(void(0),void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.p=_6_c;
M.a=1;
M.c.push(new RT.CallFrame(_29,M.p));
return(_6)(M);};

var _17=function(M){M.e.push(M.e[M.e.length-2]);
M.p=_5_c;
M.a=1;
M.c.push(new RT.CallFrame(_26,M.p));
return(_5)(M);};

var _129=function(M){if(--M.cbt<0){throw _129;}
//"lambda body for unknown"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _171=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_127_c;
M.a=1;
M.c.push(new RT.CallFrame(_175,M.p));
return(_127)(M);};

var _164=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_166)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _126=function(M){if(--M.cbt<0){throw _126;}
//"lambda body for some-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_164)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _125=function(M){if(--M.cbt<0){throw _125;}
//"lambda body for all-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_157)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _385=function(M){if(--M.cbt<0){throw _385;}
if(M.a===1){return(_387)(M);}else{if(M.a===0){return(_386)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
M.p=(M.c[M.c.length-1].label.mvr||RT.si_context_expected_1);
M.c.pop();
return(M.p)(M);}}};

var _373=function(M){if(--M.cbt<0){throw _373;}
RT.Primitives["call-with-values"]=RT.Primitives["call-with-values"]||M.v;
RT.Primitives["call/cc"]=RT.Primitives["call/cc"]||_callCCEntry_c;
RT.Primitives["call-with-current-continuation"]=RT.Primitives["call-with-current-continuation"]||_callCCEntry_c;
return(_384)(M);};

var _337=function(M){if(--M.cbt<0){throw _337;}
RT.Primitives["length"]=RT.Primitives["length"]||M.v;
return(_349)(M);};

var _294=function(M){if(--M.cbt<0){throw _294;}
RT.Primitives["assq"]=RT.Primitives["assq"]||M.v;
return(_306)(M);};

var _264=function(M){if(--M.cbt<0){throw _264;}
RT.Primitives["memv"]=RT.Primitives["memv"]||M.v;
return(_276)(M);};

var _235=function(M){if(--M.cbt<0){throw _235;}
M.e[M.e.length-2]=M.v;
return(_233)(M);};

var _212=function(M){if(--M.cbt<0){throw _212;}
return(_210)(M);};

var _132=function(M){if(--M.cbt<0){throw _132;}
RT.Primitives["andmap"]=RT.Primitives["andmap"]||M.v;
return(_190)(M);};

var _147=function(M){if(--M.cbt<0){throw _147;}
return(_145)(M);};

var _122=function(M){if(--M.cbt<0){throw _122;}
M.e[M.e.length-2]=M.v;
return(_120)(M);};

var _333=function(M){if(--M.cbt<0){throw _333;}
//"lambda body for unknown"

M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=0;
M.p=_334_c;
M.a=2;
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return(_334)(M);};

var _87=function(M){if(--M.cbt<0){throw _87;}
return(_85)(M);};

var _31=function(M){if(--M.cbt<0){throw _31;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.p=_7_c;
M.a=1;
M.c.push(new RT.CallFrame(_34,M.p));
return(_7)(M);};

var _120=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _113=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_67_c;
M.a=1;
M.c.push(new RT.CallFrame(_117,M.p));
return(_67)(M);};

var _101=function(M){M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _91=function(M){if(--M.cbt<0){throw _91;}
M.e.length-=(M.a-1);
return(_92)(M);};



var _65=function(M){if(--M.cbt<0){throw _65;}
//"lambda body for all-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_99)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _64=function(M){if(--M.cbt<0){throw _64;}
//"lambda body for loop"

M.e.push(M.e[M.e.length-2]);
M.p=_65_c;
M.a=1;
M.c.push(new RT.CallFrame(_82,M.p));
return(_65)(M);};

var _357=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_347_c;
M.a=1;
M.c.push(new RT.CallFrame(_361,M.p));
return(_347)(M);};

var _57=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_7_c;
M.a=1;
M.c.push(new RT.CallFrame(_61,M.p));
return(_7)(M);};

var _47=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_5_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_5)(M);};

var _40=function(M){M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _7=function(M){if(--M.cbt<0){throw _7;}
//"lambda body for rest-lists"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_57)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6=function(M){if(--M.cbt<0){throw _6;}
//"lambda body for first-tuple"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_52)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _24=function(M){if(M.v===false){return(_22)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1469;
M.e[M.e.length-2]="all lists must have the same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _19=function(M){if(M.v===false){return(_17)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3=function(M){if(--M.cbt<0){throw _3;}
//"lambda body for loop"

M.e.push(M.e[M.e.length-2]);
M.p=_4_c;
M.a=1;
M.c.push(new RT.CallFrame(_21,M.p));
return(_4)(M);};

var _32=function(M){M.p=_3_c;
M.a=2;
M.c.push(new RT.CallFrame(_37,M.p));
return(_3)(M);};

var _392=function(M){return(_8)(M);};

var _384=function(M){RT.Primitives["values"]=RT.Primitives["values"]||_385_c;
return(_388)(M);};

var _381=function(M){return(_384)(M);};

var _369=function(M){if(--M.cbt<0){throw _369;}
M.e[M.e.length-2]=M.v;
return(_367)(M);};

var _278=function(M){if(--M.cbt<0){throw _278;}
RT.Primitives["memf"]=RT.Primitives["memf"]||M.v;
return(_292)(M);};

var _250=function(M){if(--M.cbt<0){throw _250;}
RT.Primitives["memq"]=RT.Primitives["memq"]||M.v;
return(_262)(M);};

var _192=function(M){if(--M.cbt<0){throw _192;}
RT.Primitives["ormap"]=RT.Primitives["ormap"]||M.v;
return(_244)(M);};

var _204=function(M){if(--M.cbt<0){throw _204;}
return(_202)(M);};

var _199=function(M){if(--M.cbt<0){throw _199;}
return(_197)(M);};

var _154=function(M){if(--M.cbt<0){throw _154;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _144=function(M){if(--M.cbt<0){throw _144;}
return(_142)(M);};

var _117=function(M){if(--M.cbt<0){throw _117;}
M.e[M.e.length-2]=M.v;
return(_115)(M);};

var _10=function(M){if(--M.cbt<0){throw _10;}
RT.Primitives["map"]=RT.Primitives["map"]||M.v;
return(_69)(M);};

var _56=function(M){if(--M.cbt<0){throw _56;}
M.e[M.e.length-2]=M.v;
return(_54)(M);};

var _70=function(M){if(--M.cbt<0){throw _70;}
M.e.length-=(M.a-1);
return(_71)(M);};


var _375=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+2),2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _99=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_101)(M);}else{M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_65_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_65)(M);}};

var _68=function(M){if(--M.cbt<0){throw _68;}
//"lambda body for rest-lists"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_118)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _67=function(M){if(--M.cbt<0){throw _67;}
//"lambda body for first-tuple"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_113)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _66=function(M){if(--M.cbt<0){throw _66;}
//"lambda body for some-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_106)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _62=function(M){if(--M.cbt<0){throw _62;}
//"lambda body for unknown"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.p=_63_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_63)(M);};

var _69=function(M){M.c.push(new RT.PromptFrame(_71,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=_62_c;
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _359=function(M){M.p=_348_c;
M.a=2;
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return(_348)(M);};

var _355=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_357)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _59=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _45=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_47)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _38=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_40)(M);}else{M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_4_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_4)(M);}};



var _5=function(M){if(--M.cbt<0){throw _5;}
//"lambda body for some-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_45)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4=function(M){if(--M.cbt<0){throw _4;}
//"lambda body for all-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_38)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _callCCClosureEntry=function(M){if(--M.cbt<0){throw _callCCClosureEntry;}
M.v=M.e[M.e.length-1];
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.restoreControl(RT.DEFAULT_CONTINUATION_PROMPT_TAG);
M.e=M.e[M.e.length-2].slice(0);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _8=function(M){M.c.push(new RT.PromptFrame(_10,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=_1_c;
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _238=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _309=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"caarpair",RT.isCaarPair,M.e[M.e.length-5],0,"caar")).first.first;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_311)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _388=function(M){RT.Primitives["apply"]=RT.Primitives["apply"]||_389_c;
};

var _386=function(M){M.p=(M.c[M.c.length-1].label.mvr||RT.si_context_expected_1);
M.c.pop();
return(M.p)(M);};

var _callCCEntry=function(M){if(--M.cbt<0){throw _callCCEntry;}
M.p=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.captureControl(0,RT.DEFAULT_CONTINUATION_PROMPT_TAG);
M.e[M.e.length-2]=M.e.slice(0, M.e.length-3);
M.e[M.e.length-3]=new RT.Closure(_callCCClosureEntry,1,[M.e[M.e.length-2],M.e[M.e.length-1]],"call/cc");
M.e.length-=2;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-1,0);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _361=function(M){if(--M.cbt<0){throw _361;}
M.e[M.e.length-2]=M.v;
return(_359)(M);};

var _308=function(M){if(--M.cbt<0){throw _308;}
RT.Primitives["assv"]=RT.Primitives["assv"]||M.v;
return(_320)(M);};

var _284=function(M){if(--M.cbt<0){throw _284;}
if(M.v===false){return(_281)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _214=function(M){if(--M.cbt<0){throw _214;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _209=function(M){if(--M.cbt<0){throw _209;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.p=_188_c;
M.a=1;
M.c.push(new RT.CallFrame(_212,M.p));
return(_188)(M);};

var _175=function(M){if(--M.cbt<0){throw _175;}
M.e[M.e.length-2]=M.v;
return(_173)(M);};

var _152=function(M){if(--M.cbt<0){throw _152;}
return(_150)(M);};

var _139=function(M){if(--M.cbt<0){throw _139;}
return(_137)(M);};

var _95=function(M){if(--M.cbt<0){throw _95;}
M.e[M.e.length-2]=M.v;
return(_93)(M);};

var _82=function(M){if(--M.cbt<0){throw _82;}
return(_80)(M);};

var _37=function(M){if(--M.cbt<0){throw _37;}
M.e[M.e.length-2]=M.v;
return(_35)(M);};

var _26=function(M){if(--M.cbt<0){throw _26;}
return(_24)(M);};

var _370=function(M){if(--M.cbt<0){throw _370;}
//"lambda body for unknown"

M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.p=M.e[M.e.length-1];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_377,M.p));
return((M.p).label)(M);};

var _292=function(M){M.c.push(new RT.PromptFrame(_294,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_291,2,void(0),"assq");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _367=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _348=function(M){if(--M.cbt<0){throw _348;}
//"lambda body for append-2"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_365)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _347=function(M){if(--M.cbt<0){throw _347;}
//"lambda body for append-many"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_355)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _9=function(M){if(--M.cbt<0){throw _9;}
M.e.length-=(M.a-1);
return(_10)(M);};


var _52=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_6_c;
M.a=1;
M.c.push(new RT.CallFrame(_56,M.p));
return(_6)(M);};

var _35=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _2=function(M){if(--M.cbt<0){throw _2;}
//"lambda body for do-it"

M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.p=_3_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_3)(M);};

var _1=function(M){if(--M.cbt<0){throw _1;}
//"lambda body for unknown"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.p=_2_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_2)(M);};

var _279=function(M){M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_284,M.p));
return((M.p).label)(M);};

var _236=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_188_c;
M.a=1;
M.c.push(new RT.CallFrame(_240,M.p));
return(_188)(M);};

var _233=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _389=function(M){if(--M.cbt<0){throw _389;}
M.p=M.e[M.e.length-1];
M.e.pop();
M.a=(M.a-1);
M.spliceListIntoStack((M.a-1));
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+0),0);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _387=function(M){M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _377=function(M){if(--M.cbt<0){throw _377;}
M.a=1;
return(_378)(M);};

var _351=function(M){if(--M.cbt<0){throw _351;}
RT.Primitives["append"]=RT.Primitives["append"]||M.v;
return(_371)(M);};

var _322=function(M){if(--M.cbt<0){throw _322;}
RT.Primitives["assoc"]=RT.Primitives["assoc"]||M.v;
return(_335)(M);};

var _246=function(M){if(--M.cbt<0){throw _246;}
RT.Primitives["caar"]=RT.Primitives["caar"]||M.v;
return(_248)(M);};

var _240=function(M){if(--M.cbt<0){throw _240;}
M.e[M.e.length-2]=M.v;
return(_238)(M);};

var _207=function(M){if(--M.cbt<0){throw _207;}
return(_205)(M);};

var _180=function(M){if(--M.cbt<0){throw _180;}
M.e[M.e.length-2]=M.v;
return(_178)(M);};

var _149=function(M){if(--M.cbt<0){throw _149;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][1];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.p=_128_c;
M.a=1;
M.c.push(new RT.CallFrame(_152,M.p));
return(_128)(M);};

var _71=function(M){if(--M.cbt<0){throw _71;}
RT.Primitives["for-each"]=RT.Primitives["for-each"]||M.v;
return(_130)(M);};

var _92=function(M){if(--M.cbt<0){throw _92;}
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4]);
M.p=_68_c;
M.a=1;
M.c.push(new RT.CallFrame(_95,M.p));
return(_68)(M);};

var _61=function(M){if(--M.cbt<0){throw _61;}
M.e[M.e.length-2]=M.v;
return(_59)(M);};

var _34=function(M){if(--M.cbt<0){throw _34;}
M.e[M.e.length-2]=M.v;
return(_32)(M);};

var _29=function(M){if(--M.cbt<0){throw _29;}
return(_27)(M);};

var _21=function(M){if(--M.cbt<0){throw _21;}
return(_19)(M);};

var _372=function(M){if(--M.cbt<0){throw _372;}
M.e.length-=(M.a-1);
return(_373)(M);};

var _378=function(M){if(--M.cbt<0){throw _378;}
if(M.a===0){return(_375)(M);}else{M.e.push(M.v);
return(_375)(M);}};

var _159=function(M){M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _350=function(M){if(--M.cbt<0){throw _350;}
M.e.length-=(M.a-1);
return(_351)(M);};

var _365=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e[M.e.length-2]=M.e[M.e.length-6];
M.p=_348_c;
M.a=2;
M.c.push(new RT.CallFrame(_369,M.p));
return(_348)(M);};


var _346=function(M){if(--M.cbt<0){throw _346;}
//"lambda body for unknown"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.e[M.e.length-1]);
M.p=_347_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_347)(M);};

var _349=function(M){M.c.push(new RT.PromptFrame(_351,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=_346_c;
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _325=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-3];
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_319)(M);};

var _323=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"caarpair",RT.isCaarPair,M.e[M.e.length-5],0,"caar")).first.first;
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_325)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _276=function(M){M.c.push(new RT.PromptFrame(_278,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_275,3,void(0),"memf");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _311=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-3];
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_305)(M);};

var _306=function(M){M.c.push(new RT.PromptFrame(_308,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_305,2,void(0),"assv");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _217=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_219)(M);}else{M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_185_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_185)(M);}};

var _205=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_209,M.p));
return((M.p).label)(M);};

var _187=function(M){if(--M.cbt<0){throw _187;}
//"lambda body for first-tuple"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_231)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _186=function(M){if(--M.cbt<0){throw _186;}
//"lambda body for some-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_224)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _184=function(M){if(--M.cbt<0){throw _184;}
//"lambda body for loop"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.p=_185_c;
M.a=1;
M.c.push(new RT.CallFrame(_199,M.p));
return(_185)(M);};

var _265=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_267)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _336=function(M){if(--M.cbt<0){throw _336;}
M.e.length-=(M.a-1);
return(_337)(M);};

var _334=function(M){if(--M.cbt<0){throw _334;}
//"lambda body for length-iter"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_341)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _335=function(M){M.c.push(new RT.PromptFrame(_337,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=_333_c;
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _293=function(M){if(--M.cbt<0){throw _293;}
M.e.length-=(M.a-1);
return(_294)(M);};

var _291=function(M){//"lambda body for assq"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_295)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _253=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-3];
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_247)(M);};

var _321=function(M){if(--M.cbt<0){throw _321;}
M.e.length-=(M.a-1);
return(_322)(M);};

var _319=function(M){//"lambda body for assoc"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_323)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _281=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-4];
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_275)(M);};


var _244=function(M){M.c.push(new RT.PromptFrame(_246,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=_243_c;
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _307=function(M){if(--M.cbt<0){throw _307;}
M.e.length-=(M.a-1);
return(_308)(M);};

var _305=function(M){//"lambda body for assv"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_309)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _219=function(M){M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _200=function(M){M.e.push(void(0),void(0));
if (M.e[M.e.length-3][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-3][0];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.p=_187_c;
M.a=1;
M.c.push(new RT.CallFrame(_207,M.p));
return(_187)(M);};

var _195=function(M){M.e.push(M.e[M.e.length-3]);
M.p=_186_c;
M.a=1;
M.c.push(new RT.CallFrame(_204,M.p));
return(_186)(M);};

var _190=function(M){M.c.push(new RT.PromptFrame(_192,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([M.primitives["or"],false,false]);M.e[M.e.length-1].names=["or",false,false];
M.v=new RT.Closure(_183,2,[M.e[M.e.length-1]],"do-it");
M.e[M.e.length-1][2]=M.v;
M.v=new RT.Closure(_184,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][1]=M.v;
M.v=new RT.Closure(_189,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"unknown");
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _267=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-3];
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_261)(M);};

var _262=function(M){M.c.push(new RT.PromptFrame(_264,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_261,2,void(0),"memv");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _178=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _176=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_128_c;
M.a=1;
M.c.push(new RT.CallFrame(_180,M.p));
return(_128)(M);};

var _297=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-3];
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_291)(M);};

var _295=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=(RT.testArgument(M,"caarpair",RT.isCaarPair,M.e[M.e.length-5],0,"caar")).first.first;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_297)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _140=function(M){M.e.push(void(0),void(0));
if (M.e[M.e.length-3][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[0]); }
M.e[M.e.length-2]=M.e[M.e.length-3][0];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.p=_127_c;
M.a=1;
M.c.push(new RT.CallFrame(_147,M.p));
return(_127)(M);};

var _135=function(M){M.e.push(M.e[M.e.length-3]);
M.p=_126_c;
M.a=1;
M.c.push(new RT.CallFrame(_144,M.p));
return(_126)(M);};

var _124=function(M){if(--M.cbt<0){throw _124;}
//"lambda body for loop"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.p=_125_c;
M.a=1;
M.c.push(new RT.CallFrame(_139,M.p));
return(_125)(M);};

var _251=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_253)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _371=function(M){M.c.push(new RT.PromptFrame(_373,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.v=_370_c;
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _277=function(M){if(--M.cbt<0){throw _277;}
M.e.length-=(M.a-1);
return(_278)(M);};

var _275=function(M){//"lambda body for memf"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_279)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _243=function(M){if(--M.cbt<0){throw _243;}
//"lambda body for unknown"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _231=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_187_c;
M.a=1;
M.c.push(new RT.CallFrame(_235,M.p));
return(_187)(M);};

var _224=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_226)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _210=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_214,M.p));
return((M.p).label)(M);};

var _188=function(M){if(--M.cbt<0){throw _188;}
//"lambda body for rest-lists"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_236)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _202=function(M){if(M.v===false){return(_200)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1470;
M.e[M.e.length-2]="all lists must have the same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _197=function(M){if(M.v===false){return(_195)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _185=function(M){if(--M.cbt<0){throw _185;}
//"lambda body for all-empty?"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_217)(M);}else{M.v=true;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _263=function(M){if(--M.cbt<0){throw _263;}
M.e.length-=(M.a-1);
return(_264)(M);};

var _261=function(M){//"lambda body for memv"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_265)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _131=function(M){if(--M.cbt<0){throw _131;}
M.e.length-=(M.a-1);
return(_132)(M);};


var _157=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_159)(M);}else{M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_125_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_125)(M);}};

var _145=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_149,M.p));
return((M.p).label)(M);};

var _127=function(M){if(--M.cbt<0){throw _127;}
//"lambda body for first-tuple"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_171)(M);}else{M.v=RT.NULL;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _137=function(M){if(M.v===false){return(_135)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _123=function(M){if(--M.cbt<0){throw _123;}
//"lambda body for do-it"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _249=function(M){if(--M.cbt<0){throw _249;}
M.e.length-=(M.a-1);
return(_250)(M);};

var _247=function(M){//"lambda body for memq"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_251)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _248=function(M){M.c.push(new RT.PromptFrame(_250,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([]);M.e[M.e.length-1].names=[];
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_247,2,void(0),"memq");
M.e[M.e.length-1].closedVals=[M.e[M.e.length-1]];
M.v=M.e[M.e.length-1];
M.e.pop();
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _341=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.e[M.e.length-2]=RT.checkedAdd1(M, M.e[M.e.length-4]);
M.p=_334_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_334)(M);};

var _118=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-1]);
M.e.pop();
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_68_c;
M.a=1;
M.c.push(new RT.CallFrame(_122,M.p));
return(_68)(M);};

var _108=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.p=_66_c;
M.a=1;
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return(_66)(M);};

var _93=function(M){M.p=_64_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_64)(M);};

var _83=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4]);
M.p=_67_c;
M.a=1;
M.c.push(new RT.CallFrame(_90,M.p));
return(_67)(M);};

var _78=function(M){M.e.push(M.e[M.e.length-2]);
M.p=_66_c;
M.a=1;
M.c.push(new RT.CallFrame(_87,M.p));
return(_66)(M);};

var _245=function(M){if(--M.cbt<0){throw _245;}
M.e.length-=(M.a-1);
return(_246)(M);};

var _191=function(M){if(--M.cbt<0){throw _191;}
M.e.length-=(M.a-1);
return(_192)(M);};

var _189=function(M){if(--M.cbt<0){throw _189;}
//"lambda body for unknown"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


_10.mvr=_9;
_92.mvr=_91;
_71.mvr=_70;
_132.mvr=_131;
_192.mvr=_191;
_246.mvr=_245;
_250.mvr=_249;
_264.mvr=_263;
_278.mvr=_277;
_294.mvr=_293;
_308.mvr=_307;
_322.mvr=_321;
_337.mvr=_336;
_351.mvr=_350;
_377.mvr=_378;
_373.mvr=_372;
var sym1467=RT.makeSymbol("andmap");
var sym1468=RT.makeSymbol("for-each");
var sym1470=RT.makeSymbol("ormap");
var sym1469=RT.makeSymbol("map");var _188_c=new RT.Closure(_188,1,void(0),"rest-lists");
var _187_c=new RT.Closure(_187,1,void(0),"first-tuple");
var _186_c=new RT.Closure(_186,1,void(0),"some-empty?");
var _185_c=new RT.Closure(_185,1,void(0),"all-empty?");
var _389_c=new RT.Closure(_389,(RT.makeArityAtLeast(2)),void(0),"apply");
var _385_c=new RT.Closure(_385,(RT.makeArityAtLeast(0)),void(0),"values");
var _callCCEntry_c=new RT.Closure(_callCCEntry,1,void(0),"call/cc");
var _128_c=new RT.Closure(_128,1,void(0),"rest-lists");
var _127_c=new RT.Closure(_127,1,void(0),"first-tuple");
var _126_c=new RT.Closure(_126,1,void(0),"some-empty?");
var _125_c=new RT.Closure(_125,1,void(0),"all-empty?");
var _334_c=new RT.Closure(_334,2,void(0),"length-iter");
var _333_c=new RT.Closure(_333,1,void(0),"unknown");
var _370_c=new RT.Closure(_370,2,void(0),"unknown");
var _68_c=new RT.Closure(_68,1,void(0),"rest-lists");
var _67_c=new RT.Closure(_67,1,void(0),"first-tuple");
var _348_c=new RT.Closure(_348,2,void(0),"append-2");
var _65_c=new RT.Closure(_65,1,void(0),"all-empty?");
var _62_c=new RT.Closure(_62,(RT.makeArityAtLeast(1)),void(0),"unknown");
var _66_c=new RT.Closure(_66,1,void(0),"some-empty?");
var _347_c=new RT.Closure(_347,1,void(0),"append-many");
var _63_c=new RT.Closure(_63,2,void(0),"do-it");
var _346_c=new RT.Closure(_346,(RT.makeArityAtLeast(0)),void(0),"unknown");
var _64_c=new RT.Closure(_64,2,void(0),"loop");
var _7_c=new RT.Closure(_7,1,void(0),"rest-lists");
var _6_c=new RT.Closure(_6,1,void(0),"first-tuple");
var _5_c=new RT.Closure(_5,1,void(0),"some-empty?");
var _4_c=new RT.Closure(_4,1,void(0),"all-empty?");
var _2_c=new RT.Closure(_2,2,void(0),"do-it");
var _1_c=new RT.Closure(_1,(RT.makeArityAtLeast(1)),void(0),"unknown");
var _3_c=new RT.Closure(_3,2,void(0),"loop");
var _243_c=new RT.Closure(_243,1,void(0),"unknown");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_392, true); })(M, function() { SUCCESS(); }, FAIL, PARAMS);})(plt.runtime.currentMachine,
function(){ plt.runtime.setReadyTrue(); },
function(){},
{});

// ** Visiting <MainModuleSource /Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;



var _2143=function(M){if(--M.cbt<0){throw _2143;}
M.e.length-=(M.a-1);
return(_2144)(M);};

var _3782=function(M){if(--M.cbt<0){throw _3782;}
M.e.length-=(M.a-1);
return(_3783)(M);};

var _3780=function(M){if(--M.cbt<0){throw _3780;}
M.e.length-=(M.a-1);
return(_3781)(M);};

var _3766=function(M){if(--M.cbt<0){throw _3766;}
M.e.length-=(M.a-1);
return(_3767)(M);};



var _2075=function(M){if(--M.cbt<0){throw _2075;}
M.e.length-=(M.a-1);
return(_2074)(M);};

var _1139=function(M){if(--M.cbt<0){throw _1139;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3735=function(M){if(--M.cbt<0){throw _3735;}
M.e.length-=(M.a-1);
return(_3736)(M);};


var _3717=function(M){if(--M.cbt<0){throw _3717;}
M.e.length-=(M.a-1);
return(_3718)(M);};

var _3705=function(M){if(--M.cbt<0){throw _3705;}
M.e.length-=(M.a-1);
return(_3706)(M);};

var _3699=function(M){if(--M.cbt<0){throw _3699;}
M.e.length-=(M.a-1);
return(_3700)(M);};

var _3691=function(M){if(--M.cbt<0){throw _3691;}
M.e.length-=(M.a-1);
return(_3692)(M);};

var _3685=function(M){if(--M.cbt<0){throw _3685;}
M.e.length-=(M.a-1);
return(_3686)(M);};

var _3675=function(M){if(--M.cbt<0){throw _3675;}
if((M.a-5)===0){return(_3677)(M);}else{RT.si_context_expected(5)(M);
}};



var _3781=function(M){if(--M.cbt<0){throw _3781;}
M.c.push(new RT.PromptFrame(_3783,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_465,2,[M.e[M.e.length-1]],"draw");
M.e[M.e.length-1][148]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3647=function(M){if(--M.cbt<0){throw _3647;}
M.e.length-=(M.a-1);
return(_3648)(M);};

var _3761=function(M){if(--M.cbt<0){throw _3761;}
M.c.push(new RT.PromptFrame(_3763,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_460,0,[M.e[M.e.length-1]],"start-raphael");
M.e[M.e.length-1][127]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3627=function(M){if(--M.cbt<0){throw _3627;}
M.e.length-=(M.a-1);
return(_3628)(M);};

var _3743=function(M){if(--M.cbt<0){throw _3743;}
M.c.push(new RT.PromptFrame(_3745,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v="#CE2D6A";
M.e[M.e.length-1][116]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3738=function(M){if(--M.cbt<0){throw _3738;}
M.c.push(new RT.PromptFrame(_3740,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(false);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.v=new RT.Closure(_455,1,[M.e[M.e.length-2],M.e[M.e.length-1]],"raphael-focus");
M.e.pop();
M.e[M.e.length-1][110]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3730=function(M){if(--M.cbt<0){throw _3730;}
M.c.push(new RT.PromptFrame(_3732,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_452,1,[M.e[M.e.length-1]],"screen-x");
M.e[M.e.length-1][104]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _3702=function(M){if(--M.cbt<0){throw _3702;}
M.c.push(new RT.PromptFrame(_3704,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_444,9,[M.e[M.e.length-1]],"triangle/ass");
M.e[M.e.length-1][79]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3696=function(M){if(--M.cbt<0){throw _3696;}
M.c.push(new RT.PromptFrame(_3698,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_441,1,[M.e[M.e.length-1]],"degrees");
M.e[M.e.length-1][68]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3692=function(M){if(--M.cbt<0){throw _3692;}
M.c.push(new RT.PromptFrame(_3694,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_439,2,[M.e[M.e.length-1]],"last-angle");
M.e[M.e.length-1][66]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3679=RT.si_context_expected(13);

_3669=RT.si_context_expected(7);

var _3656=function(M){if(--M.cbt<0){throw _3656;}
M.c.push(new RT.PromptFrame(_3658,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_430,(RT.makeArityAtLeast(3)),[M.e[M.e.length-1]],"raphael-scale");
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3648=function(M){if(--M.cbt<0){throw _3648;}
M.c.push(new RT.PromptFrame(_3650,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_426,1,[M.e[M.e.length-1]],"raphael-show");
M.e[M.e.length-1][23]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3640=function(M){if(--M.cbt<0){throw _3640;}
M.c.push(new RT.PromptFrame(_3642,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_422,4,[M.e[M.e.length-1]],"raphael-line");
M.e[M.e.length-1][19]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3632=function(M){if(--M.cbt<0){throw _3632;}
M.c.push(new RT.PromptFrame(_3634,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_418,3,[M.e[M.e.length-1]],"raphael-text");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3624=function(M){if(--M.cbt<0){throw _3624;}
M.c.push(new RT.PromptFrame(_3626,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_414,4,[M.e[M.e.length-1]],"raphael-ellipse");
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3620=function(M){if(--M.cbt<0){throw _3620;}
M.c.push(new RT.PromptFrame(_3622,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_412,(RT.makeArityAtLeast(4)),[M.e[M.e.length-1]],"raphael-rect");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3608=function(M){if(--M.cbt<0){throw _3608;}
M.c.push(new RT.PromptFrame(_3610,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_407,6,[M.e[M.e.length-1]],"triangle-vertices/sas");
M.e[M.e.length-1][191]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3594=function(M){if(--M.cbt<0){throw _3594;}
M.c.push(new RT.PromptFrame(_3596,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_400,2,[M.e[M.e.length-1]],"ax");
M.e[M.e.length-1][198]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3584=function(M){if(--M.cbt<0){throw _3584;}
M.c.push(new RT.PromptFrame(_3586,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_395,6,[M.e[M.e.length-1]],"...angle-solver.rkt:821:59");
M.e[M.e.length-1][203]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3560=function(M){if(--M.cbt<0){throw _3560;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3536=function(M){if(--M.cbt<0){throw _3536;}
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3530=function(M){if(--M.cbt<0){throw _3530;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1487=function(M){if(--M.cbt<0){throw _1487;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2146,91,11,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-9][7][0][M.e[M.e.length-9][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]="rotate";
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-6];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1452=function(M){if(--M.cbt<0){throw _1452;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3484=function(M){if(--M.cbt<0){throw _3484;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3460=function(M){if(--M.cbt<0){throw _3460;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3432=function(M){if(--M.cbt<0){throw _3432;}
if(M.v===false){return(_3429)(M);}else{M.c.push(new RT.CallFrame(_3434,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36836,910,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3410=function(M){if(--M.cbt<0){throw _3410;}
return(_3396)(M);};

var _3380=function(M){if(--M.cbt<0){throw _3380;}
if(M.v===false){return(_3377)(M);}else{M.c.push(new RT.CallFrame(_3384,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36577,907,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3340=function(M){if(--M.cbt<0){throw _3340;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _3266=function(M){if(--M.cbt<0){throw _3266;}
return(_3252)(M);};

var _3244=function(M){if(--M.cbt<0){throw _3244;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3220=function(M){if(--M.cbt<0){throw _3220;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2139=function(M){if(--M.cbt<0){throw _2139;}
M.e.length-=(M.a-1);
return(_2140)(M);};

var _3124=function(M){if(--M.cbt<0){throw _3124;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3778=function(M){if(--M.cbt<0){throw _3778;}
M.e.length-=(M.a-1);
return(_3779)(M);};


var _3764=function(M){if(--M.cbt<0){throw _3764;}
M.e.length-=(M.a-1);
return(_3765)(M);};

var _3756=function(M){if(--M.cbt<0){throw _3756;}
M.e.length-=(M.a-1);
return(_3757)(M);};

var _3750=function(M){if(--M.cbt<0){throw _3750;}
M.e.length-=(M.a-1);
return(_3751)(M);};

var _3737=function(M){if(--M.cbt<0){throw _3737;}
M.e.length-=(M.a-1);
return(_3738)(M);};

var _3733=function(M){if(--M.cbt<0){throw _3733;}
M.e.length-=(M.a-1);
return(_3734)(M);};

var _3727=function(M){if(--M.cbt<0){throw _3727;}
M.e.length-=(M.a-1);
return(_3728)(M);};

var _3715=function(M){if(--M.cbt<0){throw _3715;}
M.e.length-=(M.a-1);
return(_3716)(M);};


var _3697=function(M){if(--M.cbt<0){throw _3697;}
M.e.length-=(M.a-1);
return(_3698)(M);};

var _3689=function(M){if(--M.cbt<0){throw _3689;}
M.e.length-=(M.a-1);
return(_3690)(M);};

var _3683=function(M){if(--M.cbt<0){throw _3683;}
M.e.length-=(M.a-1);
return(_3684)(M);};




var _3655=function(M){if(--M.cbt<0){throw _3655;}
M.e.length-=(M.a-1);
return(_3656)(M);};

var _3645=function(M){if(--M.cbt<0){throw _3645;}
M.e.length-=(M.a-1);
return(_3646)(M);};

var _3639=function(M){if(--M.cbt<0){throw _3639;}
M.e.length-=(M.a-1);
return(_3640)(M);};

var _3625=function(M){if(--M.cbt<0){throw _3625;}
M.e.length-=(M.a-1);
return(_3626)(M);};

var _3623=function(M){if(--M.cbt<0){throw _3623;}
M.e.length-=(M.a-1);
return(_3624)(M);};

var _3736=function(M){if(--M.cbt<0){throw _3736;}
M.c.push(new RT.PromptFrame(_3738,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=false;
M.e[M.e.length-1][109]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3728=function(M){if(--M.cbt<0){throw _3728;}
M.c.push(new RT.PromptFrame(_3730,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=RT.makeFloat(1.0);
M.e[M.e.length-1][103]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3724=function(M){if(--M.cbt<0){throw _3724;}
M.c.push(new RT.PromptFrame(_3726,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=RT.makeFloat(1.0);
M.e[M.e.length-1][101]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3716=function(M){if(--M.cbt<0){throw _3716;}
M.c.push(new RT.PromptFrame(_3718,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_451,3,[M.e[M.e.length-1]],"triangle/saa");
M.e[M.e.length-1][97]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3583=function(M){if(--M.cbt<0){throw _3583;}
M.e.length-=(M.a-1);
return(_3584)(M);};

var _3694=function(M){if(--M.cbt<0){throw _3694;}
M.c.push(new RT.PromptFrame(_3696,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_440,1,[M.e[M.e.length-1]],"radians");
M.e[M.e.length-1][67]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3690=function(M){if(--M.cbt<0){throw _3690;}
M.c.push(new RT.PromptFrame(_3692,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_438,3,[M.e[M.e.length-1]],"sin-rel");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3676=RT.si_context_expected(5);

_3666=RT.si_context_expected(5);

var _3654=function(M){if(--M.cbt<0){throw _3654;}
M.c.push(new RT.PromptFrame(_3656,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_429,3,[M.e[M.e.length-1]],"raphael-translate");
M.e[M.e.length-1][27]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3646=function(M){if(--M.cbt<0){throw _3646;}
M.c.push(new RT.PromptFrame(_3648,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_425,1,[M.e[M.e.length-1]],"raphael-hide");
M.e[M.e.length-1][22]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3638=function(M){if(--M.cbt<0){throw _3638;}
M.c.push(new RT.PromptFrame(_3640,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_421,1,[M.e[M.e.length-1]],"raphael-path");
M.e[M.e.length-1][18]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3630=function(M){if(--M.cbt<0){throw _3630;}
M.c.push(new RT.PromptFrame(_3632,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_417,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"raphael-push");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3622=function(M){if(--M.cbt<0){throw _3622;}
M.c.push(new RT.PromptFrame(_3624,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_413,3,[M.e[M.e.length-1]],"raphael-circle");
M.e[M.e.length-1][9]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3618=function(M){if(--M.cbt<0){throw _3618;}
M.c.push(new RT.PromptFrame(_3620,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_411,3,[M.e[M.e.length-1]],"raphael-init");
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3606=function(M){if(--M.cbt<0){throw _3606;}
M.c.push(new RT.PromptFrame(_3608,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_406,6,[M.e[M.e.length-1]],"triangle-vertices/ssa");
M.e[M.e.length-1][192]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3604=function(M){if(--M.cbt<0){throw _3604;}
M.c.push(new RT.PromptFrame(_3606,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_405,11,[M.e[M.e.length-1]],"triangle-vertices/aas");
M.e[M.e.length-1][193]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3592=function(M){if(--M.cbt<0){throw _3592;}
M.c.push(new RT.PromptFrame(_3594,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_399,2,[M.e[M.e.length-1]],"ay");
M.e[M.e.length-1][199]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3582=function(M){if(--M.cbt<0){throw _3582;}
M.c.push(new RT.PromptFrame(_3584,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_394,1,[M.e[M.e.length-1]],"...angle-solver.rkt:820:50");
M.e[M.e.length-1][204]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3556=function(M){if(--M.cbt<0){throw _3556;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["list->string"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3528=function(M){if(--M.cbt<0){throw _3528;}
M.e[M.e.length-5]=M.v;
M.c.push(new RT.CallFrame(_3536,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37630,925,15,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-11][178][0][M.e[M.e.length-11][178][1]]);
M.c.push(new RT.CallFrame(_3538,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37647,925,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-14][142][0][M.e[M.e.length-14][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]="sideC";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3514=function(M){if(--M.cbt<0){throw _3514;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3498=function(M){if(--M.cbt<0){throw _3498;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3482=function(M){if(--M.cbt<0){throw _3482;}
return(_3472)(M);};

var _3458=function(M){if(--M.cbt<0){throw _3458;}
return(_3444)(M);};

var _3428=function(M){if(--M.cbt<0){throw _3428;}
if(M.v===false){return(_3425)(M);}else{M.c.push(new RT.CallFrame(_3432,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36828,910,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3408=function(M){if(--M.cbt<0){throw _3408;}
if(M.v===false){return(_3405)(M);}else{M.c.push(new RT.CallFrame(_3410,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36710,908,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3360=function(M){if(--M.cbt<0){throw _3360;}
if(M.v===false){return(_3357)(M);}else{M.c.push(new RT.CallFrame(_3362,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36460,906,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3338=function(M){if(--M.cbt<0){throw _3338;}
return(_3324)(M);};

var _3316=function(M){if(--M.cbt<0){throw _3316;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3292=function(M){if(--M.cbt<0){throw _3292;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3264=function(M){if(--M.cbt<0){throw _3264;}
if(M.v===false){return(_3261)(M);}else{M.c.push(new RT.CallFrame(_3266,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35980,901,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3242=function(M){if(--M.cbt<0){throw _3242;}
return(_3228)(M);};

var _3218=function(M){if(--M.cbt<0){throw _3218;}
return(_3204)(M);};

var _3196=function(M){if(--M.cbt<0){throw _3196;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3172=function(M){if(--M.cbt<0){throw _3172;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3148=function(M){if(--M.cbt<0){throw _3148;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3122=function(M){if(--M.cbt<0){throw _3122;}
return(_3108)(M);};

var _3100=function(M){if(--M.cbt<0){throw _3100;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3076=function(M){if(--M.cbt<0){throw _3076;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3052=function(M){if(--M.cbt<0){throw _3052;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3030=function(M){if(--M.cbt<0){throw _3030;}
M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3022=function(M){if(--M.cbt<0){throw _3022;}
if(M.v===false){return(_3019)(M);}else{M.c.push(new RT.CallFrame(_3026,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34763,884,56,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.c.push(new RT.CallFrame(_3028,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34768,884,61,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-7],M.e[M.e.length-9]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3000=function(M){if(--M.cbt<0){throw _3000;}
M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2982=function(M){if(--M.cbt<0){throw _2982;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2962=function(M){if(--M.cbt<0){throw _2962;}
M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2952=function(M){if(--M.cbt<0){throw _2952;}
return(_2950)(M);};

var _2928=function(M){if(--M.cbt<0){throw _2928;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2912=function(M){if(--M.cbt<0){throw _2912;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2893=function(M){if(--M.cbt<0){throw _2893;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2873=function(M){if(--M.cbt<0){throw _2873;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2856=function(M){if(--M.cbt<0){throw _2856;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="focusin";
M.c.push(new RT.CallFrame(_2860,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33338,848,63,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][170];
M.e[M.e.length-1]=3;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2841=function(M){if(--M.cbt<0){throw _2841;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2854,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33290,848,15,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-10][168][0][M.e[M.e.length-10][168][1]];
M.c.push(new RT.CallFrame(_2856,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33301,848,26,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-12][142][0][M.e[M.e.length-12][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="sideA";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3665=function(M){if(--M.cbt<0){throw _3665;}
if((M.a-5)===0){return(_3667)(M);}else{RT.si_context_expected(5)(M);
}};

var _2806=function(M){if(--M.cbt<0){throw _2806;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2815,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33035,845,15,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-7][168][0][M.e[M.e.length-7][168][1]];
M.c.push(new RT.CallFrame(_2817,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33046,845,26,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-9][142][0][M.e[M.e.length-9][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="angleA";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2785=function(M){if(--M.cbt<0){throw _2785;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-4]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-18]=RT.makePair(sym1857,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e[M.e.length-16]=RT.makePair(sym1858,RT.makePair("Højder",RT.NULL));
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2789,M.p));
M.v=M.e[M.e.length-28][2][0][M.e[M.e.length-28][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32643,839,30,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-33][163];
M.e[M.e.length-1]="a";
M.e[M.e.length-2]="b";
M.e[M.e.length-3]="c";
M.e[M.e.length-4]="B";
M.e[M.e.length-5]="C";
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2763=function(M){if(--M.cbt<0){throw _2763;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2768,M.p));
M.v=M.e[M.e.length-32][2][0][M.e[M.e.length-32][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",31297,820,45,937]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-34][125][0][M.e[M.e.length-34][125][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-34][204];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2750=function(M){if(--M.cbt<0){throw _2750;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.NULL)));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2754,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30112,803,86,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-34][151];
M.e[M.e.length-1]="C";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="b";
M.e[M.e.length-4]="c";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3621=function(M){if(--M.cbt<0){throw _3621;}
M.e.length-=(M.a-1);
return(_3622)(M);};

var _3734=function(M){if(--M.cbt<0){throw _3734;}
M.c.push(new RT.PromptFrame(_3736,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_454,2,[M.e[M.e.length-1]],"midpoint-posn");
M.e[M.e.length-1][108]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3726=function(M){if(--M.cbt<0){throw _3726;}
M.c.push(new RT.PromptFrame(_3728,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=RT.makeFloat(-1.0);
M.e[M.e.length-1][102]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3722=function(M){if(--M.cbt<0){throw _3722;}
M.c.push(new RT.PromptFrame(_3724,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=RT.makeFloat(-1.0);
M.e[M.e.length-1][100]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3714=function(M){if(--M.cbt<0){throw _3714;}
M.c.push(new RT.PromptFrame(_3716,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_450,3,[M.e[M.e.length-1]],"triangle/asa");
M.e[M.e.length-1][96]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3581=function(M){if(--M.cbt<0){throw _3581;}
M.e.length-=(M.a-1);
return(_3582)(M);};

var _2685=function(M){if(--M.cbt<0){throw _2685;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27159,753,4,402]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2690,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27224,754,10,142]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$s = \\textrm{den halve omkreds} = \\frac{~a+~a+~a}{2} = \\frac{~a+~a+~a}{2} = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.e[M.e.length-4]=M.e[M.e.length-18];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.e[M.e.length-7]=M.e[M.e.length-15];
M.c.push(new RT.CallFrame(_2692,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27350,755,33,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2694,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27353,755,36,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-15],M.e[M.e.length-16],M.e[M.e.length-17]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3688=function(M){if(--M.cbt<0){throw _3688;}
M.c.push(new RT.PromptFrame(_3690,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_437,3,[M.e[M.e.length-1]],"cos-rel");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2658=function(M){if(--M.cbt<0){throw _2658;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3662=function(M){if(--M.cbt<0){throw _3662;}
M.c.push(new RT.PromptFrame(_3672,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym1861;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=5;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym1861;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3676,M.p));
return((M.p).label)(M);};

var _2628=function(M){if(--M.cbt<0){throw _2628;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2610=function(M){if(--M.cbt<0){throw _2610;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _3616=function(M){if(--M.cbt<0){throw _3616;}
M.c.push(new RT.PromptFrame(_3618,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=false;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2540=function(M){if(--M.cbt<0){throw _2540;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2544,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25906,719,37,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][158];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3602=function(M){if(--M.cbt<0){throw _3602;}
M.c.push(new RT.PromptFrame(_3604,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_404,11,[M.e[M.e.length-1]],"triangle-vertices");
M.e[M.e.length-1][194]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3590=function(M){if(--M.cbt<0){throw _3590;}
M.c.push(new RT.PromptFrame(_3592,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_398,2,[M.e[M.e.length-1]],"...angle-solver.rkt:634:11");
M.e[M.e.length-1][200]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2501=function(M){if(--M.cbt<0){throw _2501;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_2503,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25405,705,34,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2505,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25408,705,37,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, M.e[M.e.length-9],M.e[M.e.length-9]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2491=function(M){if(--M.cbt<0){throw _2491;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2476=function(M){if(--M.cbt<0){throw _2476;}
if(M.v===false){return(_2473)(M);}else{M.e[M.e.length-1]="\\cdot";
return(_2470)(M);}};

var _3522=function(M){if(--M.cbt<0){throw _3522;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3512=function(M){if(--M.cbt<0){throw _3512;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_3520,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37518,923,15,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-11][178][0][M.e[M.e.length-11][178][1]]);
M.c.push(new RT.CallFrame(_3522,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37535,923,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-14][142][0][M.e[M.e.length-14][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]="sideA";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3496=function(M){if(--M.cbt<0){throw _3496;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_3504,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37404,921,15,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-11][178][0][M.e[M.e.length-11][178][1]]);
M.c.push(new RT.CallFrame(_3506,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37421,921,32,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-14][142][0][M.e[M.e.length-14][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]="angleB";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3480=function(M){if(--M.cbt<0){throw _3480;}
if(M.v===false){return(_3477)(M);}else{M.c.push(new RT.CallFrame(_3482,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37086,912,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3456=function(M){if(--M.cbt<0){throw _3456;}
if(M.v===false){return(_3453)(M);}else{M.c.push(new RT.CallFrame(_3458,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36961,911,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3404=function(M){if(--M.cbt<0){throw _3404;}
if(M.v===false){return(_3401)(M);}else{M.c.push(new RT.CallFrame(_3408,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36702,908,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3356=function(M){if(--M.cbt<0){throw _3356;}
if(M.v===false){return(_3353)(M);}else{M.c.push(new RT.CallFrame(_3360,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36452,906,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3336=function(M){if(--M.cbt<0){throw _3336;}
if(M.v===false){return(_3333)(M);}else{M.c.push(new RT.CallFrame(_3338,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36313,904,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3314=function(M){if(--M.cbt<0){throw _3314;}
return(_3300)(M);};

var _3290=function(M){if(--M.cbt<0){throw _3290;}
return(_3276)(M);};

var _3260=function(M){if(--M.cbt<0){throw _3260;}
if(M.v===false){return(_3257)(M);}else{M.c.push(new RT.CallFrame(_3264,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35972,901,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3240=function(M){if(--M.cbt<0){throw _3240;}
if(M.v===false){return(_3237)(M);}else{M.c.push(new RT.CallFrame(_3242,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35869,900,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3216=function(M){if(--M.cbt<0){throw _3216;}
if(M.v===false){return(_3213)(M);}else{M.c.push(new RT.CallFrame(_3218,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35758,899,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3194=function(M){if(--M.cbt<0){throw _3194;}
return(_3180)(M);};

var _3170=function(M){if(--M.cbt<0){throw _3170;}
return(_3156)(M);};

var _3146=function(M){if(--M.cbt<0){throw _3146;}
return(_3132)(M);};

var _3120=function(M){if(--M.cbt<0){throw _3120;}
if(M.v===false){return(_3117)(M);}else{M.c.push(new RT.CallFrame(_3122,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35287,893,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3098=function(M){if(--M.cbt<0){throw _3098;}
return(_3084)(M);};

var _3074=function(M){if(--M.cbt<0){throw _3074;}
return(_3060)(M);};

var _3050=function(M){if(--M.cbt<0){throw _3050;}
return(_3036)(M);};

var _3028=function(M){if(--M.cbt<0){throw _3028;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<"))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3018=function(M){if(--M.cbt<0){throw _3018;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<"))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2990=function(M){if(--M.cbt<0){throw _2990;}
M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2980=function(M){if(--M.cbt<0){throw _2980;}
return(_2978)(M);};

var _2960=function(M){if(--M.cbt<0){throw _2960;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2946=function(M){if(--M.cbt<0){throw _2946;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2926=function(M){if(--M.cbt<0){throw _2926;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=3;
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2910=function(M){if(--M.cbt<0){throw _2910;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=3;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),M.e[M.e.length-2])));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2886=function(M){if(--M.cbt<0){throw _2886;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2869=function(M){if(--M.cbt<0){throw _2869;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="focusin";
M.c.push(new RT.CallFrame(_2873,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33423,849,63,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][170];
M.e[M.e.length-1]=4;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2854=function(M){if(--M.cbt<0){throw _2854;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2867,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33375,849,15,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-11][168][0][M.e[M.e.length-11][168][1]];
M.c.push(new RT.CallFrame(_2869,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33386,849,26,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-13][142][0][M.e[M.e.length-13][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="sideB";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2834=function(M){if(--M.cbt<0){throw _2834;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2821=function(M){if(--M.cbt<0){throw _2821;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2797=function(M){if(--M.cbt<0){throw _2797;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-4]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-20]=RT.makePair(sym1857,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e[M.e.length-18]=RT.makePair(RT.makePair(sym1862,RT.NULL),RT.makePair(RT.makePair(sym1863,RT.makePair("Mail jensaxel@soegaard.net med kommentarer, spørgsmål, fejlmeldinger eller andet.",RT.NULL)),RT.NULL));
M.a=18;
M.v=M.primitives["list*"]._i(M);
M.e.length-=18;
M.e[M.e.length-1]=M.v;
M.v=RT.makePair(sym1864,RT.makePair(RT.makePair(sym1865,RT.makePair(RT.makePair(sym1866,RT.makePair("Trekantsberegner",RT.NULL)),RT.NULL)),RT.makePair(M.e[M.e.length-1],RT.NULL)));
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2781=function(M){if(--M.cbt<0){throw _2781;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-3]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2785,M.p));
M.v=M.e[M.e.length-28][2][0][M.e[M.e.length-28][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32524,836,30,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-31][159];
M.e[M.e.length-1]="c";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="c";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2760=function(M){if(--M.cbt<0){throw _2760;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2746=function(M){if(--M.cbt<0){throw _2746;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-4]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-5]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2750,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30056,803,30,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-34][150];
M.e[M.e.length-1]="c";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="b";
M.e[M.e.length-4]="C";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2734=function(M){if(--M.cbt<0){throw _2734;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.NULL)));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2738,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",29870,801,86,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-34][151];
M.e[M.e.length-1]="A";
M.e[M.e.length-2]="b";
M.e[M.e.length-3]="c";
M.e[M.e.length-4]="a";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3615=function(M){if(--M.cbt<0){throw _3615;}
M.e.length-=(M.a-1);
return(_3616)(M);};

var _3607=function(M){if(--M.cbt<0){throw _3607;}
M.e.length-=(M.a-1);
return(_3608)(M);};

var _3720=function(M){if(--M.cbt<0){throw _3720;}
M.c.push(new RT.PromptFrame(_3722,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=400;
M.e[M.e.length-1][99]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3712=function(M){if(--M.cbt<0){throw _3712;}
M.c.push(new RT.PromptFrame(_3714,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_449,9,[M.e[M.e.length-1]],"triangle/two-sides-non-included-angle");
M.e[M.e.length-1][90]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2694=function(M){if(--M.cbt<0){throw _2694;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2680=function(M){if(--M.cbt<0){throw _2680;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3686=function(M){if(--M.cbt<0){throw _3686;}
M.c.push(new RT.PromptFrame(_3688,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_436,2,[M.e[M.e.length-1]],"polar->posn");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2654=function(M){if(--M.cbt<0){throw _2654;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2624=function(M){if(--M.cbt<0){throw _2624;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2608=function(M){if(--M.cbt<0){throw _2608;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2624,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26457,730,94,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][160];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2598=function(M){if(--M.cbt<0){throw _2598;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_2628,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26489,731,8,149]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$h_~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-18];
M.c.push(new RT.CallFrame(_2630,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26540,732,19,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][112][0][M.e[M.e.length-9][112][1]]);
M.c.push(new RT.CallFrame(_2632,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26547,732,26,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][161];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=M.e[M.e.length-22];
M.e[M.e.length-3]=M.e[M.e.length-24];
M.e[M.e.length-4]=M.e[M.e.length-25];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _3614=function(M){if(--M.cbt<0){throw _3614;}
M.c.push(new RT.PromptFrame(_3616,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_410,1,[M.e[M.e.length-1]],"...angle-solver.rkt:50:12");
M.e[M.e.length-1][188]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2538=function(M){if(--M.cbt<0){throw _2538;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_2552,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25955,720,8,109]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$m_~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-15];
M.c.push(new RT.CallFrame(_2554,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26006,721,19,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][158];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3600=function(M){if(--M.cbt<0){throw _3600;}
M.c.push(new RT.PromptFrame(_3602,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_403,10,[M.e[M.e.length-1]],"triangle-vertices");
M.e[M.e.length-1][195]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2515=function(M){if(--M.cbt<0){throw _2515;}
if(M.v===false){return(_2512)(M);}else{M.v=true;
return(_2509)(M);}};

var _2499=function(M){if(--M.cbt<0){throw _2499;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2501,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25395,705,24,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-10],M.e[M.e.length-10]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2487=function(M){if(--M.cbt<0){throw _2487;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2472=function(M){if(--M.cbt<0){throw _2472;}
if(M.v===false){return(_2469)(M);}else{M.c.push(new RT.CallFrame(_2476,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24524,676,34,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3520=function(M){if(--M.cbt<0){throw _3520;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_3528,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37574,924,15,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-11][178][0][M.e[M.e.length-11][178][1]]);
M.c.push(new RT.CallFrame(_3530,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37591,924,32,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-14][142][0][M.e[M.e.length-14][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]="sideB";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3506=function(M){if(--M.cbt<0){throw _3506;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3494=function(M){if(--M.cbt<0){throw _3494;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=false;
M.c.push(new RT.CallFrame(_3546,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37703,927,14,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-6][136]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[136]); }
M.p=M.e[M.e.length-6][136];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3476=function(M){if(--M.cbt<0){throw _3476;}
if(M.v===false){return(_3473)(M);}else{M.c.push(new RT.CallFrame(_3480,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37078,912,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3452=function(M){if(--M.cbt<0){throw _3452;}
if(M.v===false){return(_3449)(M);}else{M.c.push(new RT.CallFrame(_3456,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36953,911,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};





var _3332=function(M){if(--M.cbt<0){throw _3332;}
if(M.v===false){return(_3329)(M);}else{M.c.push(new RT.CallFrame(_3336,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36305,904,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3312=function(M){if(--M.cbt<0){throw _3312;}
if(M.v===false){return(_3309)(M);}else{M.c.push(new RT.CallFrame(_3314,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36202,903,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3288=function(M){if(--M.cbt<0){throw _3288;}
if(M.v===false){return(_3285)(M);}else{M.c.push(new RT.CallFrame(_3290,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36091,902,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3236=function(M){if(--M.cbt<0){throw _3236;}
if(M.v===false){return(_3233)(M);}else{M.c.push(new RT.CallFrame(_3240,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35861,900,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3212=function(M){if(--M.cbt<0){throw _3212;}
if(M.v===false){return(_3209)(M);}else{M.c.push(new RT.CallFrame(_3216,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35750,899,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3192=function(M){if(--M.cbt<0){throw _3192;}
if(M.v===false){return(_3189)(M);}else{M.c.push(new RT.CallFrame(_3194,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35621,897,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3168=function(M){if(--M.cbt<0){throw _3168;}
if(M.v===false){return(_3165)(M);}else{M.c.push(new RT.CallFrame(_3170,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35521,896,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3144=function(M){if(--M.cbt<0){throw _3144;}
if(M.v===false){return(_3141)(M);}else{M.c.push(new RT.CallFrame(_3146,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35420,895,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-6]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3116=function(M){if(--M.cbt<0){throw _3116;}
if(M.v===false){return(_3113)(M);}else{M.c.push(new RT.CallFrame(_3120,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35279,893,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3096=function(M){if(--M.cbt<0){throw _3096;}
if(M.v===false){return(_3093)(M);}else{M.c.push(new RT.CallFrame(_3098,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35187,892,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3072=function(M){if(--M.cbt<0){throw _3072;}
if(M.v===false){return(_3069)(M);}else{M.c.push(new RT.CallFrame(_3074,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35087,891,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3048=function(M){if(--M.cbt<0){throw _3048;}
if(M.v===false){return(_3045)(M);}else{M.c.push(new RT.CallFrame(_3050,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34952,889,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3026=function(M){if(--M.cbt<0){throw _3026;}
M.e[M.e.length-1]=M.v;
return(_3014)(M);};

var _3016=function(M){if(--M.cbt<0){throw _3016;}
if(M.v===false){return(_3013)(M);}else{M.c.push(new RT.CallFrame(_3022,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34749,884,42,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.c.push(new RT.CallFrame(_3024,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34754,884,47,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2988=function(M){if(--M.cbt<0){throw _2988;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2974=function(M){if(--M.cbt<0){throw _2974;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2958=function(M){if(--M.cbt<0){throw _2958;}
return(_2940)(M);};

var _2944=function(M){if(--M.cbt<0){throw _2944;}
return(_2942)(M);};

var _2924=function(M){if(--M.cbt<0){throw _2924;}
if(M.v===false){return(_2921)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2934,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34009,865,7,125]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][123];
M.e[M.e.length-1]="Du har indtastet for";
M.e[M.e.length-2]="mange oplysninger. ";
M.e[M.e.length-3]="Slet nogle igen.";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _2908=function(M){if(--M.cbt<0){throw _2908;}
if(M.v===false){return(_2905)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2918,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33886,862,7,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][123];
M.e[M.e.length-1]="Ikke nok oplysninger";
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _2882=function(M){if(--M.cbt<0){throw _2882;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="focusin";
M.c.push(new RT.CallFrame(_2886,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33508,850,63,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][170];
M.e[M.e.length-1]=5;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2867=function(M){if(--M.cbt<0){throw _2867;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2880,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33460,850,15,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-12][168][0][M.e[M.e.length-12][168][1]];
M.c.push(new RT.CallFrame(_2882,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33471,850,26,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-14][142][0][M.e[M.e.length-14][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="sideC";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2847=function(M){if(--M.cbt<0){throw _2847;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2830=function(M){if(--M.cbt<0){throw _2830;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="focusin";
M.c.push(new RT.CallFrame(_2834,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33168,846,63,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][170];
M.e[M.e.length-1]=1;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2817=function(M){if(--M.cbt<0){throw _2817;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="focusin";
M.c.push(new RT.CallFrame(_2821,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33083,845,63,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][170];
M.e[M.e.length-1]=0;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2793=function(M){if(--M.cbt<0){throw _2793;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-3]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2797,M.p));
M.v=M.e[M.e.length-28][2][0][M.e[M.e.length-28][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32771,841,30,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-33][163];
M.e[M.e.length-1]="c";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="b";
M.e[M.e.length-4]="A";
M.e[M.e.length-5]="B";
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2777=function(M){if(--M.cbt<0){throw _2777;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2781,M.p));
M.v=M.e[M.e.length-28][2][0][M.e[M.e.length-28][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32468,835,30,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-31][159];
M.e[M.e.length-1]="b";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="c";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2758=function(M){if(--M.cbt<0){throw _2758;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["list*"]._i(M);
M.e.length-=2;
M.e[M.e.length-13]=M.v;
M.e[M.e.length-14]=RT.makePair(sym1858,RT.makePair("Medianer",RT.NULL));
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2777,M.p));
M.v=M.e[M.e.length-28][2][0][M.e[M.e.length-28][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32412,834,30,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-31][159];
M.e[M.e.length-1]="a";
M.e[M.e.length-2]="b";
M.e[M.e.length-3]="c";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2742=function(M){if(--M.cbt<0){throw _2742;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.NULL)));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2746,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",29991,802,86,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-34][151];
M.e[M.e.length-1]="B";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="c";
M.e[M.e.length-4]="b";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2732=function(M){if(--M.cbt<0){throw _2732;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2726=function(M){if(--M.cbt<0){throw _2726;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2718=function(M){if(--M.cbt<0){throw _2718;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["sqrt"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3718=function(M){if(--M.cbt<0){throw _3718;}
M.c.push(new RT.PromptFrame(_3720,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=400;
M.e[M.e.length-1][98]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3710=function(M){if(--M.cbt<0){throw _3710;}
M.c.push(new RT.PromptFrame(_3712,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_448,9,[M.e[M.e.length-1]],"triangle/aas-non-shared");
M.e[M.e.length-1][89]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2692=function(M){if(--M.cbt<0){throw _2692;}
M.e[M.e.length-8]=M.v;
M.a=8;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2678=function(M){if(--M.cbt<0){throw _2678;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27050,749,4,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="$~a \\textrm{ eller } ~a$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-4];
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2671=function(M){if(--M.cbt<0){throw _2671;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2678,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27009,748,13,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="h_~a = ~a";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.c.push(new RT.CallFrame(_2680,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27031,748,35,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-8][113][0][M.e[M.e.length-8][113][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2644=function(M){if(--M.cbt<0){throw _2644;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2640=function(M){if(--M.cbt<0){throw _2640;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2614=function(M){if(--M.cbt<0){throw _2614;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2602=function(M){if(--M.cbt<0){throw _2602;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2594=function(M){if(--M.cbt<0){throw _2594;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2580=function(M){if(--M.cbt<0){throw _2580;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2568=function(M){if(--M.cbt<0){throw _2568;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2598,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26331,729,8,149]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$h_~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-17];
M.c.push(new RT.CallFrame(_2600,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26382,730,19,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][112][0][M.e[M.e.length-9][112][1]]);
M.c.push(new RT.CallFrame(_2602,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26389,730,26,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][161];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=M.e[M.e.length-23];
M.e[M.e.length-3]=M.e[M.e.length-24];
M.e[M.e.length-4]=M.e[M.e.length-26];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2534=function(M){if(--M.cbt<0){throw _2534;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3598=function(M){if(--M.cbt<0){throw _3598;}
M.c.push(new RT.PromptFrame(_3600,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_402,3,[M.e[M.e.length-1]],"triangle-vertices/asa");
M.e[M.e.length-1][196]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2511=function(M){if(--M.cbt<0){throw _2511;}
if(M.v===false){return(_2508)(M);}else{M.v=true;
return(_2509)(M);}};

var _2497=function(M){if(--M.cbt<0){throw _2497;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=4;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2483=function(M){if(--M.cbt<0){throw _2483;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2466=function(M){if(--M.cbt<0){throw _2466;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3504=function(M){if(--M.cbt<0){throw _3504;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_3512,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37461,922,15,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-11][178][0][M.e[M.e.length-11][178][1]]);
M.c.push(new RT.CallFrame(_3514,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37478,922,32,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-14][142][0][M.e[M.e.length-14][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]="angleC";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3490=function(M){if(--M.cbt<0){throw _3490;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_3494,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37311,919,14,360]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-11][172];
M.c.push(new RT.CallFrame(_3496,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37347,920,15,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-11][178][0][M.e[M.e.length-11][178][1]]);
M.c.push(new RT.CallFrame(_3498,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37364,920,32,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-14][142][0][M.e[M.e.length-14][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]="angleA";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2389=function(M){if(--M.cbt<0){throw _2389;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23272,634,4,108]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-6][144][0][M.e[M.e.length-6][144][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][200];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2372=function(M){if(--M.cbt<0){throw _2372;}
M.e[M.e.length-10]=M.v;
M.c.push(new RT.CallFrame(_2374,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22951,626,56,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=2;
M.v=M.primitives["list-ref"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2353=function(M){if(--M.cbt<0){throw _2353;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.v=(M.e[M.e.length-13]===sym1867);
if(M.v===false){return(_2359)(M);}else{M.v=M.e[M.e.length-13];
M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]="#CE2D6A";
M.e[M.e.length-2]="#F7CE9E";
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2362,M.p));
return((M.p).label)(M);}};





var _3308=function(M){if(--M.cbt<0){throw _3308;}
if(M.v===false){return(_3305)(M);}else{M.c.push(new RT.CallFrame(_3312,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36194,903,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3284=function(M){if(--M.cbt<0){throw _3284;}
if(M.v===false){return(_3281)(M);}else{M.c.push(new RT.CallFrame(_3288,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36083,902,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _2217=function(M){if(--M.cbt<0){throw _2217;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2220,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21726,591,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-9],M.e[M.e.length-4]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3188=function(M){if(--M.cbt<0){throw _3188;}
if(M.v===false){return(_3185)(M);}else{M.c.push(new RT.CallFrame(_3192,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35613,897,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3164=function(M){if(--M.cbt<0){throw _3164;}
if(M.v===false){return(_3161)(M);}else{M.c.push(new RT.CallFrame(_3168,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35513,896,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3140=function(M){if(--M.cbt<0){throw _3140;}
if(M.v===false){return(_3137)(M);}else{M.c.push(new RT.CallFrame(_3144,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35412,895,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2153=function(M){if(--M.cbt<0){throw _2153;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2162,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21464,583,13,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-5][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[36]); }
M.e[M.e.length-1]=M.e[M.e.length-5][36];
M.c.push(new RT.CallFrame(_2164,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21472,583,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][113][0][M.e[M.e.length-6][113][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3092=function(M){if(--M.cbt<0){throw _3092;}
if(M.v===false){return(_3089)(M);}else{M.c.push(new RT.CallFrame(_3096,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35179,892,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3068=function(M){if(--M.cbt<0){throw _3068;}
if(M.v===false){return(_3065)(M);}else{M.c.push(new RT.CallFrame(_3072,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35079,891,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3044=function(M){if(--M.cbt<0){throw _3044;}
if(M.v===false){return(_3041)(M);}else{M.c.push(new RT.CallFrame(_3048,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34944,889,26,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3024=function(M){if(--M.cbt<0){throw _3024;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<"))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3012=function(M){if(--M.cbt<0){throw _3012;}
return(_3006)(M);};

var _2986=function(M){if(--M.cbt<0){throw _2986;}
return(_2968)(M);};

var _2972=function(M){if(--M.cbt<0){throw _2972;}
return(_2970)(M);};

var _2954=function(M){if(--M.cbt<0){throw _2954;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2934=function(M){if(--M.cbt<0){throw _2934;}
M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2918=function(M){if(--M.cbt<0){throw _2918;}
M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_2901=RT.si_context_expected(6);

var _2880=function(M){if(--M.cbt<0){throw _2880;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2860=function(M){if(--M.cbt<0){throw _2860;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2843=function(M){if(--M.cbt<0){throw _2843;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="focusin";
M.c.push(new RT.CallFrame(_2847,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33253,847,63,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][170];
M.e[M.e.length-1]=2;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2828=function(M){if(--M.cbt<0){throw _2828;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2841,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33205,847,15,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-9][168][0][M.e[M.e.length-9][168][1]];
M.c.push(new RT.CallFrame(_2843,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33216,847,26,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-11][142][0][M.e[M.e.length-11][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="angleC";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2815=function(M){if(--M.cbt<0){throw _2815;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2828,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33120,846,15,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-8][168][0][M.e[M.e.length-8][168][1]];
M.c.push(new RT.CallFrame(_2830,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33131,846,26,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-10][142][0][M.e[M.e.length-10][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="angleB";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2789=function(M){if(--M.cbt<0){throw _2789;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2793,M.p));
M.v=M.e[M.e.length-28][2][0][M.e[M.e.length-28][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32707,840,30,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-33][163];
M.e[M.e.length-1]="b";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="c";
M.e[M.e.length-4]="A";
M.e[M.e.length-5]="C";
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2768=function(M){if(--M.cbt<0){throw _2768;}
M.e[M.e.length-1]=M.v;
M.v=RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e.pop();
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2754=function(M){if(--M.cbt<0){throw _2754;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-4]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-6]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e[M.e.length-14]=RT.makePair(sym1857,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e[M.e.length-12]=RT.makePair(sym1858,RT.makePair("Sinusrelationer",RT.NULL));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1857;
M.c.push(new RT.CallFrame(_2758,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30242,806,23,2056]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.c.push(new RT.CallFrame(_2760,M.p));
M.v=M.e[M.e.length-27][2][0][M.e[M.e.length-27][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30286,807,30,2011]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e.push(void(0));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=RT.makePair("a",RT.makePair("A",RT.makePair("b",RT.makePair("B",RT.makePair("c",RT.makePair("C",RT.NULL))))));
M.e[M.e.length-2]=RT.makePair("b",RT.makePair("B",RT.makePair("a",RT.makePair("A",RT.makePair("c",RT.makePair("C",RT.NULL))))));
M.e[M.e.length-3]=RT.makePair("c",RT.makePair("C",RT.makePair("a",RT.makePair("A",RT.makePair("b",RT.makePair("B",RT.NULL))))));
M.e[M.e.length-4]=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2763,M.p));
M.v=M.e[M.e.length-31][2][0][M.e[M.e.length-31][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30663,812,45,494]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-33][125][0][M.e[M.e.length-33][125][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-33][202];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2738=function(M){if(--M.cbt<0){throw _2738;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-4]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-4]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2742,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",29935,802,30,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-34][150];
M.e[M.e.length-1]="b";
M.e[M.e.length-2]="a";
M.e[M.e.length-3]="c";
M.e[M.e.length-4]="B";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2730=function(M){if(--M.cbt<0){throw _2730;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2806,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32960,844,15,58]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-6][168][0][M.e[M.e.length-6][168][1]];
M.c.push(new RT.CallFrame(_2808,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",32971,844,26,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-8][142][0][M.e[M.e.length-8][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="calculate";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2724=function(M){if(--M.cbt<0){throw _2724;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2726,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28059,767,78,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2728,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28064,767,83,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-25],M.e[M.e.length-26]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2716=function(M){if(--M.cbt<0){throw _2716;}
M.e[M.e.length-13]=M.v;
M.a=13;
M.v=M.primitives["format"]._i(M);
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2710=function(M){if(--M.cbt<0){throw _2710;}
M.e[M.e.length-8]=M.v;
M.a=8;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2702=function(M){if(--M.cbt<0){throw _2702;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_2704,M.p));
M.v=M.e[M.e.length-17][2][0][M.e[M.e.length-17][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27542,757,52,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-16],M.e[M.e.length-19]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2690=function(M){if(--M.cbt<0){throw _2690;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2696,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27377,756,10,183]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$T = \\textrm{Areal} = \\sqrt{s(s-~a)(s-~a)(s-~a)} = \\sqrt{s\\cdot(s-~a)\\cdot(s-~a)\\cdot(s-~a)}=~a$";
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.e[M.e.length-4]=M.e[M.e.length-18];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.e[M.e.length-7]=M.e[M.e.length-15];
M.c.push(new RT.CallFrame(_2698,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27523,757,33,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2700,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27529,757,39,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-16];
M.c.push(new RT.CallFrame(_2702,M.p));
M.v=M.e[M.e.length-17][2][0][M.e[M.e.length-17][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27534,757,44,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-16],M.e[M.e.length-18]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2673=function(M){if(--M.cbt<0){throw _2673;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2666=function(M){if(--M.cbt<0){throw _2666;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2671,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26961,747,13,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="h_~a = ~a";
M.e[M.e.length-2]=M.e[M.e.length-7];
M.c.push(new RT.CallFrame(_2673,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26983,747,35,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-7][112][0][M.e[M.e.length-7][112][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2642=function(M){if(--M.cbt<0){throw _2642;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2638=function(M){if(--M.cbt<0){throw _2638;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2654,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26615,732,94,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][160];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2612=function(M){if(--M.cbt<0){throw _2612;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2600=function(M){if(--M.cbt<0){throw _2600;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2608,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26411,730,48,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][112][0][M.e[M.e.length-9][112][1]]);
M.c.push(new RT.CallFrame(_2610,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26418,730,55,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-14][161];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-18];
M.c.push(new RT.CallFrame(_2612,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26432,730,69,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-15][87];
M.c.push(new RT.CallFrame(_2614,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26442,730,79,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-16][68];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2584=function(M){if(--M.cbt<0){throw _2584;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2578=function(M){if(--M.cbt<0){throw _2578;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2594,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26299,728,94,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][160];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2566=function(M){if(--M.cbt<0){throw _2566;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2554=function(M){if(--M.cbt<0){throw _2554;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2558,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26024,721,37,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][158];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2530=function(M){if(--M.cbt<0){throw _2530;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2534,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25803,717,52,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][156];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2526=function(M){if(--M.cbt<0){throw _2526;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2530,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25788,717,37,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][158];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2505=function(M){if(--M.cbt<0){throw _2505;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedNegate(M, M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2495=function(M){if(--M.cbt<0){throw _2495;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["sqrt"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2479=function(M){if(--M.cbt<0){throw _2479;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2463=function(M){if(--M.cbt<0){throw _2463;}
if(M.v===false){return(_2460)(M);}else{M.e[M.e.length-1]="\\cdot";
return(_2457)(M);}};

var _2459=function(M){if(--M.cbt<0){throw _2459;}
if(M.v===false){return(_2456)(M);}else{M.c.push(new RT.CallFrame(_2463,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24247,667,34,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2433=function(M){if(--M.cbt<0){throw _2433;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2413=function(M){if(--M.cbt<0){throw _2413;}
if(M.v===false){return(_2410)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2415,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23643,645,7,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][127];
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _2384=function(M){if(--M.cbt<0){throw _2384;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2389,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23238,633,12,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5][143][0][M.e[M.e.length-5][143][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2370=function(M){if(--M.cbt<0){throw _2370;}
M.e[M.e.length-9]=M.v;
M.c.push(new RT.CallFrame(_2372,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22935,626,40,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=1;
M.v=M.primitives["list-ref"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2346=function(M){if(--M.cbt<0){throw _2346;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2326=function(M){if(--M.cbt<0){throw _2326;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2335,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22521,618,13,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-8][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[37]); }
M.e[M.e.length-1]=M.e[M.e.length-8][37];
M.c.push(new RT.CallFrame(_2337,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22529,618,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-9][113][0][M.e[M.e.length-9][113][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2276=function(M){if(--M.cbt<0){throw _2276;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_2280,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22194,608,5,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-31][45]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-31].names[45]); }
M.p=M.e[M.e.length-31][45];
M.e[M.e.length-1]=M.e[M.e.length-32];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2262=function(M){if(--M.cbt<0){throw _2262;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2276,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22163,607,5,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-31][44]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-31].names[44]); }
M.p=M.e[M.e.length-31][44];
M.e[M.e.length-1]=M.e[M.e.length-32];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2250=function(M){if(--M.cbt<0){throw _2250;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2253,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22015,602,13,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"/"));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2226=function(M){if(--M.cbt<0){throw _2226;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2229,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21799,594,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-9],M.e[M.e.length-6]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2214=function(M){if(--M.cbt<0){throw _2214;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=3;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2191=function(M){if(--M.cbt<0){throw _2191;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2135=function(M){if(--M.cbt<0){throw _2135;}
M.e.length-=(M.a-1);
return(_2136)(M);};

var _2148=function(M){if(--M.cbt<0){throw _2148;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2153,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21430,582,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-4][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[36]); }
M.e[M.e.length-1]=M.e[M.e.length-4][36];
M.c.push(new RT.CallFrame(_2155,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21438,582,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5][112][0][M.e[M.e.length-5][112][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3775=function(M){if(--M.cbt<0){throw _3775;}
if((M.a-11)===0){return(_3771)(M);}else{RT.si_context_expected(11)(M);
}};


var _2106=function(M){if(--M.cbt<0){throw _2106;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2111,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20937,568,4,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="stroke";
M.e[M.e.length-3]="black";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3754=function(M){if(--M.cbt<0){throw _3754;}
M.e.length-=(M.a-1);
return(_3755)(M);};

var _3748=function(M){if(--M.cbt<0){throw _3748;}
M.e.length-=(M.a-1);
return(_3749)(M);};

var _2064=function(M){if(--M.cbt<0){throw _2064;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3731=function(M){if(--M.cbt<0){throw _3731;}
M.e.length-=(M.a-1);
return(_3732)(M);};

var _3725=function(M){if(--M.cbt<0){throw _3725;}
M.e.length-=(M.a-1);
return(_3726)(M);};

var _3713=function(M){if(--M.cbt<0){throw _3713;}
M.e.length-=(M.a-1);
return(_3714)(M);};




var _3681=function(M){if(--M.cbt<0){throw _3681;}
M.e.length-=(M.a-1);
return(_3682)(M);};

var _1955=function(M){if(--M.cbt<0){throw _1955;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1964,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19363,522,14,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-10][107];
M.c.push(new RT.CallFrame(_1966,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19373,522,24,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][199];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-18];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1937=function(M){if(--M.cbt<0){throw _1937;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1946,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19295,520,14,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][107];
M.c.push(new RT.CallFrame(_1948,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19305,520,24,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][199];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3661=function(M){if(--M.cbt<0){throw _3661;}
M.e.length-=(M.a-1);
return(_3662)(M);};

var _3653=function(M){if(--M.cbt<0){throw _3653;}
M.e.length-=(M.a-1);
return(_3654)(M);};

var _3643=function(M){if(--M.cbt<0){throw _3643;}
M.e.length-=(M.a-1);
return(_3644)(M);};

var _3637=function(M){if(--M.cbt<0){throw _3637;}
M.e.length-=(M.a-1);
return(_3638)(M);};


var _3619=function(M){if(--M.cbt<0){throw _3619;}
M.e.length-=(M.a-1);
return(_3620)(M);};

var _3613=function(M){if(--M.cbt<0){throw _3613;}
M.e.length-=(M.a-1);
return(_3614)(M);};

var _3605=function(M){if(--M.cbt<0){throw _3605;}
M.e.length-=(M.a-1);
return(_3606)(M);};

var _3599=function(M){if(--M.cbt<0){throw _3599;}
M.e.length-=(M.a-1);
return(_3600)(M);};

var _3591=function(M){if(--M.cbt<0){throw _3591;}
M.e.length-=(M.a-1);
return(_3592)(M);};

var _3580=function(M){if(--M.cbt<0){throw _3580;}
M.e.push([M.params.currentNamespace.get("paper")||M.primitives["paper"],M.params.currentNamespace.get("raphael-init")||M.primitives["raphael-init"],[M.modules["whalesong/lang/private/traced-app.rkt"].prefix,M.modules["whalesong/lang/private/traced-app.rkt"].getPrefixOffset("traced-app-key"),{moduleName:"whalesong/lang/private/traced-app.rkt",name:"traced-app-key"}],[M.modules["whalesong/js/main.rkt"].prefix,M.modules["whalesong/js/main.rkt"].getPrefixOffset("js-eval21.41"),{moduleName:"whalesong/js/main.rkt",name:"js-eval21.41"}],M.primitives["format"],M.params.currentNamespace.get("raphael-rect")||M.primitives["raphael-rect"],M.primitives["length"],[M.modules["whalesong/js/main.rkt"].prefix,M.modules["whalesong/js/main.rkt"].getPrefixOffset("call-method3.5"),{moduleName:"whalesong/js/main.rkt",name:"call-method3.5"}],M.primitives["error"],M.params.currentNamespace.get("raphael-circle")||M.primitives["raphael-circle"],M.params.currentNamespace.get("raphael-ellipse")||M.primitives["raphael-ellipse"],M.params.currentNamespace.get("raphael-image")||M.primitives["raphael-image"],M.params.currentNamespace.get("raphael-set")||M.primitives["raphael-set"],M.params.currentNamespace.get("raphael-push")||M.primitives["raphael-push"],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("for-each2"),{moduleName:"whalesong/lang/private/map.rkt",name:"for-each2"}],M.params.currentNamespace.get("raphael-text")||M.primitives["raphael-text"],M.params.currentNamespace.get("raphael-print")||M.primitives["raphael-print"],M.params.currentNamespace.get("raphael-get-font")||M.primitives["raphael-get-font"],M.params.currentNamespace.get("raphael-path")||M.primitives["raphael-path"],M.params.currentNamespace.get("raphael-line")||M.primitives["raphael-line"],M.params.currentNamespace.get("raphael-clear")||M.primitives["raphael-clear"],M.params.currentNamespace.get("raphael-node")||M.primitives["raphael-node"],M.params.currentNamespace.get("raphael-hide")||M.primitives["raphael-hide"],M.params.currentNamespace.get("raphael-show")||M.primitives["raphael-show"],M.params.currentNamespace.get("raphael-remove")||M.primitives["raphael-remove"],M.params.currentNamespace.get("raphael-rotate")||M.primitives["raphael-rotate"],M.primitives["cadr"],M.params.currentNamespace.get("raphael-translate")||M.primitives["raphael-translate"],M.params.currentNamespace.get("raphael-scale")||M.primitives["raphael-scale"],M.params.currentNamespace.get("raphael-attr")||M.primitives["raphael-attr"],M.primitives["number?"],M.primitives["number->string"],M.primitives["string?"],M.params.currentNamespace.get("struct:posn")||M.primitives["struct:posn"],M.params.currentNamespace.get("make-posn")||M.primitives["make-posn"],M.params.currentNamespace.get("posn?")||M.primitives["posn?"],M.params.currentNamespace.get("posn-x")||M.primitives["posn-x"],M.params.currentNamespace.get("posn-y")||M.primitives["posn-y"],M.params.currentNamespace.get("set-posn-x!")||M.primitives["set-posn-x!"],M.params.currentNamespace.get("set-posn-y!")||M.primitives["set-posn-y!"],M.params.currentNamespace.get("struct:triangle")||M.primitives["struct:triangle"],M.params.currentNamespace.get("make-triangle")||M.primitives["make-triangle"],M.params.currentNamespace.get("triangle?")||M.primitives["triangle?"],M.params.currentNamespace.get("triangle-vertices")||M.primitives["triangle-vertices"],M.params.currentNamespace.get("triangle-sides")||M.primitives["triangle-sides"],M.params.currentNamespace.get("triangle-angles")||M.primitives["triangle-angles"],M.params.currentNamespace.get("triangle-names")||M.primitives["triangle-names"],M.params.currentNamespace.get("triangle-formulas")||M.primitives["triangle-formulas"],M.params.currentNamespace.get("set-triangle-vertices!")||M.primitives["set-triangle-vertices!"],M.params.currentNamespace.get("set-triangle-sides!")||M.primitives["set-triangle-sides!"],M.params.currentNamespace.get("set-triangle-angles!")||M.primitives["set-triangle-angles!"],M.params.currentNamespace.get("set-triangle-names!")||M.primitives["set-triangle-names!"],M.params.currentNamespace.get("set-triangle-formulas!")||M.primitives["set-triangle-formulas!"],M.params.currentNamespace.get("check-dependencies")||M.primitives["check-dependencies"],M.params.currentNamespace.get("tp-error")||M.primitives["tp-error"],M.primitives["raise"],M.primitives["make-exn:fail:contract"],M.primitives["string-append"],M.primitives["current-continuation-marks"],M.params.currentNamespace.get("excess")||M.primitives["excess"],M.primitives["sqr"],M.params.currentNamespace.get("polar->posn")||M.primitives["polar->posn"],M.primitives["cos"],M.primitives["sin"],M.params.currentNamespace.get("cos-rel")||M.primitives["cos-rel"],M.params.currentNamespace.get("sin-rel")||M.primitives["sin-rel"],M.params.currentNamespace.get("last-angle")||M.primitives["last-angle"],M.params.currentNamespace.get("radians")||M.primitives["radians"],M.params.currentNamespace.get("degrees")||M.primitives["degrees"],M.params.currentNamespace.get("extra-formulas")||M.primitives["extra-formulas"],M.primitives["append"],M.params.currentNamespace.get("medians")||M.primitives["medians"],M.params.currentNamespace.get("heights")||M.primitives["heights"],M.params.currentNamespace.get("angle-bisectors")||M.primitives["angle-bisectors"],M.params.currentNamespace.get("area")||M.primitives["area"],M.params.currentNamespace.get("perimeter")||M.primitives["perimeter"],M.params.currentNamespace.get("triangle/sss")||M.primitives["triangle/sss"],M.primitives["acos"],M.params.currentNamespace.get("cosrel-angle")||M.primitives["cosrel-angle"],M.params.currentNamespace.get("triangle/ass")||M.primitives["triangle/ass"],M.primitives["sqrt"],M.params.currentNamespace.get("cosrel-side")||M.primitives["cosrel-side"],M.params.currentNamespace.get("triangle/sas")||M.primitives["triangle/sas"],M.params.currentNamespace.get("triangle/ssa")||M.primitives["triangle/ssa"],M.primitives["positive?"],M.params.currentNamespace.get("triangle/aas")||M.primitives["triangle/aas"],M.params.currentNamespace.get("angle-sum")||M.primitives["angle-sum"],M.params.currentNamespace.get("$degrees")||M.primitives["$degrees"],M.params.currentNamespace.get("sinrel-side")||M.primitives["sinrel-side"],M.params.currentNamespace.get("triangle/aas-non-shared")||M.primitives["triangle/aas-non-shared"],M.params.currentNamespace.get("triangle/two-sides-non-included-angle")||M.primitives["triangle/two-sides-non-included-angle"],M.primitives["asin"],M.primitives["sin"],M.primitives["append"],M.primitives["format"],M.params.currentNamespace.get("sinrel-angle-1")||M.primitives["sinrel-angle-1"],M.params.currentNamespace.get("triangle/asa")||M.primitives["triangle/asa"],M.params.currentNamespace.get("triangle/saa")||M.primitives["triangle/saa"],M.params.currentNamespace.get("WIDTH")||M.primitives["WIDTH"],M.params.currentNamespace.get("HEIGHT")||M.primitives["HEIGHT"],M.params.currentNamespace.get("XMIN")||M.primitives["XMIN"],M.params.currentNamespace.get("XMAX")||M.primitives["XMAX"],M.params.currentNamespace.get("YMIN")||M.primitives["YMIN"],M.params.currentNamespace.get("YMAX")||M.primitives["YMAX"],M.params.currentNamespace.get("screen-x")||M.primitives["screen-x"],M.primitives["max"],M.primitives["min"],M.params.currentNamespace.get("screen-y")||M.primitives["screen-y"],M.params.currentNamespace.get("midpoint-posn")||M.primitives["midpoint-posn"],M.params.currentNamespace.get("model-paper")||M.primitives["model-paper"],M.params.currentNamespace.get("raphael-focus")||M.primitives["raphael-focus"],M.params.currentNamespace.get("model-triangle")||M.primitives["model-triangle"],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("first"),{moduleName:"whalesong/lang/list.rkt",name:"first"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("second"),{moduleName:"whalesong/lang/list.rkt",name:"second"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("third"),{moduleName:"whalesong/lang/list.rkt",name:"third"}],M.primitives["list-ref"],M.params.currentNamespace.get("color-triangle-stroke")||M.primitives["color-triangle-stroke"],M.params.currentNamespace.get("color-triangle-fill")||M.primitives["color-triangle-fill"],M.params.currentNamespace.get("color-result-fill")||M.primitives["color-result-fill"],M.params.currentNamespace.get("color-result-stroke")||M.primitives["color-result-stroke"],M.params.currentNamespace.get("stroke-width")||M.primitives["stroke-width"],M.params.currentNamespace.get("raphael-open-sans-text")||M.primitives["raphael-open-sans-text"],M.params.currentNamespace.get("raphael-triangle")||M.primitives["raphael-triangle"],M.params.currentNamespace.get("print-message")||M.primitives["print-message"],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("for-each2"),{moduleName:"whalesong/lang/private/map.rkt",name:"for-each2"}],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("map2"),{moduleName:"whalesong/lang/private/map.rkt",name:"map2"}],M.params.currentNamespace.get("color-background")||M.primitives["color-background"],M.params.currentNamespace.get("start-raphael")||M.primitives["start-raphael"],M.params.currentNamespace.get("draw-triangle")||M.primitives["draw-triangle"],M.params.currentNamespace.get("scale-triangle")||M.primitives["scale-triangle"],M.params.currentNamespace.get("struct:world")||M.primitives["struct:world"],M.params.currentNamespace.get("make-world")||M.primitives["make-world"],M.params.currentNamespace.get("world?")||M.primitives["world?"],M.params.currentNamespace.get("world-initialized?")||M.primitives["world-initialized?"],M.params.currentNamespace.get("world-triangle")||M.primitives["world-triangle"],M.params.currentNamespace.get("world-result-formulas")||M.primitives["world-result-formulas"],M.params.currentNamespace.get("world-old-triangle-representation")||M.primitives["world-old-triangle-representation"],M.params.currentNamespace.get("set-world-initialized?!")||M.primitives["set-world-initialized?!"],M.params.currentNamespace.get("set-world-triangle!")||M.primitives["set-world-triangle!"],M.params.currentNamespace.get("set-world-result-formulas!")||M.primitives["set-world-result-formulas!"],M.params.currentNamespace.get("set-world-old-triangle-representation!")||M.primitives["set-world-old-triangle-representation!"],M.params.currentNamespace.get("update-result-formulas")||M.primitives["update-result-formulas"],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-focus12.23"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-focus12.23"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("update-view-text26.51"),{moduleName:"whalesong/web-world/impl.rkt",name:"update-view-text26.51"}],[M.modules["whalesong/lang/private/list.rkt"].prefix,M.modules["whalesong/lang/private/list.rkt"].getPrefixOffset("foldl"),{moduleName:"whalesong/lang/private/list.rkt",name:"foldl"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-append-child39.77"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-append-child39.77"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("xexp->dom44.87"),{moduleName:"whalesong/web-world/impl.rkt",name:"xexp->dom44.87"}],M.params.currentNamespace.get("tick")||M.primitives["tick"],M.params.currentNamespace.get("draw")||M.primitives["draw"],M.primitives["number?"],M.params.currentNamespace.get("$cosrel-side$")||M.primitives["$cosrel-side$"],M.params.currentNamespace.get("$cosrel-angle$")||M.primitives["$cosrel-angle$"],M.params.currentNamespace.get("$sinrel-side$")||M.primitives["$sinrel-side$"],M.params.currentNamespace.get("sinrel-angle-2")||M.primitives["sinrel-angle-2"],M.params.currentNamespace.get("$sinrel-angle-1$")||M.primitives["$sinrel-angle-1$"],M.params.currentNamespace.get("$sinrel-angle-2$")||M.primitives["$sinrel-angle-2$"],M.params.currentNamespace.get("calculate-median")||M.primitives["calculate-median"],M.primitives["sqrt"],M.params.currentNamespace.get("median")||M.primitives["median"],M.params.currentNamespace.get("$median$")||M.primitives["$median$"],M.params.currentNamespace.get("calculate-height")||M.primitives["calculate-height"],M.params.currentNamespace.get("height")||M.primitives["height"],M.params.currentNamespace.get("$angle-sum$")||M.primitives["$angle-sum$"],M.params.currentNamespace.get("$height$")||M.primitives["$height$"],M.primitives["string-append"],M.primitives["sqr"],M.params.currentNamespace.get("make-initial-view")||M.primitives["make-initial-view"],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("->view9.17"),{moduleName:"whalesong/web-world/impl.rkt",name:"->view9.17"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-bind27.53"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-bind27.53"}],M.params.currentNamespace.get("on-click")||M.primitives["on-click"],M.params.currentNamespace.get("make-on-focusin")||M.primitives["make-on-focusin"],M.params.currentNamespace.get("values-map")||M.primitives["values-map"],M.params.currentNamespace.get("maybe-make-triangle")||M.primitives["maybe-make-triangle"],M.primitives["string->number"],M.params.currentNamespace.get("string-replace-char")||M.primitives["string-replace-char"],M.primitives["length"],[M.modules["whalesong/lang/private/list.rkt"].prefix,M.modules["whalesong/lang/private/list.rkt"].getPrefixOffset("filter"),{moduleName:"whalesong/lang/private/list.rkt",name:"filter"}],M.primitives["positive?"],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-form-value37.73"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-form-value37.73"}],M.primitives["list->string"],M.primitives["eqv?"],M.primitives["string->list"],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("big-bang1.1"),{moduleName:"whalesong/web-world/impl.rkt",name:"big-bang1.1"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("initial-view2.3"),{moduleName:"whalesong/web-world/impl.rkt",name:"initial-view2.3"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("on-tick4.7"),{moduleName:"whalesong/web-world/impl.rkt",name:"on-tick4.7"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("to-draw7.13"),{moduleName:"whalesong/web-world/impl.rkt",name:"to-draw7.13"}],[M.modules["collects/racket/private/modbeg.rkt"].prefix,M.modules["collects/racket/private/modbeg.rkt"].getPrefixOffset("print-values"),{moduleName:"collects/racket/private/modbeg.rkt",name:"print-values"}],[M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix,M.modules["whalesong/lang/check-expect/check-expect.rkt"].getPrefixOffset("run-tests"),{moduleName:"whalesong/lang/check-expect/check-expect.rkt",name:"run-tests"}],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["paper","raphael-init","traced-app-key","js-eval21.41","format","raphael-rect","length","call-method3.5","error","raphael-circle","raphael-ellipse","raphael-image","raphael-set","raphael-push","for-each2","raphael-text","raphael-print","raphael-get-font","raphael-path","raphael-line","raphael-clear","raphael-node","raphael-hide","raphael-show","raphael-remove","raphael-rotate","cadr","raphael-translate","raphael-scale","raphael-attr","number?","number->string","string?","struct:posn","make-posn","posn?","posn-x","posn-y","set-posn-x!","set-posn-y!","struct:triangle","make-triangle","triangle?","triangle-vertices","triangle-sides","triangle-angles","triangle-names","triangle-formulas","set-triangle-vertices!","set-triangle-sides!","set-triangle-angles!","set-triangle-names!","set-triangle-formulas!","check-dependencies","tp-error","raise","make-exn:fail:contract","string-append","current-continuation-marks","excess","sqr","polar->posn","cos","sin","cos-rel","sin-rel","last-angle","radians","degrees","extra-formulas","append","medians","heights","angle-bisectors","area","perimeter","triangle/sss","acos","cosrel-angle","triangle/ass","sqrt","cosrel-side","triangle/sas","triangle/ssa","positive?","triangle/aas","angle-sum","$degrees","sinrel-side","triangle/aas-non-shared","triangle/two-sides-non-included-angle","asin","sin","append","format","sinrel-angle-1","triangle/asa","triangle/saa","WIDTH","HEIGHT","XMIN","XMAX","YMIN","YMAX","screen-x","max","min","screen-y","midpoint-posn","model-paper","raphael-focus","model-triangle","first","second","third","list-ref","color-triangle-stroke","color-triangle-fill","color-result-fill","color-result-stroke","stroke-width","raphael-open-sans-text","raphael-triangle","print-message","for-each2","map2","color-background","start-raphael","draw-triangle","scale-triangle","struct:world","make-world","world?","world-initialized?","world-triangle","world-result-formulas","world-old-triangle-representation","set-world-initialized?!","set-world-triangle!","set-world-result-formulas!","set-world-old-triangle-representation!","update-result-formulas","view-focus12.23","update-view-text26.51","foldl","view-append-child39.77","xexp->dom44.87","tick","draw","number?","$cosrel-side$","$cosrel-angle$","$sinrel-side$","sinrel-angle-2","$sinrel-angle-1$","$sinrel-angle-2$","calculate-median","sqrt","median","$median$","calculate-height","height","$angle-sum$","$height$","string-append","sqr","make-initial-view","->view9.17","view-bind27.53","on-click","make-on-focusin","values-map","maybe-make-triangle","string->number","string-replace-char","length","filter","positive?","view-form-value37.73","list->string","eqv?","string->list","big-bang1.1","initial-view2.3","on-tick4.7","to-draw7.13","print-values","run-tests",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["root/triangle-solver.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3582,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_393,1,[M.e[M.e.length-1]],"...angle-solver.rkt:858:28");
M.e[M.e.length-1][205]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3574=function(M){if(--M.cbt<0){throw _3574;}
if((M.modules["whalesong/web-world.rkt"]!==void(0))!==false){return(_3575)(M);}else{return(_3577)(M);}};

var _3571=function(M){if(--M.cbt<0){throw _3571;}
if((M.modules["whalesong/resource.rkt"]!==void(0))!==false){return(_3572)(M);}else{return(_3574)(M);}};















var _2900=function(M){if(--M.cbt<0){throw _2900;}
if((M.a-6)===0){return(_2902)(M);}else{RT.si_context_expected(6)(M);
}};





var _1375=function(M){if(--M.cbt<0){throw _1375;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1389,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6205,208,14,136]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a^{\\circ}$";
M.e[M.e.length-2]=M.e[M.e.length-28];
M.c.push(new RT.CallFrame(_1391,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6269,209,25,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-22][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[78]); }
M.p=M.e[M.e.length-22][78];
M.e[M.e.length-1]=M.e[M.e.length-26];
M.e[M.e.length-2]=M.e[M.e.length-27];
M.e[M.e.length-3]=M.e[M.e.length-28];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1361=function(M){if(--M.cbt<0){throw _1361;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1375,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6054,206,14,136]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a^{\\circ}$";
M.e[M.e.length-2]=M.e[M.e.length-27];
M.c.push(new RT.CallFrame(_1377,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6118,207,25,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-22][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[78]); }
M.p=M.e[M.e.length-22][78];
M.e[M.e.length-1]=M.e[M.e.length-26];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-27];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1349=function(M){if(--M.cbt<0){throw _1349;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1353,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5692,198,45,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][61];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _1294=function(M){if(--M.cbt<0){throw _1294;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_1298,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7937,239,70,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-22][68];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};









var _3762=function(M){if(--M.cbt<0){throw _3762;}
M.e.length-=(M.a-1);
return(_3763)(M);};

var _3752=function(M){if(--M.cbt<0){throw _3752;}
M.e.length-=(M.a-1);
return(_3753)(M);};

var _3746=function(M){if(--M.cbt<0){throw _3746;}
M.e.length-=(M.a-1);
return(_3747)(M);};

var _3742=function(M){if(--M.cbt<0){throw _3742;}
M.e.length-=(M.a-1);
return(_3743)(M);};

var _3729=function(M){if(--M.cbt<0){throw _3729;}
M.e.length-=(M.a-1);
return(_3730)(M);};

var _3723=function(M){if(--M.cbt<0){throw _3723;}
M.e.length-=(M.a-1);
return(_3724)(M);};








var _3659=function(M){if(--M.cbt<0){throw _3659;}
M.e.length-=(M.a-1);
return(_3660)(M);};

var _3651=function(M){if(--M.cbt<0){throw _3651;}
M.e.length-=(M.a-1);
return(_3652)(M);};

var _3641=function(M){if(--M.cbt<0){throw _3641;}
M.e.length-=(M.a-1);
return(_3642)(M);};

var _3635=function(M){if(--M.cbt<0){throw _3635;}
M.e.length-=(M.a-1);
return(_3636)(M);};


var _3617=function(M){if(--M.cbt<0){throw _3617;}
M.e.length-=(M.a-1);
return(_3618)(M);};

var _3611=function(M){if(--M.cbt<0){throw _3611;}
M.e.length-=(M.a-1);
return(_3612)(M);};

var _3603=function(M){if(--M.cbt<0){throw _3603;}
M.e.length-=(M.a-1);
return(_3604)(M);};

var _3597=function(M){if(--M.cbt<0){throw _3597;}
M.e.length-=(M.a-1);
return(_3598)(M);};

var _3589=function(M){if(--M.cbt<0){throw _3589;}
M.e.length-=(M.a-1);
return(_3590)(M);};

var _3579=function(M){if(--M.cbt<0){throw _3579;}
M.e.length-=(M.a-1);
return(_3580)(M);};

var _3577=function(M){if(--M.cbt<0){throw _3577;}
if((M.modules["whalesong/js.rkt"]!==void(0))!==false){return(_3578)(M);}else{return(_3580)(M);}};

var _3573=function(M){if(--M.cbt<0){throw _3573;}
M.e.length-=(M.a-1);
return(_3574)(M);};

var _3568=function(M){M.modules["root/triangle-solver.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/whalesong.rkt"]!==void(0))!==false){return(_3569)(M);}else{return(_3571)(M);}};



































var _3760=function(M){if(--M.cbt<0){throw _3760;}
M.e.length-=(M.a-1);
return(_3761)(M);};


var _3744=function(M){if(--M.cbt<0){throw _3744;}
M.e.length-=(M.a-1);
return(_3745)(M);};

var _3739=function(M){if(--M.cbt<0){throw _3739;}
M.e.length-=(M.a-1);
return(_3740)(M);};


var _3721=function(M){if(--M.cbt<0){throw _3721;}
M.e.length-=(M.a-1);
return(_3722)(M);};








var _3657=function(M){if(--M.cbt<0){throw _3657;}
M.e.length-=(M.a-1);
return(_3658)(M);};

var _3649=function(M){if(--M.cbt<0){throw _3649;}
M.e.length-=(M.a-1);
return(_3650)(M);};


var _3633=function(M){if(--M.cbt<0){throw _3633;}
M.e.length-=(M.a-1);
return(_3634)(M);};



var _3609=function(M){if(--M.cbt<0){throw _3609;}
M.e.length-=(M.a-1);
return(_3610)(M);};

var _3601=function(M){if(--M.cbt<0){throw _3601;}
M.e.length-=(M.a-1);
return(_3602)(M);};

var _3595=function(M){if(--M.cbt<0){throw _3595;}
M.e.length-=(M.a-1);
return(_3596)(M);};

var _3587=function(M){if(--M.cbt<0){throw _3587;}
M.e.length-=(M.a-1);
return(_3588)(M);};


var _3576=function(M){if(--M.cbt<0){throw _3576;}
M.e.length-=(M.a-1);
return(_3577)(M);};

var _3570=function(M){if(--M.cbt<0){throw _3570;}
M.e.length-=(M.a-1);
return(_3571)(M);};




var _3551=function(M){if(--M.cbt<0){throw _3551;}
M.e.length-=(M.a-1);
return(_3552)(M);};





var _2961=function(M){if(--M.cbt<0){throw _2961;}
M.e.length-=(M.a-1);
return(_2962)(M);};




var _2933=function(M){if(--M.cbt<0){throw _2933;}
M.e.length-=(M.a-1);
return(_2934)(M);};

var _2917=function(M){if(--M.cbt<0){throw _2917;}
M.e.length-=(M.a-1);
return(_2918)(M);};















































var _3029=function(M){if(--M.cbt<0){throw _3029;}
M.e.length-=(M.a-1);
return(_3030)(M);};




var _2999=function(M){if(--M.cbt<0){throw _2999;}
M.e.length-=(M.a-1);
return(_3000)(M);};

var _2989=function(M){if(--M.cbt<0){throw _2989;}
M.e.length-=(M.a-1);
return(_2990)(M);};































































































var _429=function(M){if(--M.cbt<0){throw _429;}
//"lambda body for #(struct:LamPositionalName raphael-translate root/triangle-solver.rkt 93 0 2186 72)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2224,94,2,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-5][7][0][M.e[M.e.length-5][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]="translate";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};









var _2009=function(M){if(--M.cbt<0){throw _2009;}
M.e.length-=(M.a-1);
return(_2010)(M);};






















var _407=function(M){if(--M.cbt<0){throw _407;}
//"lambda body for #(struct:LamPositionalName triangle-vertices/sas root/triangle-solver.rkt 245 2 8148 557)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1164,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8201,246,15,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][64];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};





var _1116=function(M){if(--M.cbt<0){throw _1116;}
M.e.length-=(M.a-1);
return(_1117)(M);};















var _433=function(M){if(--M.cbt<0){throw _433;}
//"lambda body for #(struct:LamPositionalName check-dependencies root/triangle-solver.rkt 131 0 3665 122)"

M.unspliceRestFromStack(3,(M.a-3));
M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-3];
if(M.v===false){return(_1564)(M);}else{M.v=RT.VOID;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _1534=function(M){M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3470,122,10,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1868;
M.e[M.e.length-2]="expected 2 or 3 arguments";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _431=function(M){if(--M.cbt<0){throw _431;}
//"lambda body for #(struct:LamPositionalName raphael-attr root/triangle-solver.rkt 104 0 2583 939)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1513,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2623,105,8,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};






var _423=function(M){if(--M.cbt<0){throw _423;}
//"lambda body for #(struct:LamPositionalName raphael-clear root/triangle-solver.rkt 67 0 1572 55)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1599,68,2,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][7][0][M.e[M.e.length-3][7][1]];
if (M.e[M.e.length-3][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-3][0];
M.e[M.e.length-2]="clear";
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _416=function(M){if(--M.cbt<0){throw _416;}
//"lambda body for #(struct:LamPositionalName raphael-set root/triangle-solver.rkt 46 0 980 50)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1004,47,2,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][7][0][M.e[M.e.length-3][7][1]];
if (M.e[M.e.length-3][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-3][0];
M.e[M.e.length-2]="set";
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _413=function(M){if(--M.cbt<0){throw _413;}
//"lambda body for #(struct:LamPositionalName raphael-circle root/triangle-solver.rkt 37 0 750 68)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",783,38,2,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-6][7][0][M.e[M.e.length-6][7][1]];
if (M.e[M.e.length-6][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.e[M.e.length-2]="circle";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _410=function(M){if(--M.cbt<0){throw _410;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:50:12 root/triangle-solver.rkt 50 12 1079 36)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1086,50,19,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-4][7][0][M.e[M.e.length-4][7][1]];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.e[M.e.length-2]="push";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};





















var _1168=function(M){if(--M.cbt<0){throw _1168;}
M.e.length-=(M.a-1);
return(_1169)(M);};























var _404=function(M){if(--M.cbt<0){throw _404;}
//"lambda body for #(struct:LamPositionalName triangle-vertices root/triangle-solver.rkt 306 2 10858 1075)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_886,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10906,307,14,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][66];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};
























var _403=function(M){if(--M.cbt<0){throw _403;}
//"lambda body for #(struct:LamPositionalName triangle-vertices root/triangle-solver.rkt 330 2 12128 3495)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_612,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12177,331,15,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_614,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12183,331,21,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_616,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12186,331,24,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-17];
M.c.push(new RT.CallFrame(_618,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12191,331,29,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-15]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _402=function(M){if(--M.cbt<0){throw _402;}
//"lambda body for #(struct:LamPositionalName triangle-vertices/asa root/triangle-solver.rkt 396 2 15759 281)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_581,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15811,397,14,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][66];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _401=function(M){if(--M.cbt<0){throw _401;}
//"lambda body for #(struct:LamPositionalName triangle-vertices/saa root/triangle-solver.rkt 409 2 16191 281)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_550,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16243,410,14,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][66];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _400=function(M){if(--M.cbt<0){throw _400;}
//"lambda body for #(struct:LamPositionalName ax root/triangle-solver.rkt 514 13 19092 30)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19099,514,20,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_546,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19104,514,25,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_548,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19111,514,32,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-6],M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _398=function(M){if(--M.cbt<0){throw _398;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:634:11 root/triangle-solver.rkt 634 11 23279 78)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23315,635,13,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3][145][0][M.e[M.e.length-3][145][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_536,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23336,635,34,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][146][0][M.e[M.e.length-3][146][1]]);
M.v=RT.makePair(sym1869,RT.makePair(M.e[M.e.length-5],RT.NULL));
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _396=function(M){if(--M.cbt<0){throw _396;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:812:50 root/triangle-solver.rkt 812 50 30668 432)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30732,813,52,367]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-3][201];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _393=function(M){if(--M.cbt<0){throw _393;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:858:28 root/triangle-solver.rkt 858 28 33697 61)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33709,858,40,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_504,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33725,858,56,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][174];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.makeChar(",");
M.e[M.e.length-3]=RT.makeChar(".");
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3874=function(M){if(--M.cbt<0){throw _3874;}
if(M.a===0){return(_3857)(M);}else{M.e.push(M.v);
return(_3857)(M);}};

var _3674=function(M){M.e.splice(M.e.length-17,5);
M.e[M.e.length-13][40]=M.v;
M.e[M.e.length-13][41]=M.e[M.e.length-1];
M.e[M.e.length-13][42]=M.e[M.e.length-2];
M.e[M.e.length-13][43]=M.e[M.e.length-3];
M.e[M.e.length-13][44]=M.e[M.e.length-4];
M.e[M.e.length-13][45]=M.e[M.e.length-5];
M.e[M.e.length-13][46]=M.e[M.e.length-6];
M.e[M.e.length-13][47]=M.e[M.e.length-7];
M.e[M.e.length-13][48]=M.e[M.e.length-8];
M.e[M.e.length-13][49]=M.e[M.e.length-9];
M.e[M.e.length-13][50]=M.e[M.e.length-10];
M.e[M.e.length-13][51]=M.e[M.e.length-11];
M.e[M.e.length-13][52]=M.e[M.e.length-12];
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3664=function(M){M.e.splice(M.e.length-11,5);
M.e[M.e.length-7][33]=M.v;
M.e[M.e.length-7][34]=M.e[M.e.length-1];
M.e[M.e.length-7][35]=M.e[M.e.length-2];
M.e[M.e.length-7][36]=M.e[M.e.length-3];
M.e[M.e.length-7][37]=M.e[M.e.length-4];
M.e[M.e.length-7][38]=M.e[M.e.length-5];
M.e[M.e.length-7][39]=M.e[M.e.length-6];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2968=function(M){if(M.v===false){return(_2965)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2990,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34455,877,7,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][123];
M.e[M.e.length-1]="Sidelængder skal være positive.";
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _2940=function(M){if(M.v===false){return(_2937)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2962,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34272,872,7,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][123];
M.e[M.e.length-1]="Vinkler skal være positive.";
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _2448=function(M){if(--M.cbt<0){throw _2448;}
if(M.a===0){return(_2445)(M);}else{M.e.push(M.v);
return(_2445)(M);}};

var _2360=function(M){M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22847,625,6,192]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-14]=M.e[M.e.length-25][122];
M.e[M.e.length-1]=M.e[M.e.length-23];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-19];
M.e[M.e.length-5]=M.e[M.e.length-21];
M.e[M.e.length-6]=M.e[M.e.length-18];
M.e[M.e.length-7]=M.e[M.e.length-15];
M.e[M.e.length-8]=M.e[M.e.length-16];
M.c.push(new RT.CallFrame(_2370,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22919,626,24,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=0;
M.v=M.primitives["list-ref"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1811=function(M){M.e.push(void(0));
M.c.push(new RT.CallFrame(_1842,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17966,479,16,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-9][104];
M.c.push(new RT.CallFrame(_1844,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17976,479,26,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-10][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-10].names[36]); }
M.p=M.e[M.e.length-10][36];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3185=function(M){M.v=false;
return(_3180)(M);};

var _3183=function(M){M.v=false;
return(_3180)(M);};

var _3165=function(M){M.v=false;
return(_3156)(M);};

var _3113=function(M){M.v=false;
return(_3108)(M);};

var _2508=function(M){M.c.push(new RT.CallFrame(_2515,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25480,708,33,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3081=function(M){M.v=M.e[M.e.length-4];
if(M.v===false){return(_3107)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3109)(M);}else{M.v=M.e[M.e.length-3];
if(M.v===false){return(_3111)(M);}else{M.c.push(new RT.CallFrame(_3116,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35271,893,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _1860=function(M){M.e.push(void(0));
if (M.e[M.e.length-10][109]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-10].names[109]); }
M.e[M.e.length-1]=M.e[M.e.length-10][109];
M.e.push(void(0));
if (M.e[M.e.length-11][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-11].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-11][0];
M.e[M.e.length-11][0]=M.e[M.e.length-2];
M.v=RT.VOID;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1868,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18151,485,18,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-15][9];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=40;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3567=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1810=function(M){M.v=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_1819,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17817,476,19,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-8],3);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2422=function(M){M.v=M.e[M.e.length-1];
M.v=RT.VOID;
return(_2423)(M);};

var _3189=function(M){M.v=false;
return(_3180)(M);};

var _3181=function(M){M.v=false;
return(_3180)(M);};

var _3153=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3179)(M);}else{M.v=M.e[M.e.length-2];
if(M.v===false){return(_3181)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3183)(M);}else{M.c.push(new RT.CallFrame(_3188,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35605,897,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3161=function(M){M.v=false;
return(_3156)(M);};

var _1427=function(M){M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",703,35,10,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1870;
M.e[M.e.length-2]="too many arguments";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3141=function(M){M.v=false;
return(_3132)(M);};

var _2507=function(M){M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25541,710,4,64]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="\\sqrt{\\frac{2~a~a^2+2~a~a^2-~a^2}{4}}";
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.a=6;
M.v=M.primitives["format"]._i(M);
M.e.length-=11;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2506=function(M){M.e[M.e.length-1]="";
return(_2507)(M);};

var _3111=function(M){M.v=false;
return(_3108)(M);};

var _3084=function(M){if(M.v===false){return(_3081)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35196,892,43,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3100,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35212,892,59,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][79];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1871;
M.e[M.e.length-5]=sym1872;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1874;
M.e[M.e.length-8]=sym1875;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3089=function(M){M.v=false;
return(_3084)(M);};

var _3578=function(M){if(M.modules["whalesong/js.rkt"].isInvoked!==false){return(_3580)(M);}else{M.c.push(new RT.CallFrame(_3580,M.p));
return(M.modules["whalesong/js.rkt"].label)(M);}};

var _2443=function(M){M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1816=function(M){M.c.push(new RT.CallFrame(_1827,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17867,477,19,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-8],4);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2420=function(M){M.v=M.e[M.e.length-5];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1470=function(M){M.v=(M.e[M.e.length-1]===1);
if(M.v===false){return(_1474)(M);}else{M.e.push(void(0));
M.c.push(new RT.CallFrame(_1477,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1969,86,28,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3179=function(M){M.v=false;
return(_3180)(M);};

var _3156=function(M){if(M.v===false){return(_3153)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35530,896,43,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3172,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35546,896,59,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][85];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1873;
M.e[M.e.length-6]=sym1871;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1876;
M.e[M.e.length-9]=sym1874;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3159=function(M){M.v=false;
return(_3156)(M);};

var _1423=function(M){M.v=(M.e[M.e.length-1]===1);
if(M.v===false){return(_1427)(M);}else{M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",642,34,9,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-7]=M.e[M.e.length-9][7][0][M.e[M.e.length-9][7][1]];
if (M.e[M.e.length-9][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-9][0];
M.e[M.e.length-2]="rect";
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.e[M.e.length-6]=M.e[M.e.length-13];
M.c.push(new RT.CallFrame(_1430,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",680,34,47,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-14]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3132=function(M){if(M.v===false){return(_3129)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35429,895,43,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3148,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35445,895,59,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][85];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=sym1871;
M.e[M.e.length-5]=sym1873;
M.e[M.e.length-6]=sym1872;
M.e[M.e.length-7]=sym1874;
M.e[M.e.length-8]=sym1876;
M.e[M.e.length-9]=sym1875;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3131=function(M){M.v=false;
return(_3132)(M);};

var _2512=function(M){M.c.push(new RT.CallFrame(_2517,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25492,708,45,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3109=function(M){M.v=false;
return(_3108)(M);};

var _931=function(M){if(--M.cbt<0){throw _931;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3093=function(M){M.v=false;
return(_3084)(M);};

var _3087=function(M){M.v=false;
return(_3084)(M);};

var _3069=function(M){M.v=false;
return(_3060)(M);};

var _3575=function(M){if(M.modules["whalesong/web-world.rkt"].isInvoked!==false){return(_3577)(M);}else{M.c.push(new RT.CallFrame(_3577,M.p));
return(M.modules["whalesong/web-world.rkt"].label)(M);}};

var _1832=function(M){M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.e[M.e.length-1]=RT.VOID;
return(_1811)(M);};

var _3558=function(M){M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_3560,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37961,938,8,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["string->list"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2410=function(M){M.v=M.e[M.e.length-2];
if(M.v===false){return(_2420)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2422)(M);}else{M.c.push(new RT.CallFrame(_2425,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23754,649,9,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-6][124][0][M.e[M.e.length-6][124][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][24];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}}};

var _2997=function(M){M.v=false;
return(_2996)(M);};

var _2941=function(M){M.v=false;
return(_2942)(M);};

var _3177=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3203)(M);}else{M.v=M.e[M.e.length-2];
if(M.v===false){return(_3205)(M);}else{M.v=M.e[M.e.length-4];
if(M.v===false){return(_3207)(M);}else{M.c.push(new RT.CallFrame(_3212,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35742,899,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};





var _3157=function(M){M.v=false;
return(_3156)(M);};

var _3667=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-7]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1877;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1878;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1877;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1878;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3669,M.p));
return((M.p).label)(M);};

var _3137=function(M){M.v=false;
return(_3132)(M);};

var _3105=function(M){M.v=M.e[M.e.length-2];
if(M.v===false){return(_3131)(M);}else{M.v=M.e[M.e.length-3];
if(M.v===false){return(_3133)(M);}else{M.v=M.e[M.e.length-4];
if(M.v===false){return(_3135)(M);}else{M.c.push(new RT.CallFrame(_3140,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35404,895,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3117=function(M){M.v=false;
return(_3108)(M);};

var _3107=function(M){M.v=false;
return(_3108)(M);};

var _927=function(M){if(--M.cbt<0){throw _927;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_931,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11439,319,73,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-23][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[87]); }
M.p=M.e[M.e.length-23][87];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _919=function(M){if(--M.cbt<0){throw _919;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="Nu udregnes de to sidste sider ved hjælp af to sinusrelationer.";
M.c.push(new RT.CallFrame(_945,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11577,321,14,142]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-25];
M.c.push(new RT.CallFrame(_947,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11632,322,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.p=M.e[M.e.length-23][88];
M.e[M.e.length-1]=M.e[M.e.length-31];
M.e[M.e.length-2]=M.e[M.e.length-27];
M.e[M.e.length-3]=M.e[M.e.length-30];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3085=function(M){M.v=false;
return(_3084)(M);};

var _3057=function(M){M.v=M.e[M.e.length-4];
if(M.v===false){return(_3083)(M);}else{M.v=M.e[M.e.length-2];
if(M.v===false){return(_3085)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3087)(M);}else{M.c.push(new RT.CallFrame(_3092,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35171,892,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _2457=function(M){M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24296,669,4,82]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="\\sqrt{~a^2 + ~a^2 - 2~a~a~a~a\\cos(~a)}";
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.e[M.e.length-7]=M.e[M.e.length-12];
M.e[M.e.length-8]=M.e[M.e.length-13];
M.a=8;
M.v=M.primitives["format"]._i(M);
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2456=function(M){M.e[M.e.length-1]="";
return(_2457)(M);};

var _2445=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.c.push(new RT.CallFrame(_2453,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24086,660,10,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-4][139]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[139]); }
M.p=M.e[M.e.length-4][139];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=false;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3563=function(M){M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3557=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_3558)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_3558)(M);}};

var _3005=function(M){M.v=false;
return(_3006)(M);};

var _2995=function(M){M.v=false;
return(_2996)(M);};

var _2978=function(M){if(M.v===false){return(_2975)(M);}else{M.v=true;
return(_2968)(M);}};

var _2942=function(M){if(M.v===false){return(_2939)(M);}else{M.v=true;
return(_2940)(M);}};

var _2921=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_2941)(M);}else{M.c.push(new RT.CallFrame(_2944,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34164,869,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2946,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34169,869,23,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["positive?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2905=function(M){M.c.push(new RT.CallFrame(_2924,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33949,864,7,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2926,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33952,864,10,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.e[M.e.length-1]=M.primitives["length"];
M.c.push(new RT.CallFrame(_2928,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33960,864,18,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-12][176][0][M.e[M.e.length-12][176][1]];
M.e[M.e.length-1]=_494_c;
M.v=RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-8],RT.makePair(M.e[M.e.length-9],RT.makePair(M.e[M.e.length-10],RT.makePair(M.e[M.e.length-11],RT.NULL))))));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3375=function(M){M.v=false;
return(_3372)(M);};

var _3880=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3329=function(M){M.v=false;
return(_3324)(M);};

var _3323=function(M){M.v=false;
return(_3324)(M);};

var _3305=function(M){M.v=false;
return(_3300)(M);};

var _3180=function(M){if(M.v===false){return(_3177)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35630,897,43,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3196,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35646,897,59,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][85];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};





var _3155=function(M){M.v=false;
return(_3156)(M);};


var _3135=function(M){M.v=false;
return(_3132)(M);};

var _3108=function(M){if(M.v===false){return(_3105)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35296,893,43,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3124,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35312,893,59,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][79];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=sym1873;
M.e[M.e.length-5]=sym1872;
M.e[M.e.length-6]=sym1871;
M.e[M.e.length-7]=sym1876;
M.e[M.e.length-8]=sym1875;
M.e[M.e.length-9]=sym1874;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _961=function(M){if(--M.cbt<0){throw _961;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _947=function(M){if(--M.cbt<0){throw _947;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_951,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11655,322,48,61]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-23][88];
M.c.push(new RT.CallFrame(_953,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11668,322,61,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-24][87];
M.c.push(new RT.CallFrame(_955,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11678,322,71,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-25][68];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _925=function(M){if(--M.cbt<0){throw _925;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_937,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11459,319,93,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-21][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-21].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-21][87];
M.c.push(new RT.CallFrame(_939,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11469,319,103,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-22][68];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _917=function(M){if(--M.cbt<0){throw _917;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_993,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11882,325,8,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-23][69];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-34];
M.e[M.e.length-3]=M.e[M.e.length-21];
M.e[M.e.length-4]=M.e[M.e.length-32];
M.e[M.e.length-5]=M.e[M.e.length-33];
M.e[M.e.length-6]=M.e[M.e.length-22];
M.e[M.e.length-7]=M.e[M.e.length-26];
M.e[M.e.length-8]=M.e[M.e.length-27];
M.e[M.e.length-9]=M.e[M.e.length-28];
M.e[M.e.length-10]=M.e[M.e.length-29];
M.e[M.e.length-11]=M.e[M.e.length-30];
M.e[M.e.length-12]=M.e[M.e.length-31];
M.a=12;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3083=function(M){M.v=false;
return(_3084)(M);};

var _3060=function(M){if(M.v===false){return(_3057)(M);}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35096,891,43,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3076,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35112,891,59,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][79];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3045=function(M){M.v=false;
return(_3036)(M);};

var _2460=function(M){M.e[M.e.length-1]="";
return(_2457)(M);};

var _2451=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+4),4);
M.p=(M.c[M.c.length-1].label.mvr||RT.si_context_expected_1);
M.c.pop();
return(M.p)(M);};

var _3569=function(M){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_3571)(M);}else{M.c.push(new RT.CallFrame(_3571,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _1824=function(M){M.v=M.e[M.e.length-2];
M.c.push(new RT.CallFrame(_1835,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17917,478,19,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-8],5);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2423=function(M){M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23807,650,7,90]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-8][131]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[131]); }
M.e[M.e.length-4]=M.e[M.e.length-8][131];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=false;
M.c.push(new RT.CallFrame(_2429,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23835,650,35,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-9][47]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[47]); }
M.p=M.e[M.e.length-9][47];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2993=function(M){M.v=M.e[M.e.length-4];
if(M.v===false){return(_3005)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3007)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3009)(M);}else{M.c.push(new RT.CallFrame(_3012,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34725,884,18,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3016,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34735,884,28,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_3018,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34740,884,33,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _2965=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_2995)(M);}else{M.v=M.e[M.e.length-2];
if(M.v===false){return(_2997)(M);}else{M.v=M.e[M.e.length-3];
return(_2996)(M);}}};

var _2983=function(M){M.v=false;
return(_2968)(M);};

var _2977=function(M){M.v=false;
return(_2978)(M);};

var _3771=function(M){M.e.splice(M.e.length-15,5);
M.e[M.e.length-11][130]=M.v;
M.e[M.e.length-11][131]=M.e[M.e.length-1];
M.e[M.e.length-11][132]=M.e[M.e.length-2];
M.e[M.e.length-11][133]=M.e[M.e.length-3];
M.e[M.e.length-11][134]=M.e[M.e.length-4];
M.e[M.e.length-11][135]=M.e[M.e.length-5];
M.e[M.e.length-11][136]=M.e[M.e.length-6];
M.e[M.e.length-11][137]=M.e[M.e.length-7];
M.e[M.e.length-11][138]=M.e[M.e.length-8];
M.e[M.e.length-11][139]=M.e[M.e.length-9];
M.e[M.e.length-11][140]=M.e[M.e.length-10];
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2509=function(M){if(M.v===false){return(_2506)(M);}else{M.e[M.e.length-1]="\\cdot";
return(_2507)(M);}};

var _3449=function(M){M.v=false;
return(_3444)(M);};

var _3445=function(M){M.v=false;
return(_3444)(M);};

var _3373=function(M){M.v=false;
return(_3372)(M);};

var _3857=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3349=function(M){M.v=false;
return(_3348)(M);};

var _3327=function(M){M.v=false;
return(_3324)(M);};

var _3297=function(M){M.v=M.e[M.e.length-2];
if(M.v===false){return(_3323)(M);}else{M.v=M.e[M.e.length-3];
if(M.v===false){return(_3325)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3327)(M);}else{M.c.push(new RT.CallFrame(_3332,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36297,904,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-5]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3309=function(M){M.v=false;
return(_3300)(M);};

var _3273=function(M){M.v=M.e[M.e.length-2];
if(M.v===false){return(_3299)(M);}else{M.v=M.e[M.e.length-3];
if(M.v===false){return(_3301)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3303)(M);}else{M.c.push(new RT.CallFrame(_3308,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36186,903,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _1481=function(M){M.v=RT.VOID;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _426=function(M){if(--M.cbt<0){throw _426;}
//"lambda body for #(struct:LamPositionalName raphael-show root/triangle-solver.rkt 76 0 1733 50)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1760,77,2,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][7][0][M.e[M.e.length-3][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="show";
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _3129=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3155)(M);}else{M.v=M.e[M.e.length-3];
if(M.v===false){return(_3157)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3159)(M);}else{M.c.push(new RT.CallFrame(_3164,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35505,896,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};


var _3133=function(M){M.v=false;
return(_3132)(M);};

var _977=function(M){if(--M.cbt<0){throw _977;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-17];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _955=function(M){if(--M.cbt<0){throw _955;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _945=function(M){if(--M.cbt<0){throw _945;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_971,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11734,323,14,138]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-23];
M.c.push(new RT.CallFrame(_973,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11789,324,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.p=M.e[M.e.length-23][88];
M.e[M.e.length-1]=M.e[M.e.length-29];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-31];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _921=function(M){if(--M.cbt<0){throw _921;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_925,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11409,319,43,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-22][86]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[86]); }
M.e[M.e.length-2]=M.e[M.e.length-22][86];
M.c.push(new RT.CallFrame(_927,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11420,319,54,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-23][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[87]); }
M.p=M.e[M.e.length-23][87];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _915=function(M){if(--M.cbt<0){throw _915;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-20,15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _907=function(M){if(--M.cbt<0){throw _907;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_911,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11053,311,45,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][61];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=M.e[M.e.length-23];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _891=function(M){if(--M.cbt<0){throw _891;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_896,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10969,309,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3065=function(M){M.v=false;
return(_3060)(M);};

var _3036=function(M){if(M.v===false){return(_3033)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34961,889,43,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3052,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34977,889,59,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][76];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3041=function(M){M.v=false;
return(_3036)(M);};

var _1859=function(M){M.v=RT.VOID;
return(_1860)(M);};

var _3014=function(M){M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3013=function(M){M.e[M.e.length-1]=false;
return(_3014)(M);};

var _3009=function(M){M.v=false;
return(_3006)(M);};

var _2996=function(M){if(M.v===false){return(_2993)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3000,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34542,880,7,153]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][123];
M.e[M.e.length-1]="Du har indtastet tre vinkler.";
M.e[M.e.length-2]="Sidelængderne kan ikke udregnes.";
M.e[M.e.length-3]="Indtast mindst en side.";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _748=function(M){if(--M.cbt<0){throw _748;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-52];
M.c.push(new RT.CallFrame(_756,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14018,361,61,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-43][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-43].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-43][87];
M.c.push(new RT.CallFrame(_758,M.p));
M.v=M.e[M.e.length-43][2][0][M.e[M.e.length-43][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14028,361,71,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-44][68];
M.e[M.e.length-1]=M.e[M.e.length-43];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2975=function(M){M.v=M.e[M.e.length-6];
if(M.v===false){return(_2983)(M);}else{M.c.push(new RT.CallFrame(_2986,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34426,876,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2988,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34431,876,23,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["positive?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _722=function(M){if(--M.cbt<0){throw _722;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2969=function(M){M.v=false;
return(_2970)(M);};

var _2364=function(M){M.v=RT.VOID;
M.a=1;
RT.raiseContextExpectedValuesError(M,2);
return(_2360)(M);};

var _3453=function(M){M.v=false;
return(_3444)(M);};

var _3447=function(M){M.v=false;
return(_3444)(M);};

var _3443=function(M){M.v=false;
return(_3444)(M);};

var _3420=function(M){if(M.v===false){return(_3417)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36845,910,43,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3436,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36861,910,59,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][90];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3371=function(M){M.v=false;
return(_3372)(M);};

var _3357=function(M){M.v=false;
return(_3348)(M);};

var _3347=function(M){M.v=false;
return(_3348)(M);};

var _3333=function(M){M.v=false;
return(_3324)(M);};

var _3325=function(M){M.v=false;
return(_3324)(M);};

var _3300=function(M){if(M.v===false){return(_3297)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36211,903,43,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3316,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36227,903,59,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][89];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=sym1873;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1872;
M.e[M.e.length-7]=sym1876;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1875;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _1564=function(M){M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3745,133,4,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][54];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.CallFrame(_1567,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3761,133,20,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["format"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3276=function(M){if(M.v===false){return(_3273)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36100,902,43,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3292,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36116,902,59,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][89];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1873;
M.e[M.e.length-6]=sym1871;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1876;
M.e[M.e.length-9]=sym1874;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3774=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1879;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1861;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym1880;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=sym1881;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-7]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1879;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-8]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1861;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-9]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym1880;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-10]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=sym1881;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3776,M.p));
return((M.p).label)(M);};

var _3209=function(M){M.v=false;
return(_3204)(M);};

var _1474=function(M){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){return(_1481)(M);}else{M.e.push(void(0));
M.c.push(new RT.CallFrame(_1484,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2055,88,19,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _425=function(M){if(--M.cbt<0){throw _425;}
//"lambda body for #(struct:LamPositionalName raphael-hide root/triangle-solver.rkt 73 0 1681 50)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1708,74,2,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][7][0][M.e[M.e.length-3][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="hide";
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _422=function(M){if(--M.cbt<0){throw _422;}
//"lambda body for #(struct:LamPositionalName raphael-line root/triangle-solver.rkt 64 0 1482 88)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1519,65,2,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-2][18];
M.c.push(new RT.CallFrame(_1452,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1533,65,16,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="M~a ~aL~a ~a";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _419=function(M){if(--M.cbt<0){throw _419;}
//"lambda body for #(struct:LamPositionalName raphael-print root/triangle-solver.rkt 55 0 1195 90)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1251,56,2,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-6][7][0][M.e[M.e.length-6][7][1]];
if (M.e[M.e.length-6][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _482=function(M){if(--M.cbt<0){throw _482;}
//"lambda body for #(struct:LamPositionalName heights root/triangle-solver.rkt 726 0 26117 523)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26167,727,2,472]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_2568,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26173,727,8,149]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$h_~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-16];
M.c.push(new RT.CallFrame(_2570,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26224,728,19,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][112][0][M.e[M.e.length-9][112][1]]);
M.c.push(new RT.CallFrame(_2572,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26231,728,26,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][161];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.e[M.e.length-2]=M.e[M.e.length-23];
M.e[M.e.length-3]=M.e[M.e.length-25];
M.e[M.e.length-4]=M.e[M.e.length-26];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3677=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-13]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1882;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1883;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym1884;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=sym1885;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-7]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=4;
M.e[M.e.length-3]=sym1886;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-8]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1882;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-9]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1883;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-10]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym1884;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-11]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=sym1885;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-12]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=4;
M.e[M.e.length-3]=sym1886;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-13];
M.e[M.e.length-13]=M.v;
M.a=13;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3679,M.p));
return((M.p).label)(M);};


var _993=function(M){if(--M.cbt<0){throw _993;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _973=function(M){if(--M.cbt<0){throw _973;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_977,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11812,324,48,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-23][88];
M.c.push(new RT.CallFrame(_979,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11825,324,61,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.p=M.e[M.e.length-24][87];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _953=function(M){if(--M.cbt<0){throw _953;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-34];
M.c.push(new RT.CallFrame(_961,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11693,322,86,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-24][87];
M.c.push(new RT.CallFrame(_963,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11703,322,96,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-25][68];
M.e[M.e.length-1]=M.e[M.e.length-35];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _939=function(M){if(--M.cbt<0){throw _939;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _911=function(M){if(--M.cbt<0){throw _911;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _903=function(M){if(--M.cbt<0){throw _903;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_907,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11037,311,29,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _886=function(M){if(--M.cbt<0){throw _886;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_891,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10938,308,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][65];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2470=function(M){M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24573,678,4,99]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="\\cos^{-1}\\left(\\frac{~a^2+~a^2-~a^2}{2~a~a~a~a}\\right)";
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-13];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.e[M.e.length-6]=M.e[M.e.length-11];
M.e[M.e.length-7]=M.e[M.e.length-9];
M.e[M.e.length-8]=M.e[M.e.length-12];
M.a=8;
M.v=M.primitives["format"]._i(M);
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _847=function(M){if(--M.cbt<0){throw _847;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_850,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15154,381,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_1}";
M.e[M.e.length-2]=M.e[M.e.length-30];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3039=function(M){M.v=false;
return(_3036)(M);};

var _3572=function(M){if(M.modules["whalesong/resource.rkt"].isInvoked!==false){return(_3574)(M);}else{M.c.push(new RT.CallFrame(_3574,M.p));
return(M.modules["whalesong/resource.rkt"].label)(M);}};

var _3019=function(M){M.e[M.e.length-1]=false;
return(_3014)(M);};

var _792=function(M){if(--M.cbt<0){throw _792;}
M.e[M.e.length-6]=M.v;
M.c.push(new RT.CallFrame(_800,M.p));
M.v=M.e[M.e.length-41][2][0][M.e[M.e.length-41][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14591,369,74,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-42][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-42][87];
M.c.push(new RT.CallFrame(_802,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14601,369,84,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-43][68];
M.e[M.e.length-1]=M.e[M.e.length-39];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3007=function(M){M.v=false;
return(_3006)(M);};

var _766=function(M){if(--M.cbt<0){throw _766;}
M.e[M.e.length-12]=M.v;
M.c.push(new RT.CallFrame(_768,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14211,365,14,137]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a_2 = 180^{\\circ}-~a_2 = 180^{\\circ}-~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-46];
M.e[M.e.length-3]=M.e[M.e.length-46];
M.c.push(new RT.CallFrame(_770,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14300,366,28,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-40][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-40].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-40][87];
M.c.push(new RT.CallFrame(_772,M.p));
M.v=M.e[M.e.length-40][2][0][M.e[M.e.length-40][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14310,366,38,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-41][68];
M.e[M.e.length-1]=M.e[M.e.length-40];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _746=function(M){if(--M.cbt<0){throw _746;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-34];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _738=function(M){if(--M.cbt<0){throw _738;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_746,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13979,361,22,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-42][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-42][88];
M.c.push(new RT.CallFrame(_748,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13992,361,35,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-43][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-43].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-43][87];
M.c.push(new RT.CallFrame(_750,M.p));
M.v=M.e[M.e.length-43][2][0][M.e[M.e.length-43][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14002,361,45,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-44][68];
M.e[M.e.length-1]=M.e[M.e.length-41];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _720=function(M){if(--M.cbt<0){throw _720;}
M.e[M.e.length-6]=M.v;
M.c.push(new RT.CallFrame(_728,M.p));
M.v=M.e[M.e.length-41][2][0][M.e[M.e.length-41][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13738,356,74,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-42][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-42][87];
M.c.push(new RT.CallFrame(_730,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13748,356,84,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-43][68];
M.e[M.e.length-1]=M.e[M.e.length-40];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2937=function(M){M.v=M.e[M.e.length-4];
if(M.v===false){return(_2969)(M);}else{M.c.push(new RT.CallFrame(_2972,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34347,874,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2974,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34352,874,23,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["positive?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2359=function(M){M.v=(M.e[M.e.length-13]===sym1887);
if(M.v===false){return(_2364)(M);}else{M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]="#3294D2";
M.e[M.e.length-2]="#BBE1EC";
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2367,M.p));
return((M.p).label)(M);}};

var _3441=function(M){M.v=M.e[M.e.length-3];
if(M.v===false){return(_3465)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3467)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3471)(M);}else{M.c.push(new RT.CallFrame(_3476,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37070,912,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _645=function(M){if(--M.cbt<0){throw _645;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3417=function(M){M.v=M.e[M.e.length-2];
if(M.v===false){return(_3443)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3445)(M);}else{M.v=M.e[M.e.length-4];
if(M.v===false){return(_3447)(M);}else{M.c.push(new RT.CallFrame(_3452,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36945,911,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3429=function(M){M.v=false;
return(_3420)(M);};

var _3381=function(M){M.v=false;
return(_3372)(M);};

var _522=function(M){if(--M.cbt<0){throw _522;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-4]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-5]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e[M.e.length-3]=RT.makePair(RT.makePair(sym1856,RT.makePair(RT.makePair(sym1855,RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.NULL)),RT.makePair(RT.makePair(sym1855,RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.NULL)),RT.makePair(RT.makePair(sym1855,RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.NULL)),RT.NULL)))),RT.NULL);
M.a=3;
M.v=M.primitives["list*"]._i(M);
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3345=function(M){M.v=M.e[M.e.length-2];
if(M.v===false){return(_3371)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3373)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3375)(M);}else{M.c.push(new RT.CallFrame(_3380,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36569,907,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3353=function(M){M.v=false;
return(_3348)(M);};

var _3321=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3347)(M);}else{M.v=M.e[M.e.length-4];
if(M.v===false){return(_3349)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3351)(M);}else{M.c.push(new RT.CallFrame(_3356,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36444,906,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3324=function(M){if(M.v===false){return(_3321)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36322,904,43,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3340,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36338,904,59,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][89];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1871;
M.e[M.e.length-5]=sym1873;
M.e[M.e.length-6]=sym1872;
M.e[M.e.length-7]=sym1874;
M.e[M.e.length-8]=sym1876;
M.e[M.e.length-9]=sym1875;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};




var _3303=function(M){M.v=false;
return(_3300)(M);};


var _1546=function(M){M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3367,121,17,89]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1868;
M.e[M.e.length-2]="wrong argument type: string or list-of-two-element-lists expected";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1525=function(M){M.e[M.e.length-1]=M.e[M.e.length-2];
return(_1526)(M);};

var _3213=function(M){M.v=false;
return(_3204)(M);};

var _3207=function(M){M.v=false;
return(_3204)(M);};


var _424=function(M){if(--M.cbt<0){throw _424;}
//"lambda body for #(struct:LamPositionalName raphael-node root/triangle-solver.rkt 70 0 1629 50)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1656,71,2,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][7][0][M.e[M.e.length-3][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="node";
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _421=function(M){if(--M.cbt<0){throw _421;}
//"lambda body for #(struct:LamPositionalName raphael-path root/triangle-solver.rkt 61 0 1388 92)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1449,62,2,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-4][7][0][M.e[M.e.length-4][7][1]];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.e[M.e.length-2]="path";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _418=function(M){if(--M.cbt<0){throw _418;}
//"lambda body for #(struct:LamPositionalName raphael-text root/triangle-solver.rkt 52 0 1125 68)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1158,53,2,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-6][7][0][M.e[M.e.length-6][7][1]];
if (M.e[M.e.length-6][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.e[M.e.length-2]="text";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _481=function(M){if(--M.cbt<0){throw _481;}
//"lambda body for #(struct:LamPositionalName calculate-height root/triangle-solver.rkt 723 0 26068 47)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26101,724,2,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.c.push(new RT.CallFrame(_2566,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26106,724,7,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _412=function(M){if(--M.cbt<0){throw _412;}
//"lambda body for #(struct:LamPositionalName raphael-rect root/triangle-solver.rkt 31 0 520 228)"

M.unspliceRestFromStack(4,(M.a-4));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1419,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",570,32,8,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _985=function(M){if(--M.cbt<0){throw _985;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _971=function(M){if(--M.cbt<0){throw _971;}
M.e[M.e.length-4]=M.v;
M.v=RT.makePair("Der kendes to vinkler og en ikke-fælles side i trekanten.",RT.makePair("Vinkelsumsformlen bruges til at udregne den sidste vinkel i trekanten.",RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.NULL))))));
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _951=function(M){if(--M.cbt<0){throw _951;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-18];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _937=function(M){if(--M.cbt<0){throw _937;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _901=function(M){if(--M.cbt<0){throw _901;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-20],RT.makePair(M.e[M.e.length-7],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-18],RT.makePair(M.e[M.e.length-19],RT.makePair(M.e[M.e.length-8],RT.NULL)));
M.e[M.e.length-4]=RT.makePair(M.e[M.e.length-12],RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-15],RT.makePair(M.e[M.e.length-16],RT.makePair(M.e[M.e.length-17],RT.NULL))))));
M.c.push(new RT.CallFrame(_915,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11151,315,7,779]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["append"];
M.c.push(new RT.CallFrame(_917,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11167,316,8,706]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_919,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11335,318,14,147]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-28];
M.c.push(new RT.CallFrame(_921,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11391,319,25,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-22][86]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[86]); }
M.p=M.e[M.e.length-22][86];
M.e[M.e.length-1]=M.e[M.e.length-28];
M.e[M.e.length-2]=M.e[M.e.length-29];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _878=function(M){if(--M.cbt<0){throw _878;}
M.e.pop();
M.e.pop();
M.e.pop();
M.e.pop();
M.e.pop();
M.e.pop();
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2473=function(M){M.e[M.e.length-1]="";
return(_2470)(M);};

var _844=function(M){if(--M.cbt<0){throw _844;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_847,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15114,380,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_1}";
M.e[M.e.length-2]=M.e[M.e.length-28];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3037=function(M){M.v=false;
return(_3036)(M);};

var _3035=function(M){M.v=false;
return(_3036)(M);};

var _808=function(M){if(--M.cbt<0){throw _808;}
M.e[M.e.length-17]=M.v;
M.v=RT.makePair("Der kendes to sider og en ikke-mellemliggende vinkel i trekanten. Dermed er vi i det dobbelttydige tilfælde.",RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.makePair(M.e[M.e.length-5],RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-8],RT.makePair(M.e[M.e.length-9],RT.makePair(M.e[M.e.length-10],RT.makePair(M.e[M.e.length-11],RT.makePair(M.e[M.e.length-12],RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-15],RT.makePair(M.e[M.e.length-16],RT.makePair(M.e[M.e.length-17],RT.NULL))))))))))))))))));
M.e.length-=17;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _788=function(M){if(--M.cbt<0){throw _788;}
M.e[M.e.length-5]=M.v;
M.c.push(new RT.CallFrame(_792,M.p));
M.v=M.e[M.e.length-41][2][0][M.e[M.e.length-41][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14567,369,50,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-42][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-42][87];
M.c.push(new RT.CallFrame(_794,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14577,369,60,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-43][68];
M.e[M.e.length-1]=M.e[M.e.length-41];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _778=function(M){if(--M.cbt<0){throw _778;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _758=function(M){if(--M.cbt<0){throw _758;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _742=function(M){if(--M.cbt<0){throw _742;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _736=function(M){if(--M.cbt<0){throw _736;}
M.e[M.e.length-10]=M.v;
M.e[M.e.length-11]=RT.makePair(sym1863,RT.makePair("Resultater for anden mulighed",RT.NULL));
M.c.push(new RT.CallFrame(_766,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14135,364,14,61]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="Vi ser på tilfældet, hvor vinkel $~a$ er stump.";
M.e[M.e.length-2]=M.e[M.e.length-43];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _716=function(M){if(--M.cbt<0){throw _716;}
M.e[M.e.length-5]=M.v;
M.c.push(new RT.CallFrame(_720,M.p));
M.v=M.e[M.e.length-41][2][0][M.e[M.e.length-41][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13714,356,50,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-42][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-42][87];
M.c.push(new RT.CallFrame(_722,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13724,356,60,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-43][68];
M.e[M.e.length-1]=M.e[M.e.length-42];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _500=function(M){M.c.push(new RT.PromptFrame(_502,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["root/triangle-solver.rkt"]=new RT.ModuleRecord("triangle-solver",_3568);
return(_3567)(M);};

var _3469=function(M){M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2949=function(M){M.v=false;
return(_2950)(M);};

var _3444=function(M){if(M.v===false){return(_3441)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36970,911,43,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3460,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36986,911,59,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][90];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=sym1871;
M.e[M.e.length-5]=sym1873;
M.e[M.e.length-6]=sym1872;
M.e[M.e.length-7]=sym1874;
M.e[M.e.length-8]=sym1876;
M.e[M.e.length-9]=sym1875;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _643=function(M){if(--M.cbt<0){throw _643;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _636=function(M){if(--M.cbt<0){throw _636;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _627=function(M){if(--M.cbt<0){throw _627;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_630,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12302,335,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_632,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12305,335,18,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.c.push(new RT.CallFrame(_634,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12310,335,23,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3369=function(M){M.v=M.e[M.e.length-3];
if(M.v===false){return(_3395)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3397)(M);}else{M.v=M.e[M.e.length-4];
if(M.v===false){return(_3399)(M);}else{M.c.push(new RT.CallFrame(_3404,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36694,908,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3377=function(M){M.v=false;
return(_3372)(M);};

var _518=function(M){if(--M.cbt<0){throw _518;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair("eller",RT.NULL));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_522,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",31929,827,72,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][155];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-18];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3348=function(M){if(M.v===false){return(_3345)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36469,906,43,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3364,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36485,906,59,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][90];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1873;
M.e[M.e.length-6]=sym1871;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1876;
M.e[M.e.length-9]=sym1874;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3351=function(M){M.v=false;
return(_3348)(M);};






var _3301=function(M){M.v=false;
return(_3300)(M);};


var _3281=function(M){M.v=false;
return(_3276)(M);};

var _1536=function(M){M.c.push(new RT.CallFrame(_1549,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3136,116,12,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1551,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3143,116,19,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1526=function(M){M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2927,111,11,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-9][7][0][M.e[M.e.length-9][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]="attr";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-5];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1517=function(M){M.v=(M.e[M.e.length-1]===1);
if(M.v===false){return(_1534)(M);}else{M.c.push(new RT.CallFrame(_1539,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3010,113,12,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1541,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3019,113,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1502=function(M){M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2528,102,10,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1888;
M.e[M.e.length-2]="wrong number of arguments";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3205=function(M){M.v=false;
return(_3204)(M);};

var _428=function(M){if(--M.cbt<0){throw _428;}
//"lambda body for #(struct:LamPositionalName raphael-rotate root/triangle-solver.rkt 83 0 1842 342)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1466,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1888,84,8,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3843=function(M){if(--M.cbt<0){throw _3843;}
M.c.push(new RT.PromptFrame(_3845,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.c.push(new RT.CallFrame(_3847,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",38007,940,23,58]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-2][129];
M.c.push(new RT.CallFrame(_3849,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",38023,940,39,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][76];
M.e[M.e.length-1]=60;
M.e[M.e.length-2]=40;
M.e[M.e.length-3]=90;
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _420=function(M){if(--M.cbt<0){throw _420;}
//"lambda body for #(struct:LamPositionalName raphael-get-font root/triangle-solver.rkt 58 0 1287 99)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1349,59,2,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-4][7][0][M.e[M.e.length-4][7][1]];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.e[M.e.length-2]="getFont";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _417=function(M){if(--M.cbt<0){throw _417;}
//"lambda body for #(struct:LamPositionalName raphael-push root/triangle-solver.rkt 49 0 1032 91)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1069,50,2,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][14][0][M.e[M.e.length-3][14][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-3][188];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _415=function(M){if(--M.cbt<0){throw _415;}
//"lambda body for #(struct:LamPositionalName raphael-image root/triangle-solver.rkt 43 0 900 78)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",942,44,2,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-7][7][0][M.e[M.e.length-7][7][1]];
if (M.e[M.e.length-7][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-7].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-7][0];
M.e[M.e.length-2]="image";
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _411=function(M){if(--M.cbt<0){throw _411;}
//"lambda body for #(struct:LamPositionalName raphael-init root/triangle-solver.rkt 25 0 372 146)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_1413,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",433,27,8,83]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1][3][0][M.e[M.e.length-1][3][1]]);
M.c.push(new RT.CallFrame(_1415,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",452,28,9,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="Raphael(~s, ~a, ~a)";
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.a=4;
M.v=M.primitives["format"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _983=function(M){if(--M.cbt<0){throw _983;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _963=function(M){if(--M.cbt<0){throw _963;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};





var _896=function(M){if(--M.cbt<0){throw _896;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10993,310,6,938]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-9][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[41]); }
M.e[M.e.length-5]=M.e[M.e.length-9][41];
M.c.push(new RT.CallFrame(_901,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11015,311,7,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_903,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11021,311,13,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _875=function(M){if(--M.cbt<0){throw _875;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_878,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15568,391,10,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-35][69];
M.e[M.e.length-1]=M.e[M.e.length-44];
M.e[M.e.length-2]=M.e[M.e.length-29];
M.e[M.e.length-3]=M.e[M.e.length-45];
M.e[M.e.length-4]=M.e[M.e.length-43];
M.e[M.e.length-5]=M.e[M.e.length-31];
M.e[M.e.length-6]=M.e[M.e.length-33];
M.e[M.e.length-7]=M.e[M.e.length-18];
M.e[M.e.length-8]=M.e[M.e.length-17];
M.e[M.e.length-9]=M.e[M.e.length-16];
M.e[M.e.length-10]=M.e[M.e.length-15];
M.e[M.e.length-11]=M.e[M.e.length-14];
M.e[M.e.length-12]=M.e[M.e.length-13];
M.a=12;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3063=function(M){M.v=false;
return(_3060)(M);};

var _841=function(M){if(--M.cbt<0){throw _841;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_844,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15074,379,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_1}";
M.e[M.e.length-2]=M.e[M.e.length-26];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _830=function(M){if(--M.cbt<0){throw _830;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3003=function(M){M.v=M.e[M.e.length-4];
if(M.v===false){return(_3035)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3037)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3039)(M);}else{M.c.push(new RT.CallFrame(_3044,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34936,889,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-1]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _802=function(M){if(--M.cbt<0){throw _802;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _786=function(M){if(--M.cbt<0){throw _786;}
M.e[M.e.length-15]=M.v;
M.e[M.e.length-16]="Nu udregnes den sidste side.";
M.c.push(new RT.CallFrame(_808,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14689,371,14,246]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a_2 = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-42];
M.c.push(new RT.CallFrame(_810,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14769,373,22,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-42][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-42][88];
M.c.push(new RT.CallFrame(_812,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14782,373,35,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a_2";
M.e[M.e.length-2]=M.e[M.e.length-50];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _772=function(M){if(--M.cbt<0){throw _772;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _756=function(M){if(--M.cbt<0){throw _756;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _740=function(M){if(--M.cbt<0){throw _740;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-46];
M.c.push(new RT.CallFrame(_742,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13937,360,57,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a_1";
M.e[M.e.length-2]=M.e[M.e.length-51];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _730=function(M){if(--M.cbt<0){throw _730;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _714=function(M){if(--M.cbt<0){throw _714;}
M.e[M.e.length-8]=M.v;
M.e[M.e.length-9]="Nu udregnes den sidste side.";
M.c.push(new RT.CallFrame(_736,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13822,358,14,246]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a_1 = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-42];
M.c.push(new RT.CallFrame(_738,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13902,360,22,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-42][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-42][88];
M.c.push(new RT.CallFrame(_740,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13915,360,35,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a_1";
M.e[M.e.length-2]=M.e[M.e.length-50];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2967=function(M){M.v=M.e[M.e.length-5];
if(M.v===false){return(_2977)(M);}else{M.c.push(new RT.CallFrame(_2980,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34387,875,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2982,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34392,875,23,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["positive?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3472=function(M){if(M.v===false){return(_3469)(M);}else{M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37095,912,43,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3484,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37111,912,59,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][90];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=sym1873;
M.e[M.e.length-5]=sym1872;
M.e[M.e.length-6]=sym1871;
M.e[M.e.length-7]=sym1876;
M.e[M.e.length-8]=sym1875;
M.e[M.e.length-9]=sym1874;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3473=function(M){M.v=M.e[M.e.length-4];
M.v=false;
return(_3472)(M);};

var _2939=function(M){M.v=M.e[M.e.length-2];
if(M.v===false){return(_2949)(M);}else{M.c.push(new RT.CallFrame(_2952,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34204,870,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2954,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34209,870,23,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["positive?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _658=function(M){if(--M.cbt<0){throw _658;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _641=function(M){if(--M.cbt<0){throw _641;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_645,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12364,336,33,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _634=function(M){if(--M.cbt<0){throw _634;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _624=function(M){if(--M.cbt<0){throw _624;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_627,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12274,334,15,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, RT.makeFloat(3.141592653589793),M.e[M.e.length-13],M.e[M.e.length-3]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1652=function(M){M.e[M.e.length-2]=false;
return(_1653)(M);};

var _3372=function(M){if(M.v===false){return(_3369)(M);}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36594,907,43,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3388,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36610,907,59,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][90];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=sym1871;
M.e[M.e.length-5]=sym1872;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1874;
M.e[M.e.length-8]=sym1875;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _542=function(M){if(--M.cbt<0){throw _542;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _514=function(M){if(--M.cbt<0){throw _514;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-4]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-4]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_518,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",31749,825,72,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][154];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-18];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _504=function(M){if(--M.cbt<0){throw _504;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["string->number"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _438=function(M){if(--M.cbt<0){throw _438;}
//"lambda body for #(struct:LamPositionalName sin-rel root/triangle-solver.rkt 163 0 4598 52)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4624,164,2,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1611,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4627,164,5,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.c.push(new RT.CallFrame(_1613,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4632,164,10,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _490=function(M){if(--M.cbt<0){throw _490;}
//"lambda body for #(struct:LamPositionalName make-initial-view root/triangle-solver.rkt 770 0 28082 5459)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2730,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28125,771,15,4818]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2][167][0][M.e[M.e.length-2][167][1]]);
M.c.push(new RT.CallFrame(_2732,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28149,772,16,4793]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][146][0][M.e[M.e.length-3][146][1]]);
M.e.push(void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1889;
M.e[M.e.length-2]=RT.makePair(sym1890,RT.makePair("Trekantsberegner",RT.NULL));
M.e[M.e.length-3]=RT.makePair(sym1858,RT.makePair("Jens Axel Søgaard, 2012",RT.NULL));
M.e[M.e.length-4]=RT.makePair(sym1863,RT.makePair("Indtast 3 sider/vinkler",RT.NULL));
M.e[M.e.length-5]=RT.makePair(sym1857,RT.makePair(RT.makePair(sym1856,RT.makePair(RT.makePair(sym1855,RT.makePair(RT.makePair(sym1891,RT.makePair(RT.makePair(sym1858,RT.makePair("Vinkler",RT.NULL)),RT.makePair(RT.makePair(sym1891,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1893,RT.makePair("angles",RT.NULL)),RT.makePair(RT.makePair(sym1894,RT.makePair("display: inline",RT.NULL)),RT.NULL))),RT.makePair(RT.makePair(sym1891,RT.makePair("$A=$",RT.makePair(RT.makePair(sym1895,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1896,RT.makePair("text",RT.NULL)),RT.makePair(RT.makePair(sym1893,RT.makePair("angleA",RT.NULL)),RT.NULL))),RT.NULL)),RT.NULL))),RT.makePair(RT.makePair(sym1891,RT.makePair("$B=$",RT.makePair(RT.makePair(sym1895,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1896,RT.makePair("text",RT.NULL)),RT.makePair(RT.makePair(sym1893,RT.makePair("angleB",RT.NULL)),RT.NULL))),RT.NULL)),RT.NULL))),RT.makePair(RT.makePair(sym1891,RT.makePair("$C=$",RT.makePair(RT.makePair(sym1895,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1896,RT.makePair("text",RT.NULL)),RT.makePair(RT.makePair(sym1893,RT.makePair("angleC",RT.NULL)),RT.NULL))),RT.NULL)),RT.NULL))),RT.NULL))))),RT.makePair(RT.makePair(sym1858,RT.makePair("Sider",RT.NULL)),RT.makePair(RT.makePair(sym1891,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1893,RT.makePair("sides",RT.NULL)),RT.makePair(RT.makePair(sym1894,RT.makePair("display: inline",RT.NULL)),RT.NULL))),RT.makePair(RT.makePair(sym1891,RT.makePair("$a=$",RT.makePair(RT.makePair(sym1895,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1896,RT.makePair("text",RT.NULL)),RT.makePair(RT.makePair(sym1893,RT.makePair("sideA",RT.NULL)),RT.NULL))),RT.NULL)),RT.NULL))),RT.makePair(RT.makePair(sym1891,RT.makePair("$b=$",RT.makePair(RT.makePair(sym1895,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1896,RT.makePair("text",RT.NULL)),RT.makePair(RT.makePair(sym1893,RT.makePair("sideB",RT.NULL)),RT.NULL))),RT.NULL)),RT.NULL))),RT.makePair(RT.makePair(sym1891,RT.makePair("$c=$",RT.makePair(RT.makePair(sym1895,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1896,RT.makePair("text",RT.NULL)),RT.makePair(RT.makePair(sym1893,RT.makePair("sideC",RT.NULL)),RT.NULL))),RT.NULL)),RT.NULL))),RT.NULL))))),RT.makePair(RT.makePair(sym1891,RT.makePair(RT.makePair(sym1895,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1896,RT.makePair("button",RT.NULL)),RT.makePair(RT.makePair(sym1893,RT.makePair("calculate",RT.NULL)),RT.makePair(RT.makePair(sym1897,RT.makePair("Beregn",RT.NULL)),RT.NULL)))),RT.NULL)),RT.NULL)),RT.NULL)))))),RT.NULL)),RT.makePair(RT.makePair(sym1855,RT.makePair("",RT.NULL)),RT.makePair(RT.makePair(sym1855,RT.makePair(RT.makePair(sym1891,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1893,RT.makePair("raphael_model",RT.NULL)),RT.NULL)),RT.NULL)),RT.NULL)),RT.makePair(RT.makePair(sym1855,RT.makePair(RT.makePair(sym1891,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1893,RT.makePair("raphael_result",RT.NULL)),RT.NULL)),RT.NULL)),RT.NULL)),RT.NULL))))),RT.NULL));
M.e[M.e.length-6]=RT.makePair(sym1863,RT.makePair("Resultater",RT.NULL));
M.e[M.e.length-7]=RT.makePair(sym1891,RT.makePair(RT.makePair(sym1892,RT.makePair(RT.makePair(sym1893,RT.makePair("result",RT.NULL)),RT.NULL)),RT.makePair("Ingen resultater endnu. Indtast 3 stykker og klik beregn.",RT.NULL)));
M.e[M.e.length-8]=RT.makePair(sym1862,RT.NULL);
M.e[M.e.length-9]=RT.makePair(sym1863,RT.makePair("Formelsamling",RT.NULL));
M.e[M.e.length-10]=RT.makePair(sym1858,RT.makePair("Cosinusrelationer",RT.NULL));
M.e.push(void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2734,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",29814,801,30,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-34][150];
M.e[M.e.length-1]="a";
M.e[M.e.length-2]="b";
M.e[M.e.length-3]="c";
M.e[M.e.length-4]="A";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3299=function(M){M.v=false;
return(_3300)(M);};


var _3285=function(M){M.v=false;
return(_3276)(M);};

var _3279=function(M){M.v=false;
return(_3276)(M);};

var _3257=function(M){M.v=false;
return(_3252)(M);};

var _2082=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1498=function(M){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){return(_1502)(M);}else{M.e.push(void(0));
M.c.push(new RT.CallFrame(_1505,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2401,99,24,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3227=function(M){M.v=false;
return(_3228)(M);};


var _3203=function(M){M.v=false;
return(_3204)(M);};

var _427=function(M){if(--M.cbt<0){throw _427;}
//"lambda body for #(struct:LamPositionalName raphael-remove root/triangle-solver.rkt 80 0 1786 54)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1815,81,2,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][7][0][M.e[M.e.length-3][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="remove";
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3841=function(M){if(--M.cbt<0){throw _3841;}
M.c.push(new RT.PromptFrame(_3843,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_498,3,[M.e[M.e.length-1]],"string-replace-char");
M.e[M.e.length-1][174]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3835=function(M){if(--M.cbt<0){throw _3835;}
M.c.push(new RT.PromptFrame(_3837,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_492,6,[M.e[M.e.length-1]],"maybe-make-triangle");
M.e[M.e.length-1][172]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3827=function(M){if(--M.cbt<0){throw _3827;}
M.c.push(new RT.PromptFrame(_3829,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_488,6,[M.e[M.e.length-1]],"perimeter");
M.e[M.e.length-1][75]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _414=function(M){if(--M.cbt<0){throw _414;}
//"lambda body for #(struct:LamPositionalName raphael-ellipse root/triangle-solver.rkt 40 0 820 78)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",858,41,2,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-7][7][0][M.e[M.e.length-7][7][1]];
if (M.e[M.e.length-7][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-7].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-7][0];
M.e[M.e.length-2]="ellipse";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=M.e[M.e.length-11];
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _3803=function(M){if(--M.cbt<0){throw _3803;}
M.c.push(new RT.PromptFrame(_3805,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_476,4,[M.e[M.e.length-1]],"$sinrel-angle-2$");
M.e[M.e.length-1][155]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _979=function(M){if(--M.cbt<0){throw _979;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-21];
M.c.push(new RT.CallFrame(_983,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11846,324,82,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-24][87];
M.c.push(new RT.CallFrame(_985,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11856,324,92,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-25][68];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};








var _872=function(M){if(--M.cbt<0){throw _872;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_875,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15535,390,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_2}";
M.e[M.e.length-2]=M.e[M.e.length-32];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2469=function(M){M.e[M.e.length-1]="";
return(_2470)(M);};

var _838=function(M){if(--M.cbt<0){throw _838;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_841,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15034,378,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_1}";
M.e[M.e.length-2]=M.e[M.e.length-24];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _828=function(M){if(--M.cbt<0){throw _828;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3006=function(M){if(M.v===false){return(_3003)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3030,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34787,885,7,97]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][123];
M.e[M.e.length-1]="Der findes ingen trekanter";
M.e[M.e.length-2]="med de 3 indtastede sider.";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _800=function(M){if(--M.cbt<0){throw _800;}
M.e[M.e.length-7]=M.v;
M.a=7;
M.v=M.primitives["format"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _780=function(M){if(--M.cbt<0){throw _780;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _770=function(M){if(--M.cbt<0){throw _770;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_778,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14324,366,52,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-40][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-40].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-40][87];
M.c.push(new RT.CallFrame(_780,M.p));
M.v=M.e[M.e.length-40][2][0][M.e[M.e.length-40][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14334,366,62,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-41][68];
M.e[M.e.length-1]=M.e[M.e.length-39];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _750=function(M){if(--M.cbt<0){throw _750;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _728=function(M){if(--M.cbt<0){throw _728;}
M.e[M.e.length-7]=M.v;
M.a=7;
M.v=M.primitives["format"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2970=function(M){if(M.v===false){return(_2967)(M);}else{M.v=true;
return(_2968)(M);}};

var _696=function(M){if(--M.cbt<0){throw _696;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_704,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13342,351,52,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-40][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-40].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-40][87];
M.c.push(new RT.CallFrame(_706,M.p));
M.v=M.e[M.e.length-40][2][0][M.e[M.e.length-40][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13352,351,62,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-41][68];
M.e[M.e.length-1]=M.e[M.e.length-39];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3477=function(M){M.v=M.e[M.e.length-2];
M.v=false;
return(_3472)(M);};

var _3471=function(M){M.v=M.e[M.e.length-1];
M.v=false;
return(_3472)(M);};

var _654=function(M){if(--M.cbt<0){throw _654;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_658,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12442,338,45,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][61];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-25];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _639=function(M){if(--M.cbt<0){throw _639;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12382,337,6,3239]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-12][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-12].names[41]); }
M.e[M.e.length-5]=M.e[M.e.length-12][41];
M.c.push(new RT.CallFrame(_648,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12404,338,7,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_650,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12410,338,13,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-17][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-17].names[34]); }
M.p=M.e[M.e.length-17][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _632=function(M){if(--M.cbt<0){throw _632;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_636,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12320,335,33,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _621=function(M){if(--M.cbt<0){throw _621;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_624,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12246,333,15,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, RT.makeFloat(3.141592653589793),M.e[M.e.length-12],M.e[M.e.length-3]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2902=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.c.push(new RT.CallFrame(_2908,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33826,861,7,52]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2910,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33829,861,10,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.e[M.e.length-1]=M.primitives["length"];
M.c.push(new RT.CallFrame(_2912,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33837,861,18,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-12][176][0][M.e[M.e.length-12][176][1]];
M.e[M.e.length-1]=_493_c;
M.v=RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-8],RT.makePair(M.e[M.e.length-9],RT.makePair(M.e[M.e.length-10],RT.makePair(M.e[M.e.length-11],RT.NULL))))));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3399=function(M){M.v=false;
return(_3396)(M);};

var _550=function(M){if(--M.cbt<0){throw _550;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_555,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16275,411,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][65];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _536=function(M){if(--M.cbt<0){throw _536;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _510=function(M){if(--M.cbt<0){throw _510;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair("eller",RT.NULL));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_514,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",31648,824,72,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][155];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-15];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _440=function(M){if(--M.cbt<0){throw _440;}
//"lambda body for #(struct:LamPositionalName radians root/triangle-solver.rkt 171 0 4736 51)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4763,172,2,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1617,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4766,172,5,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"/"), RT.makeFloat(180.0));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _3836=function(M){if(--M.cbt<0){throw _3836;}
M.e.length-=(M.a-1);
return(_3837)(M);};

var _435=function(M){if(--M.cbt<0){throw _435;}
//"lambda body for #(struct:LamPositionalName excess root/triangle-solver.rkt 147 0 4173 57)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4198,148,2,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1585,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4201,148,5,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["sqr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _434=function(M){if(--M.cbt<0){throw _434;}
//"lambda body for #(struct:LamPositionalName tp-error root/triangle-solver.rkt 135 0 3789 173)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3826,136,2,135]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1573,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3837,137,3,123]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1575,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3866,138,4,60]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1577,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3881,138,19,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a: ";
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _461=function(M){if(--M.cbt<0){throw _461;}
//"lambda body for #(struct:LamPositionalName scale-triangle root/triangle-solver.rkt 580 0 21340 948)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2148,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21387,581,13,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-3][43]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[43]); }
M.p=M.e[M.e.length-3][43];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3277=function(M){M.v=false;
return(_3276)(M);};

var _3255=function(M){M.v=false;
return(_3252)(M);};

var _3253=function(M){M.v=false;
return(_3252)(M);};

var _2073=function(M){M.v=RT.VOID;
return(_2074)(M);};

var _3201=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3227)(M);}else{M.v=M.e[M.e.length-2];
if(M.v===false){return(_3229)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3231)(M);}else{M.c.push(new RT.CallFrame(_3236,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35853,900,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};



var _3855=function(M){if(--M.cbt<0){throw _3855;}
M.c.push(new RT.PromptFrame(_3878,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][186][0][M.e[M.e.length-1][186][1]];
M.p=M.e[M.e.length-1][187][0][M.e[M.e.length-1][187][1]];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3882,M.p));
return((M.p).label)(M);};

var _3839=function(M){if(--M.cbt<0){throw _3839;}
M.c.push(new RT.PromptFrame(_3841,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_496,1,[M.e[M.e.length-1]],"make-on-focusin");
M.e[M.e.length-1][170]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3833=function(M){if(--M.cbt<0){throw _3833;}
M.c.push(new RT.PromptFrame(_3835,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_491,2,[M.e[M.e.length-1]],"values-map");
M.e[M.e.length-1][171]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3825=function(M){if(--M.cbt<0){throw _3825;}
M.c.push(new RT.PromptFrame(_3827,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_487,6,[M.e[M.e.length-1]],"area");
M.e[M.e.length-1][74]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3819=function(M){if(--M.cbt<0){throw _3819;}
M.c.push(new RT.PromptFrame(_3821,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_484,3,[M.e[M.e.length-1]],"$angle-sum$");
M.e[M.e.length-1][162]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3811=function(M){if(--M.cbt<0){throw _3811;}
M.c.push(new RT.PromptFrame(_3813,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_480,6,[M.e[M.e.length-1]],"medians");
M.e[M.e.length-1][71]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3801=function(M){if(--M.cbt<0){throw _3801;}
M.c.push(new RT.PromptFrame(_3803,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_475,4,[M.e[M.e.length-1]],"$sinrel-angle-1$");
M.e[M.e.length-1][154]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};






var _477=function(M){if(--M.cbt<0){throw _477;}
//"lambda body for #(struct:LamPositionalName calculate-median root/triangle-solver.rkt 704 0 25338 84)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25373,705,2,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2495,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25379,705,8,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2497,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25382,705,11,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_2499,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25385,705,14,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-9],M.e[M.e.length-9]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _869=function(M){if(--M.cbt<0){throw _869;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_872,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15495,389,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_2}";
M.e[M.e.length-2]=M.e[M.e.length-30];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3061=function(M){M.v=false;
return(_3060)(M);};


var _822=function(M){if(--M.cbt<0){throw _822;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _818=function(M){if(--M.cbt<0){throw _818;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-33];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _794=function(M){if(--M.cbt<0){throw _794;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _768=function(M){if(--M.cbt<0){throw _768;}
M.e[M.e.length-13]=M.v;
M.e[M.e.length-14]="Nu udregnes den sidste vinkel ved hjælp af vinkelsumsformlen.";
M.c.push(new RT.CallFrame(_786,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14441,368,14,174]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a_2 = 180^{\\circ} - ~a - ~a_2 = 180^{\\circ} - ~a - ~a_1 = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-47];
M.e[M.e.length-3]=M.e[M.e.length-46];
M.e[M.e.length-4]=M.e[M.e.length-48];
M.c.push(new RT.CallFrame(_788,M.p));
M.v=M.e[M.e.length-41][2][0][M.e[M.e.length-41][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14548,369,31,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-42][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[87]); }
M.p=M.e[M.e.length-42][87];
M.e[M.e.length-1]=M.e[M.e.length-43];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _463=function(M){if(--M.cbt<0){throw _463;}
//"lambda body for #(struct:LamPositionalName update-result-formulas root/triangle-solver.rkt 631 0 23145 237)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2384,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23201,632,12,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-4][142][0][M.e[M.e.length-4][142][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="result";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _712=function(M){if(--M.cbt<0){throw _712;}
M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]="Nu udregnes den sidste vinkel ved hjælp af vinkelsumsformlen.";
M.c.push(new RT.CallFrame(_714,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13588,355,14,174]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a_1 = 180^{\\circ} - ~a - ~a_1 = 180^{\\circ} - ~a - ~a_1 = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-47];
M.e[M.e.length-3]=M.e[M.e.length-46];
M.e[M.e.length-4]=M.e[M.e.length-48];
M.c.push(new RT.CallFrame(_716,M.p));
M.v=M.e[M.e.length-41][2][0][M.e[M.e.length-41][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13695,356,31,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-42][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[87]); }
M.p=M.e[M.e.length-42][87];
M.e[M.e.length-1]=M.e[M.e.length-43];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _694=function(M){if(--M.cbt<0){throw _694;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=RT.makePair(sym1863,RT.makePair("Resultater for første mulighed",RT.NULL));
M.c.push(new RT.CallFrame(_712,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13434,353,14,61]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="Vi ser på tilfældet, hvor vinkel $~a$ er spids.";
M.e[M.e.length-2]=M.e[M.e.length-43];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2955=function(M){M.v=false;
return(_2940)(M);};

var _3467=function(M){M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _650=function(M){if(--M.cbt<0){throw _650;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_654,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12426,338,29,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-17][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-17].names[34]); }
M.p=M.e[M.e.length-17][34];
M.e[M.e.length-1]=M.e[M.e.length-27];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _502=function(M){if(--M.cbt<0){throw _502;}
M.mainModules.push(M.modules["root/triangle-solver.rkt"]);
};

var _630=function(M){if(--M.cbt<0){throw _630;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_639,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12346,336,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_641,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12349,336,18,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.c.push(new RT.CallFrame(_643,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12354,336,23,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _618=function(M){if(--M.cbt<0){throw _618;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3425=function(M){M.v=false;
return(_3420)(M);};

var _1653=function(M){M.e[M.e.length-3]="the given side lengths will not form a triangle ~a, ~a, and, ~a.";
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3397=function(M){M.v=false;
return(_3396)(M);};

var _548=function(M){if(--M.cbt<0){throw _548;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedMul(M, RT.makeFloat(0.1),M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _532=function(M){if(--M.cbt<0){throw _532;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-3]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-3]=RT.makePair(RT.makePair(sym1856,RT.makePair(RT.makePair(sym1855,RT.makePair(RT.makePair(sym1859,RT.makePair(sym1860,RT.NULL)),RT.NULL)),RT.NULL)),RT.NULL);
M.a=3;
M.v=M.primitives["list*"]._i(M);
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _442=function(M){if(--M.cbt<0){throw _442;}
//"lambda body for #(struct:LamPositionalName extra-formulas root/triangle-solver.rkt 177 0 4838 517)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4895,178,2,459]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-12]=M.primitives["append"];
M.e[M.e.length-1]=RT.makePair(RT.makePair(sym1858,RT.makePair("Medianer",RT.NULL)),RT.NULL);
M.c.push(new RT.CallFrame(_1621,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4937,179,10,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-19][71]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-19].names[71]); }
M.p=M.e[M.e.length-19][71];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-26];
M.e[M.e.length-5]=M.e[M.e.length-27];
M.e[M.e.length-6]=M.e[M.e.length-28];
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _439=function(M){if(--M.cbt<0){throw _439;}
//"lambda body for #(struct:LamPositionalName last-angle root/triangle-solver.rkt 168 0 4696 38)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4723,169,2,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, RT.makeFloat(3.141592653589793),M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _437=function(M){if(--M.cbt<0){throw _437;}
//"lambda body for #(struct:LamPositionalName cos-rel root/triangle-solver.rkt 158 0 4487 65)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4513,159,2,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1603,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4516,159,5,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["sqr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _436=function(M){if(--M.cbt<0){throw _436;}
//"lambda body for #(struct:LamPositionalName polar->posn root/triangle-solver.rkt 152 0 4313 108)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4350,153,2,70]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-3][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[34]); }
M.e[M.e.length-2]=M.e[M.e.length-3][34];
M.c.push(new RT.CallFrame(_1593,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4361,153,13,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.c.push(new RT.CallFrame(_1595,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4371,153,23,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["cos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3834=function(M){if(--M.cbt<0){throw _3834;}
M.e.length-=(M.a-1);
return(_3835)(M);};

var _3828=function(M){if(--M.cbt<0){throw _3828;}
M.e.length-=(M.a-1);
return(_3829)(M);};

var _3820=function(M){if(--M.cbt<0){throw _3820;}
M.e.length-=(M.a-1);
return(_3821)(M);};


var _3804=function(M){if(--M.cbt<0){throw _3804;}
M.e.length-=(M.a-1);
return(_3805)(M);};

var _489=function(M){if(--M.cbt<0){throw _489;}
//"lambda body for #(struct:LamPositionalName angle-bisectors root/triangle-solver.rkt 764 0 27739 340)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27782,765,2,296]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2712,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27788,765,8,289]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_2714,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27796,765,16,184]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="$v_~a = \\sqrt{~a~a\\left(1-\\frac{~a^2}{(~a+~a)^2}\\right)} = ";
M.e[M.e.length-2]="\\sqrt{~a\\cdot ~a\\cdot\\left(1-\\frac{~a^2}{(~a+~a)^2}\\right)} = ~a$";
M.a=2;
M.v=M.primitives["string-append"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3275=function(M){M.v=false;
return(_3276)(M);};


var _3251=function(M){M.v=false;
return(_3252)(M);};

var _2081=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-4];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2082)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_2082)(M);}};

var _3233=function(M){M.v=false;
return(_3228)(M);};

var _3204=function(M){if(M.v===false){return(_3201)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35767,899,43,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3220,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35783,899,59,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][89];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=sym1871;
M.e[M.e.length-5]=sym1872;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1874;
M.e[M.e.length-8]=sym1875;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3882=function(M){if(--M.cbt<0){throw _3882;}
M.a=1;
return(_3883)(M);};


var _3849=function(M){if(--M.cbt<0){throw _3849;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3837=function(M){if(--M.cbt<0){throw _3837;}
M.c.push(new RT.PromptFrame(_3839,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_495,2,[M.e[M.e.length-1]],"on-click");
M.e[M.e.length-1][169]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3831=function(M){if(--M.cbt<0){throw _3831;}
M.c.push(new RT.PromptFrame(_3833,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_490,0,[M.e[M.e.length-1]],"make-initial-view");
M.e[M.e.length-1][166]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3823=function(M){if(--M.cbt<0){throw _3823;}
M.c.push(new RT.PromptFrame(_3825,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_486,5,[M.e[M.e.length-1]],"$height$");
M.e[M.e.length-1][163]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3817=function(M){if(--M.cbt<0){throw _3817;}
M.c.push(new RT.PromptFrame(_3819,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_483,2,[M.e[M.e.length-1]],"angle-sum");
M.e[M.e.length-1][86]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3809=function(M){if(--M.cbt<0){throw _3809;}
M.c.push(new RT.PromptFrame(_3811,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_479,3,[M.e[M.e.length-1]],"$median$");
M.e[M.e.length-1][159]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3799=function(M){if(--M.cbt<0){throw _3799;}
M.c.push(new RT.PromptFrame(_3801,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_474,3,[M.e[M.e.length-1]],"sinrel-angle-2");
M.e[M.e.length-1][153]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _478=function(M){if(--M.cbt<0){throw _478;}
//"lambda body for #(struct:LamPositionalName median root/triangle-solver.rkt 707 0 25424 183)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2511,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25468,708,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _476=function(M){if(--M.cbt<0){throw _476;}
//"lambda body for #(struct:LamPositionalName $sinrel-angle-2$ root/triangle-solver.rkt 700 0 25251 84)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25288,701,2,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_2491,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25311,701,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][153];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _866=function(M){if(--M.cbt<0){throw _866;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_869,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15455,388,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_2}";
M.e[M.e.length-2]=M.e[M.e.length-28];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3059=function(M){M.v=false;
return(_3060)(M);};


var _820=function(M){if(--M.cbt<0){throw _820;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-52];
M.c.push(new RT.CallFrame(_828,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14885,374,61,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-43][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-43].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-43][87];
M.c.push(new RT.CallFrame(_830,M.p));
M.v=M.e[M.e.length-43][2][0][M.e[M.e.length-43][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14895,374,71,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-44][68];
M.e[M.e.length-1]=M.e[M.e.length-42];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _814=function(M){if(--M.cbt<0){throw _814;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};





var _455=function(M){if(--M.cbt<0){throw _455;}
//"lambda body for #(struct:LamPositionalName raphael-focus root/triangle-solver.rkt 469 4 17576 838)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1791,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17605,470,17,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-4][43]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[43]); }
M.p=M.e[M.e.length-4][43];
if (M.e[M.e.length-4][111]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[111]); }
M.e[M.e.length-1]=M.e[M.e.length-4][111];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _454=function(M){if(--M.cbt<0){throw _454;}
//"lambda body for #(struct:LamPositionalName midpoint-posn root/triangle-solver.rkt 449 0 17070 125)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17102,450,2,92]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-3][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[34]); }
M.e[M.e.length-2]=M.e[M.e.length-3][34];
M.c.push(new RT.CallFrame(_1765,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17113,450,13,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1767,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17116,450,16,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1769,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17119,450,19,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-8][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[36]); }
M.p=M.e[M.e.length-8][36];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _706=function(M){if(--M.cbt<0){throw _706;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _688=function(M){if(--M.cbt<0){throw _688;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2947=function(M){M.v=M.e[M.e.length-3];
if(M.v===false){return(_2955)(M);}else{M.c.push(new RT.CallFrame(_2958,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34243,871,18,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2960,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",34248,871,23,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["positive?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3465=function(M){M.v=false;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _648=function(M){if(--M.cbt<0){throw _648;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-21],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-22],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-20],RT.makePair(M.e[M.e.length-9],RT.makePair(M.e[M.e.length-11],RT.NULL)));
M.e[M.e.length-4]=RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-15],RT.makePair(M.e[M.e.length-16],RT.makePair(M.e[M.e.length-17],RT.makePair(M.e[M.e.length-18],RT.makePair(M.e[M.e.length-19],RT.NULL))))));
M.c.push(new RT.CallFrame(_662,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12544,342,7,3076]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-5]=M.primitives["append"];
M.c.push(new RT.CallFrame(_664,M.p));
M.v=M.e[M.e.length-17][2][0][M.e[M.e.length-17][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12560,343,8,2376]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_666,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12691,344,14,145]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="Først udregnes de to mulige vinkler for $~a$. Den spidse mulighed benævnes $~a_1$ og den stumpe $~a_2$.";
M.e[M.e.length-2]=M.e[M.e.length-45];
M.e[M.e.length-3]=M.e[M.e.length-45];
M.e[M.e.length-4]=M.e[M.e.length-45];
M.a=4;
M.v=M.primitives["format"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _494=function(M){if(--M.cbt<0){throw _494;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:864:26 root/triangle-solver.rkt 864 26 33968 9)"

M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _449=function(M){if(--M.cbt<0){throw _449;}
//"lambda body for #(struct:LamPositionalName triangle/two-sides-non-included-angle root/triangle-solver.rkt 328 0 12001 3677)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15626,392,2,51]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-10]=M.e[M.e.length-11][195];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.e[M.e.length-5]=M.e[M.e.length-18];
M.e[M.e.length-6]=M.e[M.e.length-19];
M.e[M.e.length-7]=M.e[M.e.length-20];
M.c.push(new RT.CallFrame(_1711,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15645,392,21,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][67];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _493=function(M){if(--M.cbt<0){throw _493;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:861:26 root/triangle-solver.rkt 861 26 33845 9)"

M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3423=function(M){M.v=false;
return(_3420)(M);};

var _3419=function(M){M.v=false;
return(_3420)(M);};

var _1658=function(M){M.e[M.e.length-2]=false;
return(_1653)(M);};

var _3395=function(M){M.v=false;
return(_3396)(M);};

var _546=function(M){if(--M.cbt<0){throw _546;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _528=function(M){if(--M.cbt<0){throw _528;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1855,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e[M.e.length-2]=RT.makePair(sym1856,RT.makePair(M.e[M.e.length-1],RT.NULL));
M.e.pop();
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_532,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30931,815,72,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][152];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=M.e[M.e.length-16];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _441=function(M){if(--M.cbt<0){throw _441;}
//"lambda body for #(struct:LamPositionalName degrees root/triangle-solver.rkt 174 0 4789 47)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4814,175,2,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1619,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4817,175,5,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"/"), RT.makeFloat(3.141592653589793));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _405=function(M){if(--M.cbt<0){throw _405;}
//"lambda body for #(struct:LamPositionalName triangle-vertices/aas root/triangle-solver.rkt 281 2 9600 1073)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1001,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9652,282,14,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][66];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _3844=function(M){if(--M.cbt<0){throw _3844;}
M.e.length-=(M.a-1);
return(_3845)(M);};

var _3832=function(M){if(--M.cbt<0){throw _3832;}
M.e.length-=(M.a-1);
return(_3833)(M);};

var _3826=function(M){if(--M.cbt<0){throw _3826;}
M.e.length-=(M.a-1);
return(_3827)(M);};

var _3818=function(M){if(--M.cbt<0){throw _3818;}
M.e.length-=(M.a-1);
return(_3819)(M);};


var _3802=function(M){if(--M.cbt<0){throw _3802;}
M.e.length-=(M.a-1);
return(_3803)(M);};

var _488=function(M){if(--M.cbt<0){throw _488;}
//"lambda body for #(struct:LamPositionalName perimeter root/triangle-solver.rkt 759 0 27565 143)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27602,760,2,105]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2708,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27608,760,8,98]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$\\textrm{Omkreds} = ~a+~a+~a = ~a+~a+~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.c.push(new RT.CallFrame(_2710,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27696,761,31,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-11],M.e[M.e.length-12],M.e[M.e.length-13]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3788=function(M){if(--M.cbt<0){throw _3788;}
M.e.length-=(M.a-1);
return(_3789)(M);};

var _3261=function(M){M.v=false;
return(_3252)(M);};

var _460=function(M){if(--M.cbt<0){throw _460;}
//"lambda body for #(struct:LamPositionalName start-raphael root/triangle-solver.rkt 563 0 20781 557)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_2102,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20817,565,2,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][1];
M.e[M.e.length-1]="raphael_model";
M.e[M.e.length-2]=400;
M.e[M.e.length-3]=400;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3225=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3251)(M);}else{M.v=M.e[M.e.length-3];
if(M.v===false){return(_3253)(M);}else{M.v=M.e[M.e.length-4];
if(M.v===false){return(_3255)(M);}else{M.c.push(new RT.CallFrame(_3260,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35964,901,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _2074=function(M){M.e[M.e.length-2][0]=0;
M.c.push(new RT.CallFrame(_2080,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20416,552,16,314]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5][125][0][M.e[M.e.length-5][125][1]];
M.v=new RT.Closure(_459,1,[M.e[M.e.length-5],M.e[M.e.length-4]],"...angle-solver.rkt:552:21");
M.a=1;
if(M.a===0){return(_2081)(M);}else{M.e.push(M.v);
return(_2081)(M);}};

var _3231=function(M){M.v=false;
return(_3228)(M);};


var _3878=function(M){if(--M.cbt<0){throw _3878;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["root/triangle-solver.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3869=function(M){if(--M.cbt<0){throw _3869;}
M.e[M.e.length-3]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-6][185][0][M.e[M.e.length-6][185][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][148];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3871,M.p));
return((M.p).label)(M);};

var _3847=function(M){if(--M.cbt<0){throw _3847;}
M.e[M.e.length-1][111]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2024=function(M){if(--M.cbt<0){throw _2024;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2028,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19937,540,13,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-27][121];
M.e[M.e.length-1]=M.e[M.e.length-23];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-40];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3829=function(M){if(--M.cbt<0){throw _3829;}
M.c.push(new RT.PromptFrame(_3831,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_489,6,[M.e[M.e.length-1]],"angle-bisectors");
M.e[M.e.length-1][73]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3821=function(M){if(--M.cbt<0){throw _3821;}
M.c.push(new RT.PromptFrame(_3823,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_485,4,[M.e[M.e.length-1]],"height");
M.e[M.e.length-1][161]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3815=function(M){if(--M.cbt<0){throw _3815;}
M.c.push(new RT.PromptFrame(_3817,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_482,12,[M.e[M.e.length-1]],"heights");
M.e[M.e.length-1][72]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3807=function(M){if(--M.cbt<0){throw _3807;}
M.c.push(new RT.PromptFrame(_3809,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_478,3,[M.e[M.e.length-1]],"median");
M.e[M.e.length-1][158]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3797=function(M){if(--M.cbt<0){throw _3797;}
M.c.push(new RT.PromptFrame(_3799,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_473,3,[M.e[M.e.length-1]],"sinrel-angle-1");
M.e[M.e.length-1][95]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _479=function(M){if(--M.cbt<0){throw _479;}
//"lambda body for #(struct:LamPositionalName $median$ root/triangle-solver.rkt 712 0 25609 67)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25636,713,2,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="$m_~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_2520,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25660,713,26,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][158];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _1851=function(M){if(--M.cbt<0){throw _1851;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-8][0];
if(M.v===false){return(_1859)(M);}else{M.c.push(new RT.CallFrame(_1862,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18063,482,10,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][24];
M.e[M.e.length-1]=M.e[M.e.length-9][0];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _457=function(M){if(--M.cbt<0){throw _457;}
//"lambda body for #(struct:LamPositionalName raphael-triangle root/triangle-solver.rkt 509 0 18868 1394)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_1905,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18945,510,2,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
if (M.e[M.e.length-1][123]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-1].names[123]); }
M.p=M.e[M.e.length-1][123];
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _475=function(M){if(--M.cbt<0){throw _475;}
//"lambda body for #(struct:LamPositionalName $sinrel-angle-1$ root/triangle-solver.rkt 697 0 25165 84)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25202,698,2,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_2487,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25225,698,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][95];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _472=function(M){if(--M.cbt<0){throw _472;}
//"lambda body for #(struct:LamPositionalName $sinrel-side$ root/triangle-solver.rkt 688 0 24853 77)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24887,689,2,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_2483,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24909,689,24,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][88];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _863=function(M){if(--M.cbt<0){throw _863;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_866,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15415,387,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_2}";
M.e[M.e.length-2]=M.e[M.e.length-26];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3033=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3059)(M);}else{M.v=M.e[M.e.length-5];
if(M.v===false){return(_3061)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3063)(M);}else{M.c.push(new RT.CallFrame(_3068,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35071,891,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _468=function(M){if(--M.cbt<0){throw _468;}
//"lambda body for #(struct:LamPositionalName $cosrel-side$ root/triangle-solver.rkt 672 0 24382 77)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24416,673,2,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_2466,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24438,673,24,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][81];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _812=function(M){if(--M.cbt<0){throw _812;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-46];
M.c.push(new RT.CallFrame(_814,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14804,373,57,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a_2";
M.e[M.e.length-2]=M.e[M.e.length-51];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _498=function(M){if(--M.cbt<0){throw _498;}
//"lambda body for #(struct:LamPositionalName string-replace-char root/triangle-solver.rkt 935 0 37854 128)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37896,936,2,85]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3556,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37913,937,3,67]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4][125][0][M.e[M.e.length-4][125][1]];
M.v=new RT.Closure(_499,1,[M.e[M.e.length-4],M.e[M.e.length-7],M.e[M.e.length-6]],"...angle-solver.rkt:937:8");
M.a=1;
if(M.a===0){return(_3557)(M);}else{M.e.push(M.v);
return(_3557)(M);}};

var _408=function(M){if(--M.cbt<0){throw _408;}
//"lambda body for #(struct:LamPositionalName triangle-vertices/ass root/triangle-solver.rkt 221 2 6890 1120)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1214,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6944,222,16,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][64];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-13];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _395=function(M){if(--M.cbt<0){throw _395;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:821:59 root/triangle-solver.rkt 821 59 31373 741)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_510,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",31467,822,72,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][154];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-15];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _704=function(M){if(--M.cbt<0){throw _704;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _686=function(M){if(--M.cbt<0){throw _686;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2950=function(M){if(M.v===false){return(_2947)(M);}else{M.v=true;
return(_2940)(M);}};

var _668=function(M){if(--M.cbt<0){throw _668;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_694,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13229,350,14,137]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a_2 = 180^{\\circ}-~a_2 = 180^{\\circ}-~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-46];
M.e[M.e.length-3]=M.e[M.e.length-46];
M.c.push(new RT.CallFrame(_696,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13318,351,28,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-40][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-40].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-40][87];
M.c.push(new RT.CallFrame(_698,M.p));
M.v=M.e[M.e.length-40][2][0][M.e[M.e.length-40][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13328,351,38,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-41][68];
M.e[M.e.length-1]=M.e[M.e.length-40];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _452=function(M){if(--M.cbt<0){throw _452;}
//"lambda body for #(struct:LamPositionalName screen-x root/triangle-solver.rkt 434 4 16731 138)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1737,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16759,435,16,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, RT.makeFloat(0.75),M.e[M.e.length-3]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _451=function(M){if(--M.cbt<0){throw _451;}
//"lambda body for #(struct:LamPositionalName triangle/saa root/triangle-solver.rkt 407 0 16112 430)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16475,418,2,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][197];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_1727,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16505,418,32,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][67];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _462=function(M){if(--M.cbt<0){throw _462;}
//"lambda body for #(struct:LamPositionalName draw-triangle root/triangle-solver.rkt 612 0 22290 752)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2294,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22341,613,13,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-3][43]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[43]); }
M.p=M.e[M.e.length-3][43];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3421=function(M){M.v=false;
return(_3420)(M);};

var _3393=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3419)(M);}else{M.v=M.e[M.e.length-4];
if(M.v===false){return(_3421)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3423)(M);}else{M.c.push(new RT.CallFrame(_3428,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36820,910,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-2]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _3401=function(M){M.v=false;
return(_3396)(M);};

var _567=function(M){if(--M.cbt<0){throw _567;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_571,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16374,414,29,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-13][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-13].names[34]); }
M.p=M.e[M.e.length-13][34];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _544=function(M){if(--M.cbt<0){throw _544;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedMul(M, RT.makeFloat(0.1),M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1371=function(M){if(--M.cbt<0){throw _1371;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1359=function(M){if(--M.cbt<0){throw _1359;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1403,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6351,210,8,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-23][69];
M.e[M.e.length-1]=M.e[M.e.length-33];
M.e[M.e.length-2]=M.e[M.e.length-34];
M.e[M.e.length-3]=M.e[M.e.length-35];
M.e[M.e.length-4]=M.e[M.e.length-22];
M.e[M.e.length-5]=M.e[M.e.length-21];
M.e[M.e.length-6]=M.e[M.e.length-20];
M.e[M.e.length-7]=M.e[M.e.length-27];
M.e[M.e.length-8]=M.e[M.e.length-28];
M.e[M.e.length-9]=M.e[M.e.length-29];
M.e[M.e.length-10]=M.e[M.e.length-30];
M.e[M.e.length-11]=M.e[M.e.length-31];
M.e[M.e.length-12]=M.e[M.e.length-32];
M.a=12;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3877=function(M){if(--M.cbt<0){throw _3877;}
M.e.length-=(M.a-1);
return(_3878)(M);};


var _3854=function(M){if(--M.cbt<0){throw _3854;}
M.e.length-=(M.a-1);
return(_3855)(M);};

var _3842=function(M){if(--M.cbt<0){throw _3842;}
M.e.length-=(M.a-1);
return(_3843)(M);};

var _3830=function(M){if(--M.cbt<0){throw _3830;}
M.e.length-=(M.a-1);
return(_3831)(M);};

var _3824=function(M){if(--M.cbt<0){throw _3824;}
M.e.length-=(M.a-1);
return(_3825)(M);};

var _3816=function(M){if(--M.cbt<0){throw _3816;}
M.e.length-=(M.a-1);
return(_3817)(M);};

var _3812=function(M){if(--M.cbt<0){throw _3812;}
M.e.length-=(M.a-1);
return(_3813)(M);};

var _3800=function(M){if(--M.cbt<0){throw _3800;}
M.e.length-=(M.a-1);
return(_3801)(M);};

var _432=function(M){if(--M.cbt<0){throw _432;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:117:22 root/triangle-solver.rkt 117 22 3177 137)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1557,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3196,117,41,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-4]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3249=function(M){M.v=M.e[M.e.length-1];
if(M.v===false){return(_3275)(M);}else{M.v=M.e[M.e.length-3];
if(M.v===false){return(_3277)(M);}else{M.v=M.e[M.e.length-6];
if(M.v===false){return(_3279)(M);}else{M.c.push(new RT.CallFrame(_3284,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36075,902,18,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-4]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}}};

var _2127=function(M){if(--M.cbt<0){throw _2127;}
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2131,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21168,574,11,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][5];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=400;
M.e[M.e.length-4]=400;
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3237=function(M){M.v=false;
return(_3228)(M);};

var _3229=function(M){M.v=false;
return(_3228)(M);};


var _3873=function(M){if(--M.cbt<0){throw _3873;}
M.a=1;
return(_3874)(M);};

var _3867=function(M){if(--M.cbt<0){throw _3867;}
M.e[M.e.length-2]=M.v;
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-7][184][0][M.e[M.e.length-7][184][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][147];
M.e[M.e.length-2]=1;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3869,M.p));
return((M.p).label)(M);};

var _3845=function(M){if(--M.cbt<0){throw _3845;}
M.c.push(new RT.PromptFrame(_3855,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][186][0][M.e[M.e.length-1][186][1]];
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-5][182][0][M.e[M.e.length-5][182][1]];
M.c.push(new RT.CallFrame(_3859,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",38080,943,1,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-9][131]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[131]); }
M.p=M.e[M.e.length-9][131];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=false;
M.e[M.e.length-4]=false;
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2022=function(M){if(--M.cbt<0){throw _2022;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=32;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2010=function(M){if(--M.cbt<0){throw _2010;}
M.c.push(new RT.CallFrame(_2014,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19744,535,6,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-19][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="fill";
M.e[M.e.length-3]=M.e[M.e.length-27];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1993=function(M){if(--M.cbt<0){throw _1993;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1998,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19546,529,13,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-16][107];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3813=function(M){if(--M.cbt<0){throw _3813;}
M.c.push(new RT.PromptFrame(_3815,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_481,2,[M.e[M.e.length-1]],"calculate-height");
M.e[M.e.length-1][160]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3805=function(M){if(--M.cbt<0){throw _3805;}
M.c.push(new RT.PromptFrame(_3807,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_477,3,[M.e[M.e.length-1]],"calculate-median");
M.e[M.e.length-1][156]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1930=function(M){if(--M.cbt<0){throw _1930;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _480=function(M){if(--M.cbt<0){throw _480;}
//"lambda body for #(struct:LamPositionalName medians root/triangle-solver.rkt 715 0 25678 388)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25713,716,2,352]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_2524,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25719,716,8,109]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$m_~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-13];
M.c.push(new RT.CallFrame(_2526,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25770,717,19,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][158];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-18];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3787=function(M){if(--M.cbt<0){throw _3787;}
M.c.push(new RT.PromptFrame(_3789,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_468,4,[M.e[M.e.length-1]],"$cosrel-side$");
M.e[M.e.length-1][150]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1844=function(M){if(--M.cbt<0){throw _1844;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2728=function(M){if(--M.cbt<0){throw _2728;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["sqr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _474=function(M){if(--M.cbt<0){throw _474;}
//"lambda body for #(struct:LamPositionalName sinrel-angle-2 root/triangle-solver.rkt 694 0 25041 122)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25074,695,2,88]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="180^{\\circ} - \\sin^{-1}\\left(\\frac{\\sin(~a)}{~a}\\cdot ~a\\right)";
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _471=function(M){if(--M.cbt<0){throw _471;}
//"lambda body for #(struct:LamPositionalName sinrel-side root/triangle-solver.rkt 684 0 24757 94)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24787,685,2,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="\\frac{~a}{\\sin(~a)}\\cdot\\sin(~a)";
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _860=function(M){if(--M.cbt<0){throw _860;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_863,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15375,386,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_2}";
M.e[M.e.length-2]=M.e[M.e.length-24];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2687=function(M){if(--M.cbt<0){throw _2687;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _810=function(M){if(--M.cbt<0){throw _810;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_818,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14846,374,22,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-42][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-42][88];
M.c.push(new RT.CallFrame(_820,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14859,374,35,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-43][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-43].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-43][87];
M.c.push(new RT.CallFrame(_822,M.p));
M.v=M.e[M.e.length-43][2][0][M.e[M.e.length-43][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14869,374,45,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-44][68];
M.e[M.e.length-1]=M.e[M.e.length-40];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _501=function(M){if(--M.cbt<0){throw _501;}
M.e.length-=(M.a-1);
return(_502)(M);};


var _497=function(M){if(--M.cbt<0){throw _497;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:931:2 root/triangle-solver.rkt 931 2 37809 42)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-4];
M.c.push(new RT.CallFrame(_3552,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37827,932,4,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][110];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _397=function(M){if(--M.cbt<0){throw _397;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:813:59 root/triangle-solver.rkt 813 59 30739 298)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.e.push(void(0));
M.c.push(new RT.CallFrame(_528,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",30833,814,72,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][152];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-13];
M.e[M.e.length-4]=M.e[M.e.length-14];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _464=function(M){if(--M.cbt<0){throw _464;}
//"lambda body for #(struct:LamPositionalName tick root/triangle-solver.rkt 639 0 23413 510)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-3];
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2396,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23460,640,28,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-3][133]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[133]); }
M.p=M.e[M.e.length-3][133];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _394=function(M){if(--M.cbt<0){throw _394;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:820:50 root/triangle-solver.rkt 820 50 31302 875)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",31366,821,52,810]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-3][203];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _698=function(M){if(--M.cbt<0){throw _698;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _678=function(M){if(--M.cbt<0){throw _678;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _666=function(M){if(--M.cbt<0){throw _666;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(sym1898,RT.makePair(RT.makePair(sym1899,RT.makePair("Kun den ene trekant tegnes i resultat-feltet. For at tegne den sidste mulighed skal du indtaste de 3 sider",RT.makePair(" i mulighed to og genberegne.",RT.NULL))),RT.NULL));
M.c.push(new RT.CallFrame(_668,M.p));
M.v=M.e[M.e.length-34][2][0][M.e[M.e.length-34][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13062,348,14,152]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a_1 = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-46];
M.c.push(new RT.CallFrame(_670,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13120,349,25,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-42][95]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[95]); }
M.p=M.e[M.e.length-42][95];
M.e[M.e.length-1]=M.e[M.e.length-44];
M.e[M.e.length-2]=M.e[M.e.length-49];
M.e[M.e.length-3]=M.e[M.e.length-46];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _450=function(M){if(--M.cbt<0){throw _450;}
//"lambda body for #(struct:LamPositionalName triangle/asa root/triangle-solver.rkt 394 0 15680 430)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16043,405,2,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][196];
M.c.push(new RT.CallFrame(_1717,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16066,405,25,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][67];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1543=function(M){if(--M.cbt<0){throw _1543;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _448=function(M){if(--M.cbt<0){throw _448;}
//"lambda body for #(struct:LamPositionalName triangle/aas-non-shared root/triangle-solver.rkt 304 0 10746 1253)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11936,326,2,62]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-11]=M.e[M.e.length-12][194];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.e[M.e.length-5]=M.e[M.e.length-18];
M.e[M.e.length-6]=M.e[M.e.length-19];
M.e[M.e.length-7]=M.e[M.e.length-20];
M.e[M.e.length-8]=M.e[M.e.length-21];
M.c.push(new RT.CallFrame(_1701,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11955,326,21,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _616=function(M){if(--M.cbt<0){throw _616;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-14];
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3396=function(M){if(M.v===false){return(_3393)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36719,908,43,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3412,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36735,908,59,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][90];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=sym1873;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1872;
M.e[M.e.length-7]=sym1876;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1875;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3405=function(M){M.v=false;
return(_3396)(M);};

var _565=function(M){if(--M.cbt<0){throw _565;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-9],RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-5],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-10],RT.makePair(M.e[M.e.length-11],RT.NULL)));
M.v=RT.makePair("TODO",RT.NULL);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _443=function(M){if(--M.cbt<0){throw _443;}
//"lambda body for #(struct:LamPositionalName triangle/sss root/triangle-solver.rkt 191 0 5357 1436)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_1651,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6405,211,2,340]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-7][53];
M.e[M.e.length-1]=sym1900;
M.c.push(new RT.CallFrame(_1655,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6466,212,27,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1657,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6470,212,31,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-10],M.e[M.e.length-11]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1367=function(M){if(--M.cbt<0){throw _1367;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_1371,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6027,205,85,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-20][68];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1357=function(M){if(--M.cbt<0){throw _1357;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-21,16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1345=function(M){if(--M.cbt<0){throw _1345;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1349,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5676,198,29,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=M.e[M.e.length-26];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1336=function(M){if(--M.cbt<0){throw _1336;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1340,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5612,196,37,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-17],M.e[M.e.length-18]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3840=function(M){if(--M.cbt<0){throw _3840;}
M.e.length-=(M.a-1);
return(_3841)(M);};

var _1290=function(M){if(--M.cbt<0){throw _1290;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1294,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7916,239,49,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-24][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[78]); }
M.p=M.e[M.e.length-24][78];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.e[M.e.length-2]=M.e[M.e.length-33];
M.e[M.e.length-3]=M.e[M.e.length-34];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3822=function(M){if(--M.cbt<0){throw _3822;}
M.e.length-=(M.a-1);
return(_3823)(M);};

var _3814=function(M){if(--M.cbt<0){throw _3814;}
M.e.length-=(M.a-1);
return(_3815)(M);};

var _3810=function(M){if(--M.cbt<0){throw _3810;}
M.e.length-=(M.a-1);
return(_3811)(M);};

var _3798=function(M){if(--M.cbt<0){throw _3798;}
M.e.length-=(M.a-1);
return(_3799)(M);};

var _3796=function(M){if(--M.cbt<0){throw _3796;}
M.e.length-=(M.a-1);
return(_3797)(M);};

var _2126=function(M){if(--M.cbt<0){throw _2126;}
M.e.length-=(M.a-1);
return(_2127)(M);};

var _3252=function(M){if(M.v===false){return(_3249)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35989,901,43,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3268,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36005,901,59,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][89];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=sym1873;
M.e[M.e.length-5]=sym1872;
M.e[M.e.length-6]=sym1871;
M.e[M.e.length-7]=sym1876;
M.e[M.e.length-8]=sym1875;
M.e[M.e.length-9]=sym1874;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _2123=function(M){if(--M.cbt<0){throw _2123;}
M.c.push(new RT.CallFrame(_2127,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21112,573,2,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][1];
M.e[M.e.length-1]="raphael_result";
M.e[M.e.length-2]=400;
M.e[M.e.length-3]=400;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3228=function(M){if(M.v===false){return(_3225)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35878,900,43,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][129];
M.c.push(new RT.CallFrame(_3244,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",35894,900,59,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-17][89];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=sym1872;
M.e[M.e.length-5]=sym1871;
M.e[M.e.length-6]=sym1873;
M.e[M.e.length-7]=sym1875;
M.e[M.e.length-8]=sym1874;
M.e[M.e.length-9]=sym1876;
M.a=9;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _486=function(M){if(--M.cbt<0){throw _486;}
//"lambda body for #(struct:LamPositionalName $height$ root/triangle-solver.rkt 745 0 26888 206)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2666,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26930,746,13,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][161];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3871=function(M){if(--M.cbt<0){throw _3871;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3873,M.p));
return((M.p).label)(M);};

var _3863=function(M){if(--M.cbt<0){throw _3863;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3867,M.p));
return((M.p).label)(M);};

var _2038=function(M){if(--M.cbt<0){throw _2038;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2042,M.p));
M.v=M.e[M.e.length-27][2][0][M.e[M.e.length-27][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20077,542,55,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2044,M.p));
M.v=M.e[M.e.length-29][2][0][M.e[M.e.length-29][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20080,542,58,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-22],M.e[M.e.length-21]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2018=function(M){if(--M.cbt<0){throw _2018;}
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19842,537,6,417]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.c.push(new RT.CallFrame(_2022,M.p));
M.v=M.e[M.e.length-18][2][0][M.e[M.e.length-18][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19868,538,12,390]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_2024,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19888,539,13,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-27][121];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-39];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2005=function(M){if(--M.cbt<0){throw _2005;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1988=function(M){if(--M.cbt<0){throw _1988;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1993,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19518,528,13,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-15][107];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1973=function(M){if(--M.cbt<0){throw _1973;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1978,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19434,525,13,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][104];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1948=function(M){if(--M.cbt<0){throw _1948;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1928=function(M){if(--M.cbt<0){throw _1928;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1937,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19261,519,14,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][104];
M.c.push(new RT.CallFrame(_1939,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19271,519,24,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][198];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3795=function(M){if(--M.cbt<0){throw _3795;}
M.c.push(new RT.PromptFrame(_3797,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_472,4,[M.e[M.e.length-1]],"$sinrel-side$");
M.e[M.e.length-1][152]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1890=function(M){if(--M.cbt<0){throw _1890;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1895,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18765,505,12,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][29];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="font-size";
M.e[M.e.length-3]="20";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1842=function(M){if(--M.cbt<0){throw _1842;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1851,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18005,480,16,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-10][107];
M.c.push(new RT.CallFrame(_1853,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18015,480,26,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-11][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-11].names[37]); }
M.p=M.e[M.e.length-11][37];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _473=function(M){if(--M.cbt<0){throw _473;}
//"lambda body for #(struct:LamPositionalName sinrel-angle-1 root/triangle-solver.rkt 691 0 24932 107)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24965,692,2,73]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="\\sin^{-1}\\left(\\frac{\\sin(~a)}{~a}\\cdot ~a\\right)";
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _456=function(M){if(--M.cbt<0){throw _456;}
//"lambda body for #(struct:LamPositionalName raphael-open-sans-text root/triangle-solver.rkt 503 0 18674 190)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1890,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18728,504,12,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][15];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _856=function(M){if(--M.cbt<0){throw _856;}
M.e[M.e.length-9]=M.v;
M.e.pop();
M.e.pop();
M.e.pop();
M.e.pop();
M.e.pop();
M.e.pop();
M.e[M.e.length-4]=RT.makePair(RT.makePair(sym1863,RT.makePair("Anden mulighed",RT.NULL)),RT.NULL);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_860,M.p));
M.v=M.e[M.e.length-18][2][0][M.e[M.e.length-18][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15335,385,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_2}";
M.e[M.e.length-2]=M.e[M.e.length-22];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _467=function(M){if(--M.cbt<0){throw _467;}
//"lambda body for #(struct:LamPositionalName cosrel-side root/triangle-solver.rkt 666 0 24185 195)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2459,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24235,667,22,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2452=function(M){if(--M.cbt<0){throw _2452;}
M.e.length-=(M.a-1);
return(_2453)(M);};

var _465=function(M){if(--M.cbt<0){throw _465;}
//"lambda body for #(struct:LamPositionalName draw root/triangle-solver.rkt 655 0 23953 180)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2439,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23983,656,11,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-3][135]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[135]); }
M.p=M.e[M.e.length-3][135];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _499=function(M){if(--M.cbt<0){throw _499;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:937:8 root/triangle-solver.rkt 937 8 37918 34)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.c.push(new RT.CallFrame(_3566,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37934,937,24,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _496=function(M){if(--M.cbt<0){throw _496;}
//"lambda body for #(struct:LamPositionalName make-on-focusin root/triangle-solver.rkt 930 0 37779 73)"

M.e.push(M.p.closedVals[0]);
M.v=new RT.Closure(_497,2,[M.e[M.e.length-1],M.e[M.e.length-2]],"...angle-solver.rkt:931:2");
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2582=function(M){if(--M.cbt<0){throw _2582;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2572=function(M){if(--M.cbt<0){throw _2572;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2562=function(M){if(--M.cbt<0){throw _2562;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _495=function(M){if(--M.cbt<0){throw _495;}
//"lambda body for #(struct:LamPositionalName on-click root/triangle-solver.rkt 917 0 37237 505)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37262,918,2,479]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-5][131]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[131]); }
M.e[M.e.length-4]=M.e[M.e.length-5][131];
M.c.push(new RT.CallFrame(_3490,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",37274,918,14,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-6][133]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[133]); }
M.p=M.e[M.e.length-6][133];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1603=function(M){if(--M.cbt<0){throw _1603;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1605,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4524,159,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["sqr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _676=function(M){if(--M.cbt<0){throw _676;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-51];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _664=function(M){if(--M.cbt<0){throw _664;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(RT.makePair(sym1863,RT.makePair("Første mulighed",RT.NULL)),RT.NULL);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_838,M.p));
M.v=M.e[M.e.length-18][2][0][M.e[M.e.length-18][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",14994,377,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_1}";
M.e[M.e.length-2]=M.e[M.e.length-22];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1575=function(M){if(--M.cbt<0){throw _1575;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1583,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3931,139,4,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["current-continuation-marks"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1541=function(M){if(--M.cbt<0){throw _1541;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["string?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _447=function(M){if(--M.cbt<0){throw _447;}
//"lambda body for #(struct:LamPositionalName triangle/aas root/triangle-solver.rkt 279 0 9502 1241)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10676,301,2,66]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-11]=M.e[M.e.length-12][193];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.e[M.e.length-5]=M.e[M.e.length-18];
M.e[M.e.length-6]=M.e[M.e.length-19];
M.e[M.e.length-7]=M.e[M.e.length-20];
M.e[M.e.length-8]=M.e[M.e.length-21];
M.c.push(new RT.CallFrame(_1691,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10699,301,25,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _614=function(M){if(--M.cbt<0){throw _614;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["asin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _602=function(M){if(--M.cbt<0){throw _602;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_606,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15958,401,45,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][61];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _586=function(M){if(--M.cbt<0){throw _586;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_591,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15874,399,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _560=function(M){if(--M.cbt<0){throw _560;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16330,413,6,140]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-8][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[41]); }
M.e[M.e.length-4]=M.e[M.e.length-8][41];
M.c.push(new RT.CallFrame(_565,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16352,414,7,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_567,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16358,414,13,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-13][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-13].names[34]); }
M.p=M.e[M.e.length-13][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2344=function(M){if(--M.cbt<0){throw _2344;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2353,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22590,620,13,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-10][46]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-10].names[46]); }
M.p=M.e[M.e.length-10][46];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1353=function(M){if(--M.cbt<0){throw _1353;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1343=function(M){if(--M.cbt<0){throw _1343;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-19],RT.makePair(M.e[M.e.length-20],RT.makePair(M.e[M.e.length-21],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-8],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-6],RT.NULL)));
M.e[M.e.length-4]=RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-15],RT.makePair(M.e[M.e.length-16],RT.makePair(M.e[M.e.length-17],RT.makePair(M.e[M.e.length-18],RT.NULL))))));
M.c.push(new RT.CallFrame(_1357,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5790,202,7,609]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["append"];
M.c.push(new RT.CallFrame(_1359,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5806,203,8,536]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1361,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5903,204,14,136]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a^{\\circ}$";
M.e[M.e.length-2]=M.e[M.e.length-26];
M.c.push(new RT.CallFrame(_1363,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5967,205,25,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-22][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[78]); }
M.p=M.e[M.e.length-22][78];
M.e[M.e.length-1]=M.e[M.e.length-27];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-26];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1334=function(M){if(--M.cbt<0){throw _1334;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3838=function(M){if(--M.cbt<0){throw _3838;}
M.e.length-=(M.a-1);
return(_3839)(M);};

var _1288=function(M){if(--M.cbt<0){throw _1288;}
M.e[M.e.length-4]=M.v;
M.v=RT.makePair("Der kendes to sider og mellemliggende vinkel. Først udregnes den sidste side ved hjælp af en cosinusrelation.",RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.NULL)))));
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1280=function(M){if(--M.cbt<0){throw _1280;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_1284,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7801,237,70,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-22][68];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3808=function(M){if(--M.cbt<0){throw _3808;}
M.e.length-=(M.a-1);
return(_3809)(M);};

var _2189=function(M){if(--M.cbt<0){throw _2189;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2198,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21602,587,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-9][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[37]); }
M.e[M.e.length-1]=M.e[M.e.length-9][37];
M.c.push(new RT.CallFrame(_2200,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21610,587,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-10][114][0][M.e[M.e.length-10][114][1]];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3794=function(M){if(--M.cbt<0){throw _3794;}
M.e.length-=(M.a-1);
return(_3795)(M);};

var _1222=function(M){if(--M.cbt<0){throw _1222;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1233,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7058,225,16,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1235,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7064,225,22,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1237,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7067,225,25,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][59];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-21];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2144=function(M){if(--M.cbt<0){throw _2144;}
M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2119=function(M){if(--M.cbt<0){throw _2119;}
M.c.push(new RT.CallFrame(_2123,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21061,571,2,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][128];
if (M.e[M.e.length-3][111]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[111]); }
M.e[M.e.length-1]=M.e[M.e.length-3][111];
M.e[M.e.length-2]=sym1867;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _459=function(M){if(--M.cbt<0){throw _459;}
//"lambda body for #(struct:LamPositionalName ...angle-solver.rkt:552:21 root/triangle-solver.rkt 552 21 20421 281)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.CallFrame(_2086,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20467,553,31,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd1(M, M.e[M.e.length-1][0]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _458=function(M){if(--M.cbt<0){throw _458;}
//"lambda body for #(struct:LamPositionalName print-message root/triangle-solver.rkt 548 4 20314 428)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-1][0];
if(M.v===false){return(_2073)(M);}else{M.c.push(new RT.CallFrame(_2076,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20352,550,8,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5][124][0][M.e[M.e.length-5][124][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][24];
M.e[M.e.length-2]=M.e[M.e.length-3][0];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _485=function(M){if(--M.cbt<0){throw _485;}
//"lambda body for #(struct:LamPositionalName height root/triangle-solver.rkt 741 0 26778 108)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26805,742,2,80]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2662,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26811,742,8,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="~a\\cdot\\sin(~a)";
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2056=function(M){if(--M.cbt<0){throw _2056;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3859=function(M){if(--M.cbt<0){throw _3859;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5][183][0][M.e[M.e.length-5][183][1]]);
M.c.push(new RT.CallFrame(_3863,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",38120,944,15,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][166];
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2036=function(M){if(--M.cbt<0){throw _2036;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2048,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20112,543,13,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-27][121];
M.c.push(new RT.CallFrame(_2050,M.p));
M.v=M.e[M.e.length-27][2][0][M.e[M.e.length-27][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20136,543,37,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2052,M.p));
M.v=M.e[M.e.length-29][2][0][M.e[M.e.length-29][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20139,543,40,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-26],M.e[M.e.length-24]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2014=function(M){if(--M.cbt<0){throw _2014;}
M.c.push(new RT.CallFrame(_2018,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19785,536,6,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-19][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="stroke-width";
M.e[M.e.length-3]=3;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2003=function(M){if(--M.cbt<0){throw _2003;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2010,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19699,534,6,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-19][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="stroke";
M.e[M.e.length-3]=M.e[M.e.length-26];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1983=function(M){if(--M.cbt<0){throw _1983;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1988,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19490,527,13,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][107];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1966=function(M){if(--M.cbt<0){throw _1966;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1946=function(M){if(--M.cbt<0){throw _1946;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1955,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19329,521,14,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-9][107];
M.c.push(new RT.CallFrame(_1957,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19339,521,24,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][199];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1921=function(M){if(--M.cbt<0){throw _1921;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3793=function(M){if(--M.cbt<0){throw _3793;}
M.c.push(new RT.PromptFrame(_3795,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_471,3,[M.e[M.e.length-1]],"sinrel-side");
M.e[M.e.length-1][88]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1885=function(M){if(--M.cbt<0){throw _1885;}
M.e.push(void(0));
M.e[M.e.length-12][0]=M.e[M.e.length-2];
M.e[M.e.length-1]=RT.VOID;
M.e[M.e.length-13][0]=M.e[M.e.length-3];
M.v=RT.VOID;
M.v=M.e[M.e.length-1];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1873=function(M){if(--M.cbt<0){throw _1873;}
M.c.push(new RT.CallFrame(_1877,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18247,487,11,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-15][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="stroke-opacity";
M.e[M.e.length-3]="0.50";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1837=function(M){if(--M.cbt<0){throw _1837;}
M.e[M.e.length-1]=M.v;
return(_1811)(M);};


var _2722=function(M){if(--M.cbt<0){throw _2722;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedSub(M, 1,M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2714=function(M){if(--M.cbt<0){throw _2714;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-19];
M.e[M.e.length-3]=M.e[M.e.length-20];
M.e[M.e.length-4]=M.e[M.e.length-21];
M.e[M.e.length-5]=M.e[M.e.length-19];
M.e[M.e.length-6]=M.e[M.e.length-20];
M.e[M.e.length-7]=M.e[M.e.length-21];
M.e[M.e.length-8]=M.e[M.e.length-17];
M.e[M.e.length-9]=M.e[M.e.length-18];
M.e[M.e.length-10]=M.e[M.e.length-16];
M.e[M.e.length-11]=M.e[M.e.length-17];
M.e[M.e.length-12]=M.e[M.e.length-18];
M.c.push(new RT.CallFrame(_2716,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28030,767,49,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2718,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28036,767,55,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=M.e[M.e.length-22];
M.c.push(new RT.CallFrame(_2720,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28043,767,62,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2722,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28048,767,67,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2724,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",28051,767,70,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, M.e[M.e.length-23],M.e[M.e.length-23]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _853=function(M){if(--M.cbt<0){throw _853;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_856,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15227,383,10,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-35][69];
M.e[M.e.length-1]=M.e[M.e.length-44];
M.e[M.e.length-2]=M.e[M.e.length-30];
M.e[M.e.length-3]=M.e[M.e.length-45];
M.e[M.e.length-4]=M.e[M.e.length-43];
M.e[M.e.length-5]=M.e[M.e.length-32];
M.e[M.e.length-6]=M.e[M.e.length-34];
M.e[M.e.length-7]=M.e[M.e.length-18];
M.e[M.e.length-8]=M.e[M.e.length-17];
M.e[M.e.length-9]=M.e[M.e.length-16];
M.e[M.e.length-10]=M.e[M.e.length-15];
M.e[M.e.length-11]=M.e[M.e.length-14];
M.e[M.e.length-12]=M.e[M.e.length-13];
M.a=12;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1884=function(M){if(--M.cbt<0){throw _1884;}
M.e.length-=(M.a-1);
return(_1885)(M);};


var _466=function(M){if(--M.cbt<0){throw _466;}
//"lambda body for #(struct:LamPositionalName $degrees root/triangle-solver.rkt 663 0 24135 48)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24158,664,2,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a^{\\circ}";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2632=function(M){if(--M.cbt<0){throw _2632;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _399=function(M){if(--M.cbt<0){throw _399;}
//"lambda body for #(struct:LamPositionalName ay root/triangle-solver.rkt 515 13 19137 30)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19144,515,20,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_542,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19149,515,25,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_544,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19156,515,32,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-6],M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2570=function(M){if(--M.cbt<0){throw _2570;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2578,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26253,728,48,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][112][0][M.e[M.e.length-9][112][1]]);
M.c.push(new RT.CallFrame(_2580,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26260,728,55,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-14][161];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-19];
M.c.push(new RT.CallFrame(_2582,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26274,728,69,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-15][87];
M.c.push(new RT.CallFrame(_2584,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26284,728,79,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-16][68];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2558=function(M){if(--M.cbt<0){throw _2558;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2562,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26039,721,52,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][156];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3883=function(M){if(--M.cbt<0){throw _3883;}
if(M.a===0){return(_3880)(M);}else{M.e.push(M.v);
return(_3880)(M);}};

var _1599=function(M){if(--M.cbt<0){throw _1599;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _674=function(M){if(--M.cbt<0){throw _674;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_686,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13190,349,95,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-40][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-40].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-40][87];
M.c.push(new RT.CallFrame(_688,M.p));
M.v=M.e[M.e.length-40][2][0][M.e[M.e.length-40][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13200,349,105,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-41][68];
M.e[M.e.length-1]=M.e[M.e.length-40];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _662=function(M){if(--M.cbt<0){throw _662;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-22,17);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1573=function(M){if(--M.cbt<0){throw _1573;}
M.e[M.e.length-1]=M.v;
M.a=1;
M.v=M.primitives["raise"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1539=function(M){if(--M.cbt<0){throw _1539;}
if(M.v===false){return(_1536)(M);}else{M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3089,115,12,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-5][7][0][M.e[M.e.length-5][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]="attr";
M.c.push(new RT.CallFrame(_1543,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3111,115,34,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _406=function(M){if(--M.cbt<0){throw _406;}
//"lambda body for #(struct:LamPositionalName triangle-vertices/ssa root/triangle-solver.rkt 262 2 8843 597)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1112,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8896,263,15,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][64];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _612=function(M){if(--M.cbt<0){throw _612;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_621,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",12220,332,15,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, RT.makeFloat(3.141592653589793),M.e[M.e.length-2]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _598=function(M){if(--M.cbt<0){throw _598;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_602,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15942,401,29,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-13][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-13].names[34]); }
M.p=M.e[M.e.length-13][34];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _581=function(M){if(--M.cbt<0){throw _581;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_586,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15843,398,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][65];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _555=function(M){if(--M.cbt<0){throw _555;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_560,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16306,412,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1389=function(M){if(--M.cbt<0){throw _1389;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair("Alle sider kendes, så cosinusrelationerne bruges til at udregne vinklerne.",RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL))));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2337=function(M){if(--M.cbt<0){throw _2337;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2319=function(M){if(--M.cbt<0){throw _2319;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2308=function(M){if(--M.cbt<0){throw _2308;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2317,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22453,616,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-6][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[36]); }
M.e[M.e.length-1]=M.e[M.e.length-6][36];
M.c.push(new RT.CallFrame(_2319,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22461,616,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-7][114][0][M.e[M.e.length-7][114][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1332=function(M){if(--M.cbt<0){throw _1332;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5632,197,6,768]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-9][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[41]); }
M.e[M.e.length-5]=M.e[M.e.length-9][41];
M.c.push(new RT.CallFrame(_1343,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5654,198,7,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1345,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5660,198,13,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1325=function(M){if(--M.cbt<0){throw _1325;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1329,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5562,195,37,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-16],M.e[M.e.length-18]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1314=function(M){if(--M.cbt<0){throw _1314;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1318,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5512,194,37,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-16],M.e[M.e.length-17]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2247=function(M){if(--M.cbt<0){throw _2247;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2250,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21992,601,13,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,"/"));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1276=function(M){if(--M.cbt<0){throw _1276;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1280,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7780,237,49,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-24][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[78]); }
M.p=M.e[M.e.length-24][78];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.e[M.e.length-2]=M.e[M.e.length-34];
M.e[M.e.length-3]=M.e[M.e.length-33];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3806=function(M){if(--M.cbt<0){throw _3806;}
M.e.length-=(M.a-1);
return(_3807)(M);};

var _2182=function(M){if(--M.cbt<0){throw _2182;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3792=function(M){if(--M.cbt<0){throw _3792;}
M.e.length-=(M.a-1);
return(_3793)(M);};

var _1219=function(M){if(--M.cbt<0){throw _1219;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1222,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7005,224,16,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1224,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7011,224,22,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1226,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7014,224,25,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][59];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-19];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2140=function(M){if(--M.cbt<0){throw _2140;}
M.c.push(new RT.CallFrame(_2144,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21289,577,4,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][121];
M.e[M.e.length-1]=50;
M.e[M.e.length-2]=50;
M.e[M.e.length-3]="Resultat";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2115=function(M){if(--M.cbt<0){throw _2115;}
M.e.pop();
M.c.push(new RT.CallFrame(_2119,M.p));
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21019,570,2,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][121];
M.e[M.e.length-1]=50;
M.e[M.e.length-2]=50;
M.e[M.e.length-3]="Skitse";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _487=function(M){if(--M.cbt<0){throw _487;}
//"lambda body for #(struct:LamPositionalName area root/triangle-solver.rkt 751 0 27096 467)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2685,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27137,752,11,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2687,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27140,752,14,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-5],M.e[M.e.length-6],M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2092=function(M){if(--M.cbt<0){throw _2092;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2080=function(M){if(--M.cbt<0){throw _2080;}
M.e[M.e.length-1][0]=M.v;
M.v=M.e[M.e.length-1][0];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _484=function(M){if(--M.cbt<0){throw _484;}
//"lambda body for #(struct:LamPositionalName $angle-sum$ root/triangle-solver.rkt 738 0 26709 67)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26739,739,2,36]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="~a = ~a";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_2658,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26759,739,22,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][86];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2054=function(M){if(--M.cbt<0){throw _2054;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-37];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2048=function(M){if(--M.cbt<0){throw _2048;}
M.e[M.e.length-5]=M.v;
M.c.push(new RT.CallFrame(_2060,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20189,544,13,68]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-27][121];
M.c.push(new RT.CallFrame(_2062,M.p));
M.v=M.e[M.e.length-27][2][0][M.e[M.e.length-27][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20213,544,37,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2064,M.p));
M.v=M.e[M.e.length-29][2][0][M.e[M.e.length-29][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20216,544,40,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-20],M.e[M.e.length-19]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2032=function(M){if(--M.cbt<0){throw _2032;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2036,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20035,542,13,63]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-27][121];
M.c.push(new RT.CallFrame(_2038,M.p));
M.v=M.e[M.e.length-27][2][0][M.e[M.e.length-27][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20059,542,37,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2040,M.p));
M.v=M.e[M.e.length-29][2][0][M.e[M.e.length-29][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20062,542,40,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-25],M.e[M.e.length-24]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1084=function(M){if(--M.cbt<0){throw _1084;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1088,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10552,299,48,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-23][88];
M.c.push(new RT.CallFrame(_1090,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10565,299,61,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.p=M.e[M.e.length-24][87];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1998=function(M){if(--M.cbt<0){throw _1998;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2003,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19593,531,11,97]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-17][18];
M.c.push(new RT.CallFrame(_2005,M.p));
M.v=M.e[M.e.length-17][2][0][M.e[M.e.length-17][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19620,532,12,69]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="M~a ~aL~a ~aL~a ~aZ";
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-14];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-13];
M.e[M.e.length-7]=M.e[M.e.length-10];
M.a=7;
M.v=M.primitives["format"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1978=function(M){if(--M.cbt<0){throw _1978;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1983,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19462,526,13,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][104];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1964=function(M){if(--M.cbt<0){throw _1964;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1973,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19406,524,13,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][104];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1939=function(M){if(--M.cbt<0){throw _1939;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1001=function(M){if(--M.cbt<0){throw _1001;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1006,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9684,283,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][65];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3791=function(M){if(--M.cbt<0){throw _3791;}
M.c.push(new RT.PromptFrame(_3793,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_470,4,[M.e[M.e.length-1]],"$cosrel-angle$");
M.e[M.e.length-1][151]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1881=function(M){if(--M.cbt<0){throw _1881;}
M.c.push(new RT.CallFrame(_1885,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18342,489,11,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-15][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="fill-opacity";
M.e[M.e.length-3]="0.50";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1868=function(M){if(--M.cbt<0){throw _1868;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1873,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18188,486,11,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-15][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="stroke";
M.e[M.e.length-3]="#CE2D6A";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1835=function(M){if(--M.cbt<0){throw _1835;}
if(M.v===false){return(_1832)(M);}else{M.c.push(new RT.CallFrame(_1837,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17925,478,27,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][108];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _2720=function(M){if(--M.cbt<0){throw _2720;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2712=function(M){if(--M.cbt<0){throw _2712;}
M.e[M.e.length-1]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.NULL);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _470=function(M){if(--M.cbt<0){throw _470;}
//"lambda body for #(struct:LamPositionalName $cosrel-angle$ root/triangle-solver.rkt 681 0 24676 79)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24711,682,2,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_2479,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24733,682,24,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][78];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _850=function(M){if(--M.cbt<0){throw _850;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_853,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15194,382,18,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="{~a_1}";
M.e[M.e.length-2]=M.e[M.e.length-32];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1761=function(M){if(--M.cbt<0){throw _1761;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=400;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2664=function(M){if(--M.cbt<0){throw _2664;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.NULL));
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2630=function(M){if(--M.cbt<0){throw _2630;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2638,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26569,732,48,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-9][112][0][M.e[M.e.length-9][112][1]]);
M.c.push(new RT.CallFrame(_2640,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26576,732,55,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-14][161];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-18];
M.c.push(new RT.CallFrame(_2642,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26590,732,69,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-15][87];
M.c.push(new RT.CallFrame(_2644,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26600,732,79,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-16][68];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2414=function(M){if(--M.cbt<0){throw _2414;}
M.e.length-=(M.a-1);
return(_2415)(M);};




var _2552=function(M){if(--M.cbt<0){throw _2552;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1597=function(M){if(--M.cbt<0){throw _1597;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _670=function(M){if(--M.cbt<0){throw _670;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_674,M.p));
M.v=M.e[M.e.length-39][2][0][M.e[M.e.length-39][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13146,349,51,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-42][95]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-42].names[95]); }
M.e[M.e.length-3]=M.e[M.e.length-42][95];
M.e[M.e.length-1]=M.e[M.e.length-52];
M.c.push(new RT.CallFrame(_676,M.p));
M.v=M.e[M.e.length-42][2][0][M.e[M.e.length-42][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13164,349,69,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-43][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-43].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-43][87];
M.c.push(new RT.CallFrame(_678,M.p));
M.v=M.e[M.e.length-43][2][0][M.e[M.e.length-43][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",13174,349,79,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-44][68];
M.e[M.e.length-1]=M.e[M.e.length-52];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2503=function(M){if(--M.cbt<0){throw _2503;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1567=function(M){if(--M.cbt<0){throw _1567;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1557=function(M){if(--M.cbt<0){throw _1557;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1560,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3245,118,40,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["cadr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1530=function(M){if(--M.cbt<0){throw _1530;}
M.e[M.e.length-1]=M.v;
return(_1526)(M);};

var _2453=function(M){if(--M.cbt<0){throw _2453;}
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2451)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_2451)(M);}};

var _606=function(M){if(--M.cbt<0){throw _606;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _596=function(M){if(--M.cbt<0){throw _596;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-5],RT.makePair(M.e[M.e.length-10],RT.makePair(M.e[M.e.length-6],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-9],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-11],RT.NULL)));
M.v=RT.makePair("TODO",RT.NULL);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _575=function(M){if(--M.cbt<0){throw _575;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1650=function(M){if(--M.cbt<0){throw _1650;}
M.e.length-=(M.a-1);
return(_1651)(M);};

var _1385=function(M){if(--M.cbt<0){throw _1385;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2335=function(M){if(--M.cbt<0){throw _2335;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2344,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22556,619,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-9][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[37]); }
M.e[M.e.length-1]=M.e[M.e.length-9][37];
M.c.push(new RT.CallFrame(_2346,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22564,619,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-10][114][0][M.e[M.e.length-10][114][1]];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2317=function(M){if(--M.cbt<0){throw _2317;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2326,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22487,617,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-7][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-7].names[37]); }
M.e[M.e.length-1]=M.e[M.e.length-7][37];
M.c.push(new RT.CallFrame(_2328,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22495,617,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-8][112][0][M.e[M.e.length-8][112][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2301=function(M){if(--M.cbt<0){throw _2301;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2288=function(M){if(--M.cbt<0){throw _2288;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-31,26);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1323=function(M){if(--M.cbt<0){throw _1323;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1312=function(M){if(--M.cbt<0){throw _1312;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2244=function(M){if(--M.cbt<0){throw _2244;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2247,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21969,600,13,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],1,"/"));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1274=function(M){if(--M.cbt<0){throw _1274;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1288,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7828,238,14,121]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a^{\\circ}$";
M.e[M.e.length-2]=M.e[M.e.length-28];
M.c.push(new RT.CallFrame(_1290,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7892,239,25,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-24][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[78]); }
M.p=M.e[M.e.length-24][78];
M.e[M.e.length-1]=M.e[M.e.length-26];
M.e[M.e.length-2]=M.e[M.e.length-27];
M.e[M.e.length-3]=M.e[M.e.length-28];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1268=function(M){if(--M.cbt<0){throw _1268;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-19];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2212=function(M){if(--M.cbt<0){throw _2212;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2217,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21702,590,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-9],M.e[M.e.length-3]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3790=function(M){if(--M.cbt<0){throw _3790;}
M.e.length-=(M.a-1);
return(_3791)(M);};

var _1214=function(M){if(--M.cbt<0){throw _1214;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1219,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6977,223,16,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["sqrt"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2136=function(M){if(--M.cbt<0){throw _2136;}
M.c.push(new RT.CallFrame(_2140,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21244,576,4,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="fill";
M.e[M.e.length-3]="white";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1191=function(M){if(--M.cbt<0){throw _1191;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1195,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8532,252,40,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-6],M.e[M.e.length-12]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2102=function(M){if(--M.cbt<0){throw _2102;}
if (M.e[M.e.length-1][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-1].names[0]); }
M.e[M.e.length-1][109]=M.e[M.e.length-1][0];
M.v=RT.VOID;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2106,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20899,567,11,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][5];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=400;
M.e[M.e.length-4]=400;
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2090=function(M){if(--M.cbt<0){throw _2090;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="text-anchor";
M.v="start";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2076=function(M){if(--M.cbt<0){throw _2076;}
return(_2074)(M);};

var _483=function(M){if(--M.cbt<0){throw _483;}
//"lambda body for #(struct:LamPositionalName angle-sum root/triangle-solver.rkt 735 0 26643 64)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26669,736,2,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="180^{\\circ} - ~a - ~a";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2052=function(M){if(--M.cbt<0){throw _2052;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2044=function(M){if(--M.cbt<0){throw _2044;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2028=function(M){if(--M.cbt<0){throw _2028;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_2032,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19986,541,13,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-27][121];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.e[M.e.length-2]=M.e[M.e.length-19];
M.e[M.e.length-3]=M.e[M.e.length-41];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1072=function(M){if(--M.cbt<0){throw _1072;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1062=function(M){if(--M.cbt<0){throw _1062;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1066,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10399,297,48,57]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.e[M.e.length-3]=M.e[M.e.length-23][88];
M.c.push(new RT.CallFrame(_1068,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10412,297,61,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.p=M.e[M.e.length-24][87];
M.e[M.e.length-1]=M.e[M.e.length-26];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1046=function(M){if(--M.cbt<0){throw _1046;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1957=function(M){if(--M.cbt<0){throw _1957;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1030=function(M){if(--M.cbt<0){throw _1030;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-20,15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1006=function(M){if(--M.cbt<0){throw _1006;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1011,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9715,284,14,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-18];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3789=function(M){if(--M.cbt<0){throw _3789;}
M.c.push(new RT.PromptFrame(_3791,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_469,3,[M.e[M.e.length-1]],"cosrel-angle");
M.e[M.e.length-1][78]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1909=function(M){if(--M.cbt<0){throw _1909;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1914,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19024,512,13,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1916,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19027,512,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-7],M.e[M.e.length-9],M.e[M.e.length-11]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1877=function(M){if(--M.cbt<0){throw _1877;}
M.c.push(new RT.CallFrame(_1881,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18299,488,11,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-15][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="fill";
M.e[M.e.length-3]="white";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1862=function(M){if(--M.cbt<0){throw _1862;}
return(_1860)(M);};


var _1829=function(M){if(--M.cbt<0){throw _1829;}
M.e[M.e.length-1]=M.v;
return(_1811)(M);};



var _409=function(M){if(--M.cbt<0){throw _409;}
//"lambda body for #(struct:LamPositionalName triangle-vertices/sss root/triangle-solver.rkt 193 2 5437 965)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1310,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5488,194,13,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1312,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5494,194,19,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1314,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5497,194,22,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][59];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-18];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _469=function(M){if(--M.cbt<0){throw _469;}
//"lambda body for #(struct:LamPositionalName cosrel-angle root/triangle-solver.rkt 675 0 24461 213)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2472,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24512,676,22,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1759=function(M){if(--M.cbt<0){throw _1759;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeFloat(2.0);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1872=function(M){if(--M.cbt<0){throw _1872;}
M.e.length-=(M.a-1);
return(_1873)(M);};

var _2662=function(M){if(--M.cbt<0){throw _2662;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2664,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",26852,743,8,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="~a\\cdot\\sin(~a)";
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1721=function(M){if(--M.cbt<0){throw _1721;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2424=function(M){if(--M.cbt<0){throw _2424;}
M.e.length-=(M.a-1);
return(_2423)(M);};


var _1651=function(M){if(--M.cbt<0){throw _1651;}
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6748,217,2,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][189];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.e[M.e.length-5]=M.e[M.e.length-18];
M.e[M.e.length-6]=M.e[M.e.length-19];
M.e[M.e.length-7]=M.e[M.e.length-20];
M.e[M.e.length-8]=M.e[M.e.length-21];
M.e[M.e.length-9]=M.e[M.e.length-22];
M.e[M.e.length-10]=M.e[M.e.length-14];
M.e[M.e.length-11]=M.e[M.e.length-15];
M.e[M.e.length-12]=M.e[M.e.length-16];
M.a=12;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-22,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1633=function(M){if(--M.cbt<0){throw _1633;}
M.e[M.e.length-7]=M.v;
M.c.push(new RT.CallFrame(_1637,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5188,185,10,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-19][73]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-19].names[73]); }
M.p=M.e[M.e.length-19][73];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-21];
M.e[M.e.length-4]=M.e[M.e.length-28];
M.e[M.e.length-5]=M.e[M.e.length-26];
M.e[M.e.length-6]=M.e[M.e.length-27];
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1619=function(M){if(--M.cbt<0){throw _1619;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeFloat(180.0);
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2548=function(M){if(--M.cbt<0){throw _2548;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1595=function(M){if(--M.cbt<0){throw _1595;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _453=function(M){if(--M.cbt<0){throw _453;}
//"lambda body for #(struct:LamPositionalName screen-y root/triangle-solver.rkt 442 4 16922 143)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1750,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16950,443,16,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, RT.makeFloat(0.75),M.e[M.e.length-3]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2366=function(M){if(--M.cbt<0){throw _2366;}
if((M.a-2)===0){return(_2360)(M);}else{RT.si_context_expected(2)(M);
}};

var _1560=function(M){if(--M.cbt<0){throw _1560;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3287,119,31,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][29];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-4];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1553=function(M){if(--M.cbt<0){throw _1553;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2447=function(M){if(--M.cbt<0){throw _2447;}
M.a=1;
return(_2448)(M);};

var _492=function(M){if(--M.cbt<0){throw _492;}
//"lambda body for #(struct:LamPositionalName maybe-make-triangle root/triangle-solver.rkt 856 0 33597 3605)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_2901,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33685,858,16,121]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-9][171];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-9][205];
M.v=RT.makePair(M.e[M.e.length-10],RT.makePair(M.e[M.e.length-11],RT.makePair(M.e[M.e.length-12],RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-15],RT.NULL))))));
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _591=function(M){if(--M.cbt<0){throw _591;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15898,400,6,140]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-8][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[41]); }
M.e[M.e.length-4]=M.e[M.e.length-8][41];
M.c.push(new RT.CallFrame(_596,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15920,401,7,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_598,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",15926,401,13,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-13][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-13].names[34]); }
M.p=M.e[M.e.length-13][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _571=function(M){if(--M.cbt<0){throw _571;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_575,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16390,414,45,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][61];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1403=function(M){if(--M.cbt<0){throw _1403;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1381=function(M){if(--M.cbt<0){throw _1381;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_1385,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6178,207,85,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-20][68];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2328=function(M){if(--M.cbt<0){throw _2328;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2310=function(M){if(--M.cbt<0){throw _2310;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2299=function(M){if(--M.cbt<0){throw _2299;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2308,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22418,615,13,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-5][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[36]); }
M.e[M.e.length-1]=M.e[M.e.length-5][36];
M.c.push(new RT.CallFrame(_2310,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22426,615,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][113][0][M.e[M.e.length-6][113][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2284=function(M){if(--M.cbt<0){throw _2284;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2288,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22257,610,5,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-31][47]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-31].names[47]); }
M.p=M.e[M.e.length-31][47];
M.e[M.e.length-1]=M.e[M.e.length-32];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1321=function(M){if(--M.cbt<0){throw _1321;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1332,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5588,196,13,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1334,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5594,196,19,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1336,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5597,196,22,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][59];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1310=function(M){if(--M.cbt<0){throw _1310;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1321,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5538,195,13,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1323,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5544,195,19,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1325,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5547,195,22,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][59];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-20];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2241=function(M){if(--M.cbt<0){throw _2241;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2244,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21946,599,13,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2235=function(M){if(--M.cbt<0){throw _2235;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2238,M.p));
M.v=M.e[M.e.length-18][2][0][M.e[M.e.length-18][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21882,597,16,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["max"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1264=function(M){if(--M.cbt<0){throw _1264;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1268,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7499,234,48,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-24][81]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[81]); }
M.e[M.e.length-3]=M.e[M.e.length-24][81];
M.e[M.e.length-1]=M.e[M.e.length-33];
M.e[M.e.length-2]=M.e[M.e.length-34];
M.c.push(new RT.CallFrame(_1270,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7516,234,65,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a^{\\circ}";
M.e[M.e.length-2]=M.e[M.e.length-27];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2209=function(M){if(--M.cbt<0){throw _2209;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=3;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1244=function(M){if(--M.cbt<0){throw _1244;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-8],RT.makePair(M.e[M.e.length-19],RT.makePair(M.e[M.e.length-20],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-18],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-6],RT.NULL)));
M.e[M.e.length-4]=RT.makePair(M.e[M.e.length-12],RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-15],RT.makePair(M.e[M.e.length-16],RT.makePair(M.e[M.e.length-17],RT.NULL))))));
M.c.push(new RT.CallFrame(_1258,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7260,231,7,747]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["append"];
M.c.push(new RT.CallFrame(_1260,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7276,232,8,674]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1262,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7421,233,14,129]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-23];
M.c.push(new RT.CallFrame(_1264,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7476,234,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-24][81]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[81]); }
M.p=M.e[M.e.length-24][81];
M.e[M.e.length-1]=M.e[M.e.length-27];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-29];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2180=function(M){if(--M.cbt<0){throw _2180;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2189,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21567,586,13,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-8][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[37]); }
M.e[M.e.length-1]=M.e[M.e.length-8][37];
M.c.push(new RT.CallFrame(_2191,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21575,586,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-9][113][0][M.e[M.e.length-9][113][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2162=function(M){if(--M.cbt<0){throw _2162;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2171,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21499,584,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-6][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[36]); }
M.e[M.e.length-1]=M.e[M.e.length-6][36];
M.c.push(new RT.CallFrame(_2173,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21507,584,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-7][114][0][M.e[M.e.length-7][114][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2131=function(M){if(--M.cbt<0){throw _2131;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2136,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21206,575,4,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="stroke";
M.e[M.e.length-3]="black";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1189=function(M){if(--M.cbt<0){throw _1189;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2094=function(M){if(--M.cbt<0){throw _2094;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=100;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2088=function(M){if(--M.cbt<0){throw _2088;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="color";
M.v="red";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2070=function(M){if(--M.cbt<0){throw _2070;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _430=function(M){if(--M.cbt<0){throw _430;}
//"lambda body for #(struct:LamPositionalName raphael-scale root/triangle-solver.rkt 96 0 2260 321)"

M.unspliceRestFromStack(3,(M.a-3));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1494,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2315,97,8,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2050=function(M){if(--M.cbt<0){throw _2050;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2054,M.p));
M.v=M.e[M.e.length-27][2][0][M.e[M.e.length-27][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20154,543,55,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2056,M.p));
M.v=M.e[M.e.length-29][2][0][M.e[M.e.length-29][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20157,543,58,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-23],M.e[M.e.length-21]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2042=function(M){if(--M.cbt<0){throw _2042;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-36];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1088=function(M){if(--M.cbt<0){throw _1088;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-17];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1082=function(M){if(--M.cbt<0){throw _1082;}
M.e[M.e.length-4]=M.v;
M.v=RT.makePair("Der kendes to vinkler og deres fælles side i trekanten.",RT.makePair("Vinkelsumsformlen bruges til at udregne den sidste vinkel i trekanten.",RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.NULL))))));
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1060=function(M){if(--M.cbt<0){throw _1060;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1082,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10474,298,14,138]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-23];
M.c.push(new RT.CallFrame(_1084,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10529,299,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.p=M.e[M.e.length-23][88];
M.e[M.e.length-1]=M.e[M.e.length-29];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-31];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1042=function(M){if(--M.cbt<0){throw _1042;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1046,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10183,294,73,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-23][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[87]); }
M.p=M.e[M.e.length-23][87];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1036=function(M){if(--M.cbt<0){throw _1036;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1040,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10153,294,43,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-22][86]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[86]); }
M.e[M.e.length-2]=M.e[M.e.length-22][86];
M.c.push(new RT.CallFrame(_1042,M.p));
M.v=M.e[M.e.length-22][2][0][M.e[M.e.length-22][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10164,294,54,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-23][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[87]); }
M.p=M.e[M.e.length-23][87];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1018=function(M){if(--M.cbt<0){throw _1018;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1022,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9783,286,29,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1016=function(M){if(--M.cbt<0){throw _1016;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-20],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-18],RT.makePair(M.e[M.e.length-19],RT.makePair(M.e[M.e.length-8],RT.NULL)));
M.e[M.e.length-4]=RT.makePair(M.e[M.e.length-12],RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-15],RT.makePair(M.e[M.e.length-16],RT.makePair(M.e[M.e.length-17],RT.NULL))))));
M.c.push(new RT.CallFrame(_1030,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9897,290,7,773]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["append"];
M.c.push(new RT.CallFrame(_1032,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9913,291,8,700]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1034,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10079,293,14,147]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-28];
M.c.push(new RT.CallFrame(_1036,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10135,294,25,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-22][86]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[86]); }
M.p=M.e[M.e.length-22][86];
M.e[M.e.length-1]=M.e[M.e.length-28];
M.e[M.e.length-2]=M.e[M.e.length-29];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2808=function(M){if(--M.cbt<0){throw _2808;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="click";
//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-6][169];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1905=function(M){if(--M.cbt<0){throw _1905;}
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1909,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18989,511,13,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1911,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18992,511,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-5],M.e[M.e.length-7],M.e[M.e.length-9]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1853=function(M){if(--M.cbt<0){throw _1853;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1827=function(M){if(--M.cbt<0){throw _1827;}
if(M.v===false){return(_1824)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-3];
M.c.push(new RT.CallFrame(_1829,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17875,477,27,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][108];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _1819=function(M){if(--M.cbt<0){throw _1819;}
if(M.v===false){return(_1816)(M);}else{M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-4];
M.c.push(new RT.CallFrame(_1821,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17825,476,27,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][108];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _1801=function(M){if(--M.cbt<0){throw _1801;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1806,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17717,473,17,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-7][114][0][M.e[M.e.length-7][114][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2708=function(M){if(--M.cbt<0){throw _2708;}
M.e[M.e.length-1]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.NULL);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2700=function(M){if(--M.cbt<0){throw _2700;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["sqrt"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1756=function(M){if(--M.cbt<0){throw _1756;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17031,446,8,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1759,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17034,446,11,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1761,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17037,446,14,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1763,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17040,446,17,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNegate(M, M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1750=function(M){if(--M.cbt<0){throw _1750;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1753,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16978,444,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.makeFloat(-1.0);
M.a=2;
M.v=M.primitives["max"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1717=function(M){if(--M.cbt<0){throw _1717;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.c.push(new RT.CallFrame(_1721,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16091,405,50,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][67];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1701=function(M){if(--M.cbt<0){throw _1701;}
M.e[M.e.length-9]=M.v;
M.c.push(new RT.CallFrame(_1705,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",11973,326,39,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1679=function(M){if(--M.cbt<0){throw _1679;}
M.e[M.e.length-5]=M.v;
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1645=function(M){if(--M.cbt<0){throw _1645;}
M.p=M.e[M.e.length-12];
M.e[M.e.length-12]=M.v;
M.a=12;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-25,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1629=function(M){if(--M.cbt<0){throw _1629;}
M.e[M.e.length-6]=M.v;
M.c.push(new RT.CallFrame(_1633,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5145,184,10,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-19][73]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-19].names[73]); }
M.p=M.e[M.e.length-19][73];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-27];
M.e[M.e.length-5]=M.e[M.e.length-26];
M.e[M.e.length-6]=M.e[M.e.length-28];
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1617=function(M){if(--M.cbt<0){throw _1617;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeFloat(3.141592653589793);
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2544=function(M){if(--M.cbt<0){throw _2544;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_2548,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25921,719,52,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][156];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2524=function(M){if(--M.cbt<0){throw _2524;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2538,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25837,718,8,109]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$m_~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-14];
M.c.push(new RT.CallFrame(_2540,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",25888,719,19,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][158];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-18];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2361=function(M){if(--M.cbt<0){throw _2361;}
if((M.a-2)===0){return(_2360)(M);}else{RT.si_context_expected(2)(M);
}};


var _1551=function(M){if(--M.cbt<0){throw _1551;}
M.e[M.e.length-1]=M.v;
M.v=RT.isList(M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2439=function(M){if(--M.cbt<0){throw _2439;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_2443)(M);}else{M.c.push(new RT.CallFrame(_2447,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",24047,659,10,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][141];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _446=function(M){if(--M.cbt<0){throw _446;}
//"lambda body for #(struct:LamPositionalName triangle/ssa root/triangle-solver.rkt 260 0 8766 733)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9443,276,2,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-7][192];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_1685,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9480,276,39,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][67];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _491=function(M){if(--M.cbt<0){throw _491;}
//"lambda body for #(struct:LamPositionalName values-map root/triangle-solver.rkt 853 0 33543 52)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33570,854,2,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.c.push(new RT.CallFrame(_2893,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",33584,854,16,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5][125][0][M.e[M.e.length-5][125][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2380=function(M){if(--M.cbt<0){throw _2380;}
M.p=M.e[M.e.length-14];
M.e[M.e.length-14]=M.v;
M.a=14;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-27,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1399=function(M){if(--M.cbt<0){throw _1399;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_2367=RT.si_context_expected(2);

var _1363=function(M){if(--M.cbt<0){throw _1363;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1367,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5991,205,49,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-22][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[78]); }
M.p=M.e[M.e.length-22][78];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=M.e[M.e.length-25];
M.e[M.e.length-3]=M.e[M.e.length-23];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2294=function(M){if(--M.cbt<0){throw _2294;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2299,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22384,614,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-4][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[36]); }
M.e[M.e.length-1]=M.e[M.e.length-4][36];
M.c.push(new RT.CallFrame(_2301,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22392,614,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5][112][0][M.e[M.e.length-5][112][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2280=function(M){if(--M.cbt<0){throw _2280;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2284,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22226,609,5,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-31][46]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-31].names[46]); }
M.p=M.e[M.e.length-31][46];
M.e[M.e.length-1]=M.e[M.e.length-32];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2272=function(M){if(--M.cbt<0){throw _2272;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2259=function(M){if(--M.cbt<0){throw _2259;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22076,605,4,210]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-30][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-30].names[41]); }
M.e[M.e.length-5]=M.e[M.e.length-30][41];
M.c.push(new RT.CallFrame(_2262,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22097,606,5,60]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_2264,M.p));
M.v=M.e[M.e.length-33][2][0][M.e[M.e.length-33][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22103,606,11,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-35][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-35].names[34]); }
M.p=M.e[M.e.length-35][34];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2238=function(M){if(--M.cbt<0){throw _2238;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2241,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21914,598,16,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
M.v=M.primitives["max"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2232=function(M){if(--M.cbt<0){throw _2232;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2235,M.p));
M.v=M.e[M.e.length-17][2][0][M.e[M.e.length-17][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21850,596,16,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
M.v=M.primitives["max"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1262=function(M){if(--M.cbt<0){throw _1262;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="Dernæst udregnes de to sidste vinkler ved hjælp af cosinusrelationer (så vinkelsummen kan bruges til kontrol).";
M.c.push(new RT.CallFrame(_1274,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7692,236,14,121]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a^{\\circ}$";
M.e[M.e.length-2]=M.e[M.e.length-27];
M.c.push(new RT.CallFrame(_1276,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7756,237,25,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-24][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[78]); }
M.p=M.e[M.e.length-24][78];
M.e[M.e.length-1]=M.e[M.e.length-26];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-27];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2207=function(M){if(--M.cbt<0){throw _2207;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2212,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21669,589,13,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2214,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21672,589,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1241=function(M){if(--M.cbt<0){throw _1241;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2173=function(M){if(--M.cbt<0){throw _2173;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2155=function(M){if(--M.cbt<0){throw _2155;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1204=function(M){if(--M.cbt<0){throw _1204;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1208,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8616,254,47,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][61];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1187=function(M){if(--M.cbt<0){throw _1187;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8554,253,8,148]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-9][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[41]); }
M.e[M.e.length-4]=M.e[M.e.length-9][41];
M.c.push(new RT.CallFrame(_1198,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8578,254,9,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1200,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8584,254,15,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _2086=function(M){if(--M.cbt<0){throw _2086;}
M.e[M.e.length-1][0]=M.v;
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20500,554,23,201]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-5][29];
M.c.push(new RT.CallFrame(_2088,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20538,555,24,124]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-8][29];
M.c.push(new RT.CallFrame(_2090,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20552,555,38,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-11][121];
M.e[M.e.length-1]=20;
M.c.push(new RT.CallFrame(_2092,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20579,555,65,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2094,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20582,555,68,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 20,M.e[M.e.length-12][0]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2068=function(M){if(--M.cbt<0){throw _2068;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedAdd(M, 25,M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2062=function(M){if(--M.cbt<0){throw _2062;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2066,M.p));
M.v=M.e[M.e.length-27][2][0][M.e[M.e.length-27][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20229,544,53,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2068,M.p));
M.v=M.e[M.e.length-28][2][0][M.e[M.e.length-28][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20235,544,59,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2070,M.p));
M.v=M.e[M.e.length-30][2][0][M.e[M.e.length-30][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20238,544,62,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-24],M.e[M.e.length-23]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1123=function(M){if(--M.cbt<0){throw _1123;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1126,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9191,269,15,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1128,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9197,269,21,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1130,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9200,269,24,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][59];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2040=function(M){if(--M.cbt<0){throw _2040;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1094=function(M){if(--M.cbt<0){throw _1094;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1074=function(M){if(--M.cbt<0){throw _1074;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1066=function(M){if(--M.cbt<0){throw _1066;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-18];
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1052=function(M){if(--M.cbt<0){throw _1052;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1032=function(M){if(--M.cbt<0){throw _1032;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1104,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10622,300,8,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-23][69];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-34];
M.e[M.e.length-4]=M.e[M.e.length-32];
M.e[M.e.length-5]=M.e[M.e.length-33];
M.e[M.e.length-6]=M.e[M.e.length-22];
M.e[M.e.length-7]=M.e[M.e.length-26];
M.e[M.e.length-8]=M.e[M.e.length-27];
M.e[M.e.length-9]=M.e[M.e.length-28];
M.e[M.e.length-10]=M.e[M.e.length-29];
M.e[M.e.length-11]=M.e[M.e.length-30];
M.e[M.e.length-12]=M.e[M.e.length-31];
M.a=12;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1026=function(M){if(--M.cbt<0){throw _1026;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1011=function(M){if(--M.cbt<0){throw _1011;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9739,285,6,932]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-9][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[41]); }
M.e[M.e.length-5]=M.e[M.e.length-9][41];
M.c.push(new RT.CallFrame(_1016,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9761,286,7,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1018,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9767,286,13,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1900=function(M){if(--M.cbt<0){throw _1900;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _1821=function(M){if(--M.cbt<0){throw _1821;}
M.e[M.e.length-1]=M.v;
return(_1811)(M);};

var _1815=function(M){if(--M.cbt<0){throw _1815;}
M.e[M.e.length-1]=M.v;
return(_1811)(M);};

var _1796=function(M){if(--M.cbt<0){throw _1796;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1801,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17687,472,17,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][113][0][M.e[M.e.length-6][113][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2706=function(M){if(--M.cbt<0){throw _2706;}
M.e[M.e.length-4]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3],M.e[M.e.length-4]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2698=function(M){if(--M.cbt<0){throw _2698;}
M.e[M.e.length-8]=M.v;
M.a=8;
M.v=M.primitives["format"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1753=function(M){if(--M.cbt<0){throw _1753;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1756,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17008,445,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.makeFloat(1.0);
M.a=2;
M.v=M.primitives["min"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1748=function(M){if(--M.cbt<0){throw _1748;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=400;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1740=function(M){if(--M.cbt<0){throw _1740;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1743,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16817,437,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.makeFloat(1.0);
M.a=2;
M.v=M.primitives["min"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1711=function(M){if(--M.cbt<0){throw _1711;}
M.e[M.e.length-8]=M.v;
M.e[M.e.length-9]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-10];
M.e[M.e.length-10]=M.v;
M.a=10;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-20,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1695=function(M){if(--M.cbt<0){throw _1695;}
M.e[M.e.length-10]=M.v;
M.v=M.e[M.e.length-15];
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-21,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1673=function(M){if(--M.cbt<0){throw _1673;}
M.e[M.e.length-8]=M.v;
M.e[M.e.length-9]=M.e[M.e.length-13];
M.v=M.e[M.e.length-14];
M.p=M.e[M.e.length-10];
M.e[M.e.length-10]=M.v;
M.a=10;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-20,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1663=function(M){if(--M.cbt<0){throw _1663;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-11];
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,">="))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1641=function(M){if(--M.cbt<0){throw _1641;}
M.e[M.e.length-10]=M.v;
M.e[M.e.length-11]=RT.makePair(RT.makePair(sym1858,RT.makePair("Omkreds",RT.NULL)),RT.NULL);
M.c.push(new RT.CallFrame(_1645,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5327,189,10,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-19][75]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-19].names[75]); }
M.p=M.e[M.e.length-19][75];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-26];
M.e[M.e.length-5]=M.e[M.e.length-27];
M.e[M.e.length-6]=M.e[M.e.length-28];
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1625=function(M){if(--M.cbt<0){throw _1625;}
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=RT.makePair(RT.makePair(sym1858,RT.makePair("Vinkelhalveringslinjer",RT.NULL)),RT.NULL);
M.c.push(new RT.CallFrame(_1629,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5102,183,10,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-19][73]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-19].names[73]); }
M.p=M.e[M.e.length-19][73];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-26];
M.e[M.e.length-5]=M.e[M.e.length-27];
M.e[M.e.length-6]=M.e[M.e.length-28];
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1615=function(M){if(--M.cbt<0){throw _1615;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1611=function(M){if(--M.cbt<0){throw _1611;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1615,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4641,164,19,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2520=function(M){if(--M.cbt<0){throw _2520;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1585=function(M){if(--M.cbt<0){throw _1585;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1587,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4209,148,13,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["sqr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1549=function(M){if(--M.cbt<0){throw _1549;}
if(M.v===false){return(_1546)(M);}else{M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3167,117,12,181]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4][14][0][M.e[M.e.length-4][14][1]];
M.e[M.e.length-1]=new RT.Closure(_432,1,[M.e[M.e.length-4],M.e[M.e.length-5]],"...angle-solver.rkt:117:22");
M.c.push(new RT.CallFrame(_1553,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3337,120,22,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _1528=function(M){if(--M.cbt<0){throw _1528;}
if(M.v===false){return(_1525)(M);}else{M.c.push(new RT.CallFrame(_1530,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2827,109,37,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["number->string"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _445=function(M){if(--M.cbt<0){throw _445;}
//"lambda body for #(struct:LamPositionalName triangle/sas root/triangle-solver.rkt 243 0 8071 693)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8708,258,2,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-7][191];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.c.push(new RT.CallFrame(_1679,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8738,258,32,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][67];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _444=function(M){if(--M.cbt<0){throw _444;}
//"lambda body for #(struct:LamPositionalName triangle/ass root/triangle-solver.rkt 219 0 6795 1274)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][2][0][M.e[M.e.length-1][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8013,241,2,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-10]=M.e[M.e.length-11][190];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.e[M.e.length-5]=M.e[M.e.length-18];
M.e[M.e.length-6]=M.e[M.e.length-19];
M.e[M.e.length-7]=M.e[M.e.length-20];
M.c.push(new RT.CallFrame(_1673,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8036,241,25,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][67];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2378=function(M){if(--M.cbt<0){throw _2378;}
M.e[M.e.length-13]=M.v;
M.c.push(new RT.CallFrame(_2380,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23023,627,56,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=5;
M.v=M.primitives["list-ref"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1395=function(M){if(--M.cbt<0){throw _1395;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_1399,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6329,209,85,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-20][68];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

_2362=RT.si_context_expected(2);



var _1340=function(M){if(--M.cbt<0){throw _1340;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1329=function(M){if(--M.cbt<0){throw _1329;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2268=function(M){if(--M.cbt<0){throw _2268;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_2272,M.p));
M.v=M.e[M.e.length-33][2][0][M.e[M.e.length-33][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22139,606,47,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-35][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-35].names[34]); }
M.p=M.e[M.e.length-35][34];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2256=function(M){if(--M.cbt<0){throw _2256;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2259,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22061,604,13,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],1,"/"));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1298=function(M){if(--M.cbt<0){throw _1298;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2229=function(M){if(--M.cbt<0){throw _2229;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2232,M.p));
M.v=M.e[M.e.length-16][2][0][M.e[M.e.length-16][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21823,595,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-9],M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2223=function(M){if(--M.cbt<0){throw _2223;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2226,M.p));
M.v=M.e[M.e.length-14][2][0][M.e[M.e.length-14][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21774,593,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-9],M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2200=function(M){if(--M.cbt<0){throw _2200;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1237=function(M){if(--M.cbt<0){throw _1237;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1241,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7082,225,40,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-6],M.e[M.e.length-17]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2171=function(M){if(--M.cbt<0){throw _2171;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2180,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21533,585,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-7][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-7].names[37]); }
M.e[M.e.length-1]=M.e[M.e.length-7][37];
M.c.push(new RT.CallFrame(_2182,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21541,585,21,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-8][112][0][M.e[M.e.length-8][112][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1224=function(M){if(--M.cbt<0){throw _1224;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1200=function(M){if(--M.cbt<0){throw _1200;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1204,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8600,254,31,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1195=function(M){if(--M.cbt<0){throw _1195;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1180=function(M){if(--M.cbt<0){throw _1180;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1184,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8479,251,40,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-5],M.e[M.e.length-13]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1169=function(M){if(--M.cbt<0){throw _1169;}
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1173,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8427,250,16,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["sqrt"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1145=function(M){if(--M.cbt<0){throw _1145;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2060=function(M){if(--M.cbt<0){throw _2060;}
M.e[M.e.length-6]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.makePair(M.e[M.e.length-4],RT.makePair(M.e[M.e.length-5],RT.makePair(M.e[M.e.length-6],RT.NULL))))));
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1128=function(M){if(--M.cbt<0){throw _1128;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1119=function(M){if(--M.cbt<0){throw _1119;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]="the given side, side, and, angle will not form a triangle ~a, ~a, and, ~a.";
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1096=function(M){if(--M.cbt<0){throw _1096;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1068=function(M){if(--M.cbt<0){throw _1068;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-34];
M.c.push(new RT.CallFrame(_1072,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10433,297,82,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-24][87];
M.c.push(new RT.CallFrame(_1074,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10443,297,92,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-25][68];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1054=function(M){if(--M.cbt<0){throw _1054;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1040=function(M){if(--M.cbt<0){throw _1040;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_1052,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10203,294,93,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-21][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-21].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-21][87];
M.c.push(new RT.CallFrame(_1054,M.p));
M.v=M.e[M.e.length-21][2][0][M.e[M.e.length-21][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10213,294,103,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-22][68];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1022=function(M){if(--M.cbt<0){throw _1022;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1026,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9799,286,45,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][61];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-23];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _1895=function(M){if(--M.cbt<0){throw _1895;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1900,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",18812,506,12,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][29];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="font-family";
M.e[M.e.length-3]="Open Sans";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _3757=function(M){if(--M.cbt<0){throw _3757;}
M.c.push(new RT.PromptFrame(_3761,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v="white";
M.e[M.e.length-1][126]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1813=function(M){if(--M.cbt<0){throw _1813;}
if(M.v===false){return(_1810)(M);}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.c.push(new RT.CallFrame(_1815,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17781,475,30,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=M.primitives["list-ref"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1791=function(M){if(--M.cbt<0){throw _1791;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1796,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17658,471,17,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5][112][0][M.e[M.e.length-5][112][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2704=function(M){if(--M.cbt<0){throw _2704;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2706,M.p));
M.v=M.e[M.e.length-17][2][0][M.e[M.e.length-17][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",27550,757,60,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-16],M.e[M.e.length-20]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2696=function(M){if(--M.cbt<0){throw _2696;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair("Herons formel anvendes til at udregne arealet.",RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.NULL)));
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1880=function(M){if(--M.cbt<0){throw _1880;}
M.e.length-=(M.a-1);
return(_1881)(M);};

var _1746=function(M){if(--M.cbt<0){throw _1746;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeFloat(2.0);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1737=function(M){if(--M.cbt<0){throw _1737;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1740,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16787,436,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.makeFloat(-1.0);
M.a=2;
M.v=M.primitives["max"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1705=function(M){if(--M.cbt<0){throw _1705;}
M.e[M.e.length-10]=M.v;
M.v=M.e[M.e.length-15];
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-21,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1691=function(M){if(--M.cbt<0){throw _1691;}
M.e[M.e.length-9]=M.v;
M.c.push(new RT.CallFrame(_1695,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10717,301,43,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][67];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1667=function(M){if(--M.cbt<0){throw _1667;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,">="))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1661=function(M){if(--M.cbt<0){throw _1661;}
if(M.v===false){return(_1658)(M);}else{M.c.push(new RT.CallFrame(_1665,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6582,214,27,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1667,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6586,214,31,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-11],M.e[M.e.length-12]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1637=function(M){if(--M.cbt<0){throw _1637;}
M.e[M.e.length-8]=M.v;
M.e[M.e.length-9]=RT.makePair(RT.makePair(sym1858,RT.makePair("Areal",RT.NULL)),RT.NULL);
M.c.push(new RT.CallFrame(_1641,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5262,187,10,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-19][74]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-19].names[74]); }
M.p=M.e[M.e.length-19][74];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-26];
M.e[M.e.length-5]=M.e[M.e.length-27];
M.e[M.e.length-6]=M.e[M.e.length-28];
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1621=function(M){if(--M.cbt<0){throw _1621;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=RT.makePair(RT.makePair(sym1858,RT.makePair("Højder",RT.NULL)),RT.NULL);
M.c.push(new RT.CallFrame(_1625,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",5004,181,10,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-25][72]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-25].names[72]); }
M.p=M.e[M.e.length-25][72];
M.e[M.e.length-1]=M.e[M.e.length-26];
M.e[M.e.length-2]=M.e[M.e.length-27];
M.e[M.e.length-3]=M.e[M.e.length-28];
M.e[M.e.length-4]=M.e[M.e.length-29];
M.e[M.e.length-5]=M.e[M.e.length-30];
M.e[M.e.length-6]=M.e[M.e.length-31];
M.e[M.e.length-7]=M.e[M.e.length-32];
M.e[M.e.length-8]=M.e[M.e.length-33];
M.e[M.e.length-9]=M.e[M.e.length-34];
M.e[M.e.length-10]=M.e[M.e.length-35];
M.e[M.e.length-11]=M.e[M.e.length-36];
M.e[M.e.length-12]=M.e[M.e.length-37];
M.a=12;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1613=function(M){if(--M.cbt<0){throw _1613;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedMul(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1609=function(M){if(--M.cbt<0){throw _1609;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedMul(M, -2,M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2517=function(M){if(--M.cbt<0){throw _2517;}
return(_2509)(M);};

var _1583=function(M){if(--M.cbt<0){throw _1583;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["make-exn:fail:contract"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _1523=function(M){if(--M.cbt<0){throw _1523;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1528,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2764,108,37,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["number?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2429=function(M){if(--M.cbt<0){throw _2429;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_2433,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23864,650,64,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][128];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=sym1887;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2406=function(M){if(--M.cbt<0){throw _2406;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2413,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23617,644,7,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2376=function(M){if(--M.cbt<0){throw _2376;}
M.e[M.e.length-12]=M.v;
M.c.push(new RT.CallFrame(_2378,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23007,627,40,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=4;
M.v=M.primitives["list-ref"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1377=function(M){if(--M.cbt<0){throw _1377;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1381,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6142,207,49,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-22][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[78]); }
M.p=M.e[M.e.length-22][78];
M.e[M.e.length-1]=M.e[M.e.length-23];
M.e[M.e.length-2]=M.e[M.e.length-25];
M.e[M.e.length-3]=M.e[M.e.length-24];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};





var _2264=function(M){if(--M.cbt<0){throw _2264;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_2268,M.p));
M.v=M.e[M.e.length-33][2][0][M.e[M.e.length-33][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22121,606,29,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-35][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-35].names[34]); }
M.p=M.e[M.e.length-35][34];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2253=function(M){if(--M.cbt<0){throw _2253;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2256,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22038,603,13,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-10],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],1,"/"));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1284=function(M){if(--M.cbt<0){throw _1284;}
M.e[M.e.length-5]=M.v;
M.a=5;
M.v=M.primitives["format"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2220=function(M){if(--M.cbt<0){throw _2220;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2223,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21750,592,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-9],M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1258=function(M){if(--M.cbt<0){throw _1258;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-20,15);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2198=function(M){if(--M.cbt<0){throw _2198;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2207,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21636,588,13,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_2209,M.p));
M.v=M.e[M.e.length-11][2][0][M.e[M.e.length-11][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",21639,588,16,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-9],M.e[M.e.length-8],M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2164=function(M){if(--M.cbt<0){throw _2164;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2122=function(M){if(--M.cbt<0){throw _2122;}
M.e.length-=(M.a-1);
return(_2123)(M);};

var _1198=function(M){if(--M.cbt<0){throw _1198;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-7],RT.makePair(M.e[M.e.length-15],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-5],RT.NULL)));
M.v=RT.makePair("TODO",RT.NULL);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-15,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2101=function(M){if(--M.cbt<0){throw _2101;}
M.e.length-=(M.a-1);
return(_2102)(M);};

var _1178=function(M){if(--M.cbt<0){throw _1178;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1164=function(M){if(--M.cbt<0){throw _1164;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1169,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8225,247,6,185]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][53];
M.e[M.e.length-1]=sym1901;
M.e[M.e.length-2]="the given side, angle, and, side will not form a triangle ~a, ~a, and, ~a.";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1150=function(M){if(--M.cbt<0){throw _1150;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1154,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9335,272,31,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1134=function(M){if(--M.cbt<0){throw _1134;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1126=function(M){if(--M.cbt<0){throw _1126;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1137,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9243,270,15,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1139,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9249,270,21,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1141,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9252,270,24,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][59];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1104=function(M){if(--M.cbt<0){throw _1104;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1090=function(M){if(--M.cbt<0){throw _1090;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-34];
M.c.push(new RT.CallFrame(_1094,M.p));
M.v=M.e[M.e.length-23][2][0][M.e[M.e.length-23][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10586,299,82,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-24][87]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-24].names[87]); }
M.e[M.e.length-1]=M.e[M.e.length-24][87];
M.c.push(new RT.CallFrame(_1096,M.p));
M.v=M.e[M.e.length-24][2][0][M.e[M.e.length-24][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10596,299,92,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-25][68];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _1034=function(M){if(--M.cbt<0){throw _1034;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]="Nu udregnes de to sidste sider ved hjælp af to sinusrelationer.";
M.c.push(new RT.CallFrame(_1060,M.p));
M.v=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10321,296,14,138]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="$~a = ~a = ~a = ~a$";
M.e[M.e.length-2]=M.e[M.e.length-24];
M.c.push(new RT.CallFrame(_1062,M.p));
M.v=M.e[M.e.length-20][2][0][M.e[M.e.length-20][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",10376,297,25,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-23][88]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-23].names[88]); }
M.p=M.e[M.e.length-23][88];
M.e[M.e.length-1]=M.e[M.e.length-30];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-31];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _1919=function(M){if(--M.cbt<0){throw _1919;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1928,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19227,518,14,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][104];
M.c.push(new RT.CallFrame(_1930,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19237,518,24,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][198];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _3755=function(M){if(--M.cbt<0){throw _3755;}
M.c.push(new RT.PromptFrame(_3757,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=0;
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e[M.e.length-2]=[M.e[M.e.length-2]];
M.v=new RT.Closure(_458,(RT.makeArityAtLeast(0)),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"print-message");
M.e.length-=2;
M.e[M.e.length-1][123]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1904=function(M){if(--M.cbt<0){throw _1904;}
M.e.length-=(M.a-1);
return(_1905)(M);};

var _1806=function(M){if(--M.cbt<0){throw _1806;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1813,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17770,475,19,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(0,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],1,"<=")))&&(plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],1,"<="),2)));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1785=function(M){if(--M.cbt<0){throw _1785;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1781=function(M){if(--M.cbt<0){throw _1781;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1785,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17178,451,31,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-8][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[37]); }
M.p=M.e[M.e.length-8][37];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1769=function(M){if(--M.cbt<0){throw _1769;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1773,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17131,450,31,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-8][36]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[36]); }
M.p=M.e[M.e.length-8][36];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1876=function(M){if(--M.cbt<0){throw _1876;}
M.e.length-=(M.a-1);
return(_1877)(M);};

var _1743=function(M){if(--M.cbt<0){throw _1743;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16840,438,8,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1746,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16843,438,11,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1748,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16846,438,14,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-5],RT.makeFloat(-1.0));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1731=function(M){if(--M.cbt<0){throw _1731;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1685=function(M){if(--M.cbt<0){throw _1685;}
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1665=function(M){if(--M.cbt<0){throw _1665;}
M.e[M.e.length-2]=M.v;
return(_1653)(M);};

var _1657=function(M){if(--M.cbt<0){throw _1657;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-12];
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,">="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,">="))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _1607=function(M){if(--M.cbt<0){throw _1607;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1593=function(M){if(--M.cbt<0){throw _1593;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1597,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4397,154,13,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.c.push(new RT.CallFrame(_1599,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4407,154,23,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["sin"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1579=function(M){if(--M.cbt<0){throw _1579;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["string-append"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _1520=function(M){if(--M.cbt<0){throw _1520;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1523,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2714,107,33,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["cadr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2425=function(M){if(--M.cbt<0){throw _2425;}
return(_2423)(M);};

var _2401=function(M){if(--M.cbt<0){throw _2401;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2406,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23560,642,28,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-5][136]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[136]); }
M.p=M.e[M.e.length-5][136];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1430=function(M){if(--M.cbt<0){throw _1430;}
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2374=function(M){if(--M.cbt<0){throw _2374;}
M.e[M.e.length-11]=M.v;
M.c.push(new RT.CallFrame(_2376,M.p));
M.v=M.e[M.e.length-25][2][0][M.e[M.e.length-25][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",22991,627,24,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=3;
M.v=M.primitives["list-ref"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};






var _1318=function(M){if(--M.cbt<0){throw _1318;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1302=function(M){if(--M.cbt<0){throw _1302;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _1270=function(M){if(--M.cbt<0){throw _1270;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1254=function(M){if(--M.cbt<0){throw _1254;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1246=function(M){if(--M.cbt<0){throw _1246;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1250,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7146,227,29,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-15][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-15].names[34]); }
M.p=M.e[M.e.length-15][34];
M.e[M.e.length-1]=M.e[M.e.length-25];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1233=function(M){if(--M.cbt<0){throw _1233;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7102,226,6,906]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
if (M.e[M.e.length-10][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-10].names[41]); }
M.e[M.e.length-5]=M.e[M.e.length-10][41];
M.c.push(new RT.CallFrame(_1244,M.p));
M.v=M.e[M.e.length-10][2][0][M.e[M.e.length-10][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7124,227,7,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1246,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7130,227,13,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-15][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-15].names[34]); }
M.p=M.e[M.e.length-15][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _2118=function(M){if(--M.cbt<0){throw _2118;}
M.e.length-=(M.a-1);
return(_2119)(M);};

var _1208=function(M){if(--M.cbt<0){throw _1208;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1176=function(M){if(--M.cbt<0){throw _1176;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1187,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8508,252,16,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1189,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8514,252,22,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1191,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8517,252,25,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][59];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1158=function(M){if(--M.cbt<0){throw _1158;}
M.e[M.e.length-3]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],RT.makePair(M.e[M.e.length-2],RT.makePair(M.e[M.e.length-3],RT.NULL)));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1148=function(M){if(--M.cbt<0){throw _1148;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makePair(M.e[M.e.length-13],RT.makePair(M.e[M.e.length-14],RT.makePair(M.e[M.e.length-7],RT.NULL)));
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],RT.makePair(M.e[M.e.length-5],RT.makePair(M.e[M.e.length-15],RT.NULL)));
M.v=RT.makePair("TODO",RT.NULL);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-15,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3886=function(M){return(_500)(M);};

var _1130=function(M){if(--M.cbt<0){throw _1130;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1134,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9215,269,39,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-12],M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1117=function(M){if(--M.cbt<0){throw _1117;}
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1123,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9164,268,15,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["sqrt"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};






var _2017=function(M){if(--M.cbt<0){throw _2017;}
M.e.length-=(M.a-1);
return(_2018)(M);};


var _1916=function(M){if(--M.cbt<0){throw _1916;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeFloat(3.0);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3779=function(M){if(--M.cbt<0){throw _3779;}
M.c.push(new RT.PromptFrame(_3781,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_464,2,[M.e[M.e.length-1]],"tick");
M.e[M.e.length-1][147]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3753=function(M){if(--M.cbt<0){throw _3753;}
M.c.push(new RT.PromptFrame(_3755,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_457,14,[M.e[M.e.length-1]],"raphael-triangle");
M.e[M.e.length-1][122]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _1779=function(M){if(--M.cbt<0){throw _1779;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1767=function(M){if(--M.cbt<0){throw _1767;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1727=function(M){if(--M.cbt<0){throw _1727;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1731,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",16523,418,50,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][67];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _1655=function(M){if(--M.cbt<0){throw _1655;}
if(M.v===false){return(_1652)(M);}else{M.c.push(new RT.CallFrame(_1661,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6524,213,27,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1663,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6528,213,31,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-10],M.e[M.e.length-12]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _1605=function(M){if(--M.cbt<0){throw _1605;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1607,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4532,159,21,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_1609,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4542,159,31,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-10]);
M.v=M.primitives["cos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1591=function(M){if(--M.cbt<0){throw _1591;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedNegate(M, M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1577=function(M){if(--M.cbt<0){throw _1577;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1579,M.p));
M.v=M.e[M.e.length-6][2][0][M.e[M.e.length-6][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",3902,138,40,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["format"];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _1513=function(M){if(--M.cbt<0){throw _1513;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===2);
if(M.v===false){return(_1517)(M);}else{M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1520,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2669,106,32,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2415=function(M){if(--M.cbt<0){throw _2415;}
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23671,646,7,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-8][131]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[131]); }
M.p=M.e[M.e.length-8][131];
M.e[M.e.length-1]=true;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=false;
M.e[M.e.length-4]=false;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2396=function(M){if(--M.cbt<0){throw _2396;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_2401,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",23512,641,28,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-4][134]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[134]); }
M.p=M.e[M.e.length-4][134];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1419=function(M){if(--M.cbt<0){throw _1419;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===0);
if(M.v===false){return(_1423)(M);}else{M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",593,33,9,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-8][7][0][M.e[M.e.length-8][7][1]];
if (M.e[M.e.length-8][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-8][0];
M.e[M.e.length-2]="rect";
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1391=function(M){if(--M.cbt<0){throw _1391;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_1395,M.p));
M.v=M.e[M.e.length-19][2][0][M.e[M.e.length-19][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",6293,209,49,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
if (M.e[M.e.length-22][78]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-22].names[78]); }
M.p=M.e[M.e.length-22][78];
M.e[M.e.length-1]=M.e[M.e.length-23];
M.e[M.e.length-2]=M.e[M.e.length-24];
M.e[M.e.length-3]=M.e[M.e.length-25];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};











var _1250=function(M){if(--M.cbt<0){throw _1250;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1254,M.p));
M.v=M.e[M.e.length-13][2][0][M.e[M.e.length-13][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7162,227,45,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-15][61];
M.e[M.e.length-1]=M.e[M.e.length-24];
M.e[M.e.length-2]=M.e[M.e.length-23];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1230=function(M){if(--M.cbt<0){throw _1230;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _2111=function(M){if(--M.cbt<0){throw _2111;}
M.c.push(new RT.CallFrame(_2115,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",20975,569,4,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][29];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="fill";
M.e[M.e.length-3]="white";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1173=function(M){if(--M.cbt<0){throw _1173;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1176,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8455,251,16,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1178,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8461,251,22,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1180,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8464,251,25,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][59];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-16];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1154=function(M){if(--M.cbt<0){throw _1154;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1158,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9351,272,47,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-14][61];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _1141=function(M){if(--M.cbt<0){throw _1141;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1145,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9267,270,39,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-12],M.e[M.e.length-6]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1112=function(M){if(--M.cbt<0){throw _1112;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1117,M.p));
M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8920,264,6,228]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-8][53];
M.e[M.e.length-1]=sym1902;
M.c.push(new RT.CallFrame(_1119,M.p));
M.v=M.e[M.e.length-8][2][0][M.e[M.e.length-8][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",8981,265,26,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["positive?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3711=function(M){if(--M.cbt<0){throw _3711;}
M.e.length-=(M.a-1);
return(_3712)(M);};




var _2013=function(M){if(--M.cbt<0){throw _2013;}
M.e.length-=(M.a-1);
return(_2014)(M);};


var _1914=function(M){if(--M.cbt<0){throw _1914;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1919,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19193,517,14,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][104];
M.c.push(new RT.CallFrame(_1921,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",19203,517,24,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][198];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


_3776=RT.si_context_expected(11);

var _3767=function(M){if(--M.cbt<0){throw _3767;}
M.c.push(new RT.PromptFrame(_3769,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym1903;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=4;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym1903;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3773,M.p));
return((M.p).label)(M);};

var _3751=function(M){if(--M.cbt<0){throw _3751;}
M.c.push(new RT.PromptFrame(_3753,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_456,3,[M.e[M.e.length-1]],"raphael-open-sans-text");
M.e[M.e.length-1][121]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3749=function(M){if(--M.cbt<0){throw _3749;}
M.c.push(new RT.PromptFrame(_3751,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=3;
M.e[M.e.length-1][120]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1777=function(M){if(--M.cbt<0){throw _1777;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1765=function(M){if(--M.cbt<0){throw _1765;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1777,M.p));
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17160,451,13,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1779,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17163,451,16,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_1781,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",17166,451,19,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-8][37]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-8].names[37]); }
M.p=M.e[M.e.length-8][37];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3708=function(M){if(--M.cbt<0){throw _3708;}
M.c.push(new RT.PromptFrame(_3710,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_447,9,[M.e[M.e.length-1]],"triangle/aas");
M.e[M.e.length-1][85]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1861=function(M){if(--M.cbt<0){throw _1861;}
M.e.length-=(M.a-1);
return(_1860)(M);};











var _1589=function(M){if(--M.cbt<0){throw _1589;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _3552=function(M){if(--M.cbt<0){throw _3552;}
M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1508=function(M){if(--M.cbt<0){throw _1508;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2462,101,11,53]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-10][7][0][M.e[M.e.length-10][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]="scale";
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e[M.e.length-4]=M.e[M.e.length-13];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-7];
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1484=function(M){if(--M.cbt<0){throw _1484;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1487,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2086,89,19,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["cadr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1415=function(M){if(--M.cbt<0){throw _1415;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _3388=function(M){if(--M.cbt<0){throw _3388;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};








var _1260=function(M){if(--M.cbt<0){throw _1260;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1302,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7959,240,8,47]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-24][69];
M.e[M.e.length-1]=M.e[M.e.length-22];
M.e[M.e.length-2]=M.e[M.e.length-33];
M.e[M.e.length-3]=M.e[M.e.length-34];
M.e[M.e.length-4]=M.e[M.e.length-32];
M.e[M.e.length-5]=M.e[M.e.length-21];
M.e[M.e.length-6]=M.e[M.e.length-20];
M.e[M.e.length-7]=M.e[M.e.length-26];
M.e[M.e.length-8]=M.e[M.e.length-27];
M.e[M.e.length-9]=M.e[M.e.length-28];
M.e[M.e.length-10]=M.e[M.e.length-29];
M.e[M.e.length-11]=M.e[M.e.length-30];
M.e[M.e.length-12]=M.e[M.e.length-31];
M.a=12;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1226=function(M){if(--M.cbt<0){throw _1226;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_1230,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",7029,224,40,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-5],M.e[M.e.length-17]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3786=function(M){if(--M.cbt<0){throw _3786;}
M.e.length-=(M.a-1);
return(_3787)(M);};

var _2114=function(M){if(--M.cbt<0){throw _2114;}
M.e.length-=(M.a-1);
return(_2115)(M);};

var _3772=function(M){if(--M.cbt<0){throw _3772;}
if((M.a-5)===0){return(_3774)(M);}else{RT.si_context_expected(5)(M);
}};

var _1184=function(M){if(--M.cbt<0){throw _1184;}
M.e[M.e.length-2]=M.v;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"/"));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1137=function(M){if(--M.cbt<0){throw _1137;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9289,271,8,148]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
if (M.e[M.e.length-9][41]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-9].names[41]); }
M.e[M.e.length-4]=M.e[M.e.length-9][41];
M.c.push(new RT.CallFrame(_1148,M.p));
M.v=M.e[M.e.length-9][2][0][M.e[M.e.length-9][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9313,272,9,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_1150,M.p));
M.v=M.e[M.e.length-12][2][0][M.e[M.e.length-12][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",9319,272,15,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-14][34]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-14].names[34]); }
M.p=M.e[M.e.length-14][34];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _3709=function(M){if(--M.cbt<0){throw _3709;}
M.e.length-=(M.a-1);
return(_3710)(M);};

var _3703=function(M){if(--M.cbt<0){throw _3703;}
M.e.length-=(M.a-1);
return(_3704)(M);};

var _3695=function(M){if(--M.cbt<0){throw _3695;}
M.e.length-=(M.a-1);
return(_3696)(M);};



var _3671=function(M){if(--M.cbt<0){throw _3671;}
M.e.length-=(M.a-1);
return(_3672)(M);};

var _1911=function(M){if(--M.cbt<0){throw _1911;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeFloat(3.0);
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3785=function(M){if(--M.cbt<0){throw _3785;}
M.c.push(new RT.PromptFrame(_3787,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_467,3,[M.e[M.e.length-1]],"cosrel-side");
M.e[M.e.length-1][81]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3773=RT.si_context_expected(5);

var _3765=function(M){if(--M.cbt<0){throw _3765;}
M.c.push(new RT.PromptFrame(_3767,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_462,2,[M.e[M.e.length-1]],"draw-triangle");
M.e[M.e.length-1][128]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3631=function(M){if(--M.cbt<0){throw _3631;}
M.e.length-=(M.a-1);
return(_3632)(M);};

var _3747=function(M){if(--M.cbt<0){throw _3747;}
M.c.push(new RT.PromptFrame(_3749,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v="#3294D2";
M.e[M.e.length-1][119]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1773=function(M){if(--M.cbt<0){throw _1773;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1763=function(M){if(--M.cbt<0){throw _1763;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeFloat(-1.0);
M.v=RT.checkedSub(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3706=function(M){if(--M.cbt<0){throw _3706;}
M.c.push(new RT.PromptFrame(_3708,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_446,3,[M.e[M.e.length-1]],"triangle/ssa");
M.e[M.e.length-1][83]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3700=function(M){if(--M.cbt<0){throw _3700;}
M.c.push(new RT.PromptFrame(_3702,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_443,9,[M.e[M.e.length-1]],"triangle/sss");
M.e[M.e.length-1][76]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3684=function(M){if(--M.cbt<0){throw _3684;}
M.c.push(new RT.PromptFrame(_3686,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_435,3,[M.e[M.e.length-1]],"excess");
M.e[M.e.length-1][59]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3660=function(M){if(--M.cbt<0){throw _3660;}
M.c.push(new RT.PromptFrame(_3662,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym1904;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=2;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym1904;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3666,M.p));
return((M.p).label)(M);};

var _3652=function(M){if(--M.cbt<0){throw _3652;}
M.c.push(new RT.PromptFrame(_3654,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_428,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"raphael-rotate");
M.e[M.e.length-1][25]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3644=function(M){if(--M.cbt<0){throw _3644;}
M.c.push(new RT.PromptFrame(_3646,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_424,1,[M.e[M.e.length-1]],"raphael-node");
M.e[M.e.length-1][21]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3636=function(M){if(--M.cbt<0){throw _3636;}
M.c.push(new RT.PromptFrame(_3638,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_420,1,[M.e[M.e.length-1]],"raphael-get-font");
M.e[M.e.length-1][17]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3628=function(M){if(--M.cbt<0){throw _3628;}
M.c.push(new RT.PromptFrame(_3630,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_416,0,[M.e[M.e.length-1]],"raphael-set");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3612=function(M){if(--M.cbt<0){throw _3612;}
M.c.push(new RT.PromptFrame(_3614,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_409,12,[M.e[M.e.length-1]],"triangle-vertices/sss");
M.e[M.e.length-1][189]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1587=function(M){if(--M.cbt<0){throw _1587;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_1589,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4217,148,21,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1591,M.p));
M.v=M.e[M.e.length-5][2][0][M.e[M.e.length-5][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",4220,148,24,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["sqr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3588=function(M){if(--M.cbt<0){throw _3588;}
M.c.push(new RT.PromptFrame(_3590,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_397,6,[M.e[M.e.length-1]],"...angle-solver.rkt:813:59");
M.e[M.e.length-1][201]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3546=function(M){if(--M.cbt<0){throw _3546;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1505=function(M){if(--M.cbt<0){throw _1505;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_1508,M.p));
M.v=M.e[M.e.length-4][2][0][M.e[M.e.length-4][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2437,100,24,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["cadr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1477=function(M){if(--M.cbt<0){throw _1477;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1993,87,11,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-7][7][0][M.e[M.e.length-7][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="rotate";
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-5];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1413=function(M){if(--M.cbt<0){throw _1413;}
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3436=function(M){if(--M.cbt<0){throw _3436;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _3386=function(M){if(--M.cbt<0){throw _3386;}
return(_3372)(M);};

var _3364=function(M){if(--M.cbt<0){throw _3364;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};









var _1235=function(M){if(--M.cbt<0){throw _1235;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["acos"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3784=function(M){if(--M.cbt<0){throw _3784;}
M.e.length-=(M.a-1);
return(_3785)(M);};

var _2110=function(M){if(--M.cbt<0){throw _2110;}
M.e.length-=(M.a-1);
return(_2111)(M);};

var _3768=function(M){if(--M.cbt<0){throw _3768;}
M.e.length-=(M.a-1);
return(_3769)(M);};




var _2066=function(M){if(--M.cbt<0){throw _2066;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-38];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _3719=function(M){if(--M.cbt<0){throw _3719;}
M.e.length-=(M.a-1);
return(_3720)(M);};

var _3707=function(M){if(--M.cbt<0){throw _3707;}
M.e.length-=(M.a-1);
return(_3708)(M);};

var _3701=function(M){if(--M.cbt<0){throw _3701;}
M.e.length-=(M.a-1);
return(_3702)(M);};

var _3693=function(M){if(--M.cbt<0){throw _3693;}
M.e.length-=(M.a-1);
return(_3694)(M);};

var _3687=function(M){if(--M.cbt<0){throw _3687;}
M.e.length-=(M.a-1);
return(_3688)(M);};

var _3678=function(M){if(--M.cbt<0){throw _3678;}
if((M.a-13)===0){return(_3674)(M);}else{RT.si_context_expected(13)(M);
}};

var _3668=function(M){if(--M.cbt<0){throw _3668;}
if((M.a-7)===0){return(_3664)(M);}else{RT.si_context_expected(7)(M);
}};


var _3783=function(M){if(--M.cbt<0){throw _3783;}
M.c.push(new RT.PromptFrame(_3785,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_466,1,[M.e[M.e.length-1]],"$degrees");
M.e[M.e.length-1][87]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3769=function(M){if(--M.cbt<0){throw _3769;}
M.c.push(new RT.PromptFrame(_3779,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_463,2,[M.e[M.e.length-1]],"update-result-formulas");
M.e[M.e.length-1][141]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3763=function(M){if(--M.cbt<0){throw _3763;}
M.c.push(new RT.PromptFrame(_3765,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_461,1,[M.e[M.e.length-1]],"scale-triangle");
M.e[M.e.length-1][129]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3629=function(M){if(--M.cbt<0){throw _3629;}
M.e.length-=(M.a-1);
return(_3630)(M);};

var _3745=function(M){if(--M.cbt<0){throw _3745;}
M.c.push(new RT.PromptFrame(_3747,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v="#BBE1EC";
M.e[M.e.length-1][118]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3740=function(M){if(--M.cbt<0){throw _3740;}
M.c.push(new RT.PromptFrame(_3743,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v="#F7CE9E";
M.e[M.e.length-1][117]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3732=function(M){if(--M.cbt<0){throw _3732;}
M.c.push(new RT.PromptFrame(_3734,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_453,1,[M.e[M.e.length-1]],"screen-y");
M.e[M.e.length-1][107]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3593=function(M){if(--M.cbt<0){throw _3593;}
M.e.length-=(M.a-1);
return(_3594)(M);};

var _3585=function(M){if(--M.cbt<0){throw _3585;}
M.e.length-=(M.a-1);
return(_3586)(M);};

var _3704=function(M){if(--M.cbt<0){throw _3704;}
M.c.push(new RT.PromptFrame(_3706,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_445,3,[M.e[M.e.length-1]],"triangle/sas");
M.e[M.e.length-1][82]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3698=function(M){if(--M.cbt<0){throw _3698;}
M.c.push(new RT.PromptFrame(_3700,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_442,12,[M.e[M.e.length-1]],"extra-formulas");
M.e[M.e.length-1][69]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3682=function(M){if(--M.cbt<0){throw _3682;}
M.c.push(new RT.PromptFrame(_3684,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_434,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"tp-error");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3672=function(M){if(--M.cbt<0){throw _3672;}
M.c.push(new RT.PromptFrame(_3682,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_433,(RT.makeArityAtLeast(3)),[M.e[M.e.length-1]],"check-dependencies");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3658=function(M){if(--M.cbt<0){throw _3658;}
M.c.push(new RT.PromptFrame(_3660,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_431,(RT.makeArityAtLeast(1)),[M.e[M.e.length-1]],"raphael-attr");
M.e[M.e.length-1][29]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3650=function(M){if(--M.cbt<0){throw _3650;}
M.c.push(new RT.PromptFrame(_3652,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_427,1,[M.e[M.e.length-1]],"raphael-remove");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3642=function(M){if(--M.cbt<0){throw _3642;}
M.c.push(new RT.PromptFrame(_3644,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_423,0,[M.e[M.e.length-1]],"raphael-clear");
M.e[M.e.length-1][20]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3634=function(M){if(--M.cbt<0){throw _3634;}
M.c.push(new RT.PromptFrame(_3636,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_419,4,[M.e[M.e.length-1]],"raphael-print");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3626=function(M){if(--M.cbt<0){throw _3626;}
M.c.push(new RT.PromptFrame(_3628,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_415,5,[M.e[M.e.length-1]],"raphael-image");
M.e[M.e.length-1][11]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3610=function(M){if(--M.cbt<0){throw _3610;}
M.c.push(new RT.PromptFrame(_3612,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_408,10,[M.e[M.e.length-1]],"triangle-vertices/ass");
M.e[M.e.length-1][190]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3596=function(M){if(--M.cbt<0){throw _3596;}
M.c.push(new RT.PromptFrame(_3598,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_401,3,[M.e[M.e.length-1]],"triangle-vertices/saa");
M.e[M.e.length-1][197]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3586=function(M){if(--M.cbt<0){throw _3586;}
M.c.push(new RT.PromptFrame(_3588,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_396,1,[M.e[M.e.length-1]],"...angle-solver.rkt:812:50");
M.e[M.e.length-1][202]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3566=function(M){if(--M.cbt<0){throw _3566;}
if(M.v===false){return(_3563)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3538=function(M){if(--M.cbt<0){throw _3538;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _1494=function(M){if(--M.cbt<0){throw _1494;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===0);
if(M.v===false){return(_1498)(M);}else{M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",2338,98,9,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-6][7][0][M.e[M.e.length-6][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="scale";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1466=function(M){if(--M.cbt<0){throw _1466;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===0);
if(M.v===false){return(_1470)(M);}else{M.v=M.e[M.e.length-2][2][0][M.e[M.e.length-2][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",1911,85,9,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-5][7][0][M.e[M.e.length-5][7][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]="rotate";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};



var _3434=function(M){if(--M.cbt<0){throw _3434;}
return(_3420)(M);};

var _3412=function(M){if(--M.cbt<0){throw _3412;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3384=function(M){if(--M.cbt<0){throw _3384;}
if(M.v===false){return(_3381)(M);}else{M.c.push(new RT.CallFrame(_3386,M.p));
M.v=M.e[M.e.length-7][2][0][M.e[M.e.length-7][2][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>",36585,907,34,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=(M.e[M.e.length-3]===false);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3362=function(M){if(--M.cbt<0){throw _3362;}
return(_3348)(M);};




var _3268=function(M){if(--M.cbt<0){throw _3268;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


_1117.mvr=_1116;
_1169.mvr=_1168;
_1651.mvr=_1650;
_1862.mvr=_1861;
_1873.mvr=_1872;
_1877.mvr=_1876;
_1881.mvr=_1880;
_1885.mvr=_1884;
_1905.mvr=_1904;
_2010.mvr=_2009;
_2014.mvr=_2013;
_2018.mvr=_2017;
_2076.mvr=_2075;
_2102.mvr=_2101;
_2111.mvr=_2110;
_2115.mvr=_2114;
_2119.mvr=_2118;
_2123.mvr=_2122;
_2127.mvr=_2126;
_2136.mvr=_2135;
_2140.mvr=_2139;
_2144.mvr=_2143;
_2362.mvr=_2361;
_2367.mvr=_2366;
_2415.mvr=_2414;
_2425.mvr=_2424;
_2447.mvr=_2448;
_2453.mvr=_2452;
_2901.mvr=_2900;
_2918.mvr=_2917;
_2934.mvr=_2933;
_2962.mvr=_2961;
_2990.mvr=_2989;
_3000.mvr=_2999;
_3030.mvr=_3029;
_3552.mvr=_3551;
_3571.mvr=_3570;
_3574.mvr=_3573;
_3577.mvr=_3576;
_3580.mvr=_3579;
_3582.mvr=_3581;
_3584.mvr=_3583;
_3586.mvr=_3585;
_3588.mvr=_3587;
_3590.mvr=_3589;
_3592.mvr=_3591;
_3594.mvr=_3593;
_3596.mvr=_3595;
_3598.mvr=_3597;
_3600.mvr=_3599;
_3602.mvr=_3601;
_3604.mvr=_3603;
_3606.mvr=_3605;
_3608.mvr=_3607;
_3610.mvr=_3609;
_3612.mvr=_3611;
_3614.mvr=_3613;
_3616.mvr=_3615;
_3618.mvr=_3617;
_3620.mvr=_3619;
_3622.mvr=_3621;
_3624.mvr=_3623;
_3626.mvr=_3625;
_3628.mvr=_3627;
_3630.mvr=_3629;
_3632.mvr=_3631;
_3634.mvr=_3633;
_3636.mvr=_3635;
_3638.mvr=_3637;
_3640.mvr=_3639;
_3642.mvr=_3641;
_3644.mvr=_3643;
_3646.mvr=_3645;
_3648.mvr=_3647;
_3650.mvr=_3649;
_3652.mvr=_3651;
_3654.mvr=_3653;
_3656.mvr=_3655;
_3658.mvr=_3657;
_3660.mvr=_3659;
_3666.mvr=_3665;
_3669.mvr=_3668;
_3662.mvr=_3661;
_3676.mvr=_3675;
_3679.mvr=_3678;
_3672.mvr=_3671;
_3682.mvr=_3681;
_3684.mvr=_3683;
_3686.mvr=_3685;
_3688.mvr=_3687;
_3690.mvr=_3689;
_3692.mvr=_3691;
_3694.mvr=_3693;
_3696.mvr=_3695;
_3698.mvr=_3697;
_3700.mvr=_3699;
_3702.mvr=_3701;
_3704.mvr=_3703;
_3706.mvr=_3705;
_3708.mvr=_3707;
_3710.mvr=_3709;
_3712.mvr=_3711;
_3714.mvr=_3713;
_3716.mvr=_3715;
_3718.mvr=_3717;
_3720.mvr=_3719;
_3722.mvr=_3721;
_3724.mvr=_3723;
_3726.mvr=_3725;
_3728.mvr=_3727;
_3730.mvr=_3729;
_3732.mvr=_3731;
_3734.mvr=_3733;
_3736.mvr=_3735;
_3738.mvr=_3737;
_3740.mvr=_3739;
_3743.mvr=_3742;
_3745.mvr=_3744;
_3747.mvr=_3746;
_3749.mvr=_3748;
_3751.mvr=_3750;
_3753.mvr=_3752;
_3755.mvr=_3754;
_3757.mvr=_3756;
_3761.mvr=_3760;
_3763.mvr=_3762;
_3765.mvr=_3764;
_3767.mvr=_3766;
_3773.mvr=_3772;
_3776.mvr=_3775;
_3769.mvr=_3768;
_3779.mvr=_3778;
_3781.mvr=_3780;
_3783.mvr=_3782;
_3785.mvr=_3784;
_3787.mvr=_3786;
_3789.mvr=_3788;
_3791.mvr=_3790;
_3793.mvr=_3792;
_3795.mvr=_3794;
_3797.mvr=_3796;
_3799.mvr=_3798;
_3801.mvr=_3800;
_3803.mvr=_3802;
_3805.mvr=_3804;
_3807.mvr=_3806;
_3809.mvr=_3808;
_3811.mvr=_3810;
_3813.mvr=_3812;
_3815.mvr=_3814;
_3817.mvr=_3816;
_3819.mvr=_3818;
_3821.mvr=_3820;
_3823.mvr=_3822;
_3825.mvr=_3824;
_3827.mvr=_3826;
_3829.mvr=_3828;
_3831.mvr=_3830;
_3833.mvr=_3832;
_3835.mvr=_3834;
_3837.mvr=_3836;
_3839.mvr=_3838;
_3841.mvr=_3840;
_3843.mvr=_3842;
_3845.mvr=_3844;
_3873.mvr=_3874;
_3855.mvr=_3854;
_3882.mvr=_3883;
_3878.mvr=_3877;
_502.mvr=_501;
var sym1898=RT.makeSymbol("em");
var sym1902=RT.makeSymbol("triangle/ssa");
var sym1901=RT.makeSymbol("triangle/sas");
var sym1900=RT.makeSymbol("triangle/sss");
var sym1868=RT.makeSymbol("raphael-attr");
var sym1869=RT.makeSymbol("p");
var sym1870=RT.makeSymbol("raphael-rect");
var sym1881=RT.makeSymbol("old-triangle-representation");
var sym1886=RT.makeSymbol("formulas");
var sym1884=RT.makeSymbol("angles");
var sym1859=RT.makeSymbol("quote");
var sym1861=RT.makeSymbol("triangle");
var sym1879=RT.makeSymbol("initialized?");
var sym1882=RT.makeSymbol("vertices");
var sym1860=RT.makeSymbol("nbsp");
var sym1855=RT.makeSymbol("td");
var sym1858=RT.makeSymbol("h3");
var sym1891=RT.makeSymbol("div");
var sym1895=RT.makeSymbol("input");
var sym1896=RT.makeSymbol("type");
var sym1857=RT.makeSymbol("table");
var sym1904=RT.makeSymbol("posn");
var sym1874=RT.makeSymbol("B");
var sym1885=RT.makeSymbol("names");
var sym1871=RT.makeSymbol("b");
var sym1876=RT.makeSymbol("C");
var sym1872=RT.makeSymbol("a");
var sym1899=RT.makeSymbol("string-append");
var sym1893=RT.makeSymbol("id");
var sym1888=RT.makeSymbol("raphael-scale");
var sym1878=RT.makeSymbol("y");
var sym1903=RT.makeSymbol("world");
var sym1894=RT.makeSymbol("style");
var sym1892=RT.makeSymbol("@");
var sym1866=RT.makeSymbol("title");
var sym1864=RT.makeSymbol("html");
var sym1867=RT.makeSymbol("model");
var sym1862=RT.makeSymbol("hr");
var sym1880=RT.makeSymbol("result-formulas");
var sym1883=RT.makeSymbol("sides");
var sym1877=RT.makeSymbol("x");
var sym1873=RT.makeSymbol("c");
var sym1889=RT.makeSymbol("body");
var sym1856=RT.makeSymbol("tr");
var sym1865=RT.makeSymbol("head");
var sym1875=RT.makeSymbol("A");
var sym1863=RT.makeSymbol("h2");
var sym1890=RT.makeSymbol("h1");
var sym1897=RT.makeSymbol("value");
var sym1887=RT.makeSymbol("result");var _494_c=new RT.Closure(_494,1,void(0),"...angle-solver.rkt:864:26");
var _493_c=new RT.Closure(_493,1,void(0),"...angle-solver.rkt:861:26");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3886, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<MainModuleSource /Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<MainModuleSource /Users/soegaard/Dropbox/GitHub/triangle-solver/build/triangle-solver.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/whalesong.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3910=function(M){return(_3887)(M);};

var _3907=function(M){if(M.modules["whalesong/lang/posn.rkt"].isInvoked!==false){return(_3909)(M);}else{M.c.push(new RT.CallFrame(_3909,M.p));
return(M.modules["whalesong/lang/posn.rkt"].label)(M);}};

var _3904=function(M){if(M.modules["whalesong/lang/bool.rkt"].isInvoked!==false){return(_3906)(M);}else{M.c.push(new RT.CallFrame(_3906,M.p));
return(M.modules["whalesong/lang/bool.rkt"].label)(M);}};

var _3901=function(M){if(M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked!==false){return(_3903)(M);}else{M.c.push(new RT.CallFrame(_3903,M.p));
return(M.modules["whalesong/lang/check-expect/check-expect.rkt"].label)(M);}};

var _3895=function(M){if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_3897)(M);}else{M.c.push(new RT.CallFrame(_3897,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}};

var _3890=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3887=function(M){M.c.push(new RT.PromptFrame(_3889,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/whalesong.rkt"]=new RT.ModuleRecord("whalesong",_3891);
return(_3890)(M);};

var _3898=function(M){if(M.modules["whalesong/lang/private/shared.rkt"].isInvoked!==false){return(_3900)(M);}else{M.c.push(new RT.CallFrame(_3900,M.p));
return(M.modules["whalesong/lang/private/shared.rkt"].label)(M);}};

var _3906=function(M){if(--M.cbt<0){throw _3906;}
if((M.modules["whalesong/lang/posn.rkt"]!==void(0))!==false){return(_3907)(M);}else{return(_3909)(M);}};

var _3891=function(M){M.modules["whalesong/lang/whalesong.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==void(0))!==false){return(_3892)(M);}else{return(_3894)(M);}};

var _3909=function(M){if(--M.cbt<0){throw _3909;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/whalesong.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/whalesong.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3905=function(M){if(--M.cbt<0){throw _3905;}
M.e.length-=(M.a-1);
return(_3906)(M);};

var _3900=function(M){if(--M.cbt<0){throw _3900;}
if((M.modules["whalesong/lang/check-expect/check-expect.rkt"]!==void(0))!==false){return(_3901)(M);}else{return(_3903)(M);}};

var _3908=function(M){if(--M.cbt<0){throw _3908;}
M.e.length-=(M.a-1);
return(_3909)(M);};

var _3894=function(M){if(--M.cbt<0){throw _3894;}
if((M.modules["whalesong/lang/private/traced-app.rkt"]!==void(0))!==false){return(_3895)(M);}else{return(_3897)(M);}};

var _3903=function(M){if(--M.cbt<0){throw _3903;}
if((M.modules["whalesong/lang/bool.rkt"]!==void(0))!==false){return(_3904)(M);}else{return(_3906)(M);}};

var _3896=function(M){if(--M.cbt<0){throw _3896;}
M.e.length-=(M.a-1);
return(_3897)(M);};

var _3893=function(M){if(--M.cbt<0){throw _3893;}
M.e.length-=(M.a-1);
return(_3894)(M);};

var _3888=function(M){if(--M.cbt<0){throw _3888;}
M.e.length-=(M.a-1);
return(_3889)(M);};

var _3897=function(M){if(--M.cbt<0){throw _3897;}
if((M.modules["whalesong/lang/private/shared.rkt"]!==void(0))!==false){return(_3898)(M);}else{return(_3900)(M);}};

var _3902=function(M){if(--M.cbt<0){throw _3902;}
M.e.length-=(M.a-1);
return(_3903)(M);};

var _3899=function(M){if(--M.cbt<0){throw _3899;}
M.e.length-=(M.a-1);
return(_3900)(M);};

var _3889=function(M){if(--M.cbt<0){throw _3889;}
};

var _3892=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3894)(M);}else{M.c.push(new RT.CallFrame(_3894,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

_3894.mvr=_3893;
_3897.mvr=_3896;
_3900.mvr=_3899;
_3903.mvr=_3902;
_3906.mvr=_3905;
_3909.mvr=_3908;
_3889.mvr=_3888;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3910, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/whalesong.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/whalesong.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/posn.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3931=function(M){return(_3912)(M);};

var _3929=function(M){if(--M.cbt<0){throw _3929;}
M.e.length-=(M.a-1);
return(_3930)(M);};

var _3926=function(M){if(--M.cbt<0){throw _3926;}
if((M.a-7)===0){return(_3922)(M);}else{RT.si_context_expected(7)(M);
}};

var _3918=function(M){M.modules["whalesong/lang/posn.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("struct:posn")||M.primitives["struct:posn"],M.params.currentNamespace.get("posn1.1")||M.primitives["posn1.1"],M.params.currentNamespace.get("posn?")||M.primitives["posn?"],M.params.currentNamespace.get("posn-x")||M.primitives["posn-x"],M.params.currentNamespace.get("posn-y")||M.primitives["posn-y"],M.params.currentNamespace.get("set-posn-x!")||M.primitives["set-posn-x!"],M.params.currentNamespace.get("set-posn-y!")||M.primitives["set-posn-y!"],M.params.currentNamespace.get("make-posn")||M.primitives["make-posn"]]);M.e[M.e.length-1].names=["struct:posn","posn1.1","posn?","posn-x","posn-y","set-posn-x!","set-posn-y!","make-posn"];
M.modules["whalesong/lang/posn.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_3920,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym2189;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=2;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym2189;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3924,M.p));
return((M.p).label)(M);};

var _3920=function(M){if(--M.cbt<0){throw _3920;}
M.c.push(new RT.PromptFrame(_3930,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3911,2,[M.e[M.e.length-1]],"make-posn");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3923=function(M){if(--M.cbt<0){throw _3923;}
if((M.a-5)===0){return(_3925)(M);}else{RT.si_context_expected(5)(M);
}};

var _3913=function(M){if(--M.cbt<0){throw _3913;}
M.e.length-=(M.a-1);
return(_3914)(M);};

var _3914=function(M){if(--M.cbt<0){throw _3914;}
};

var _3919=function(M){if(--M.cbt<0){throw _3919;}
M.e.length-=(M.a-1);
return(_3920)(M);};

var _3911=function(M){if(--M.cbt<0){throw _3911;}
//"lambda body for #(struct:LamPositionalName make-posn whalesong/lang/posn.rkt 11 0 312 35)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
if (M.e[M.e.length-3][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[1]); }
M.p=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3912=function(M){M.c.push(new RT.PromptFrame(_3914,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/posn.rkt"]=new RT.ModuleRecord("posn",_3918);
return(_3917)(M);};

var _3925=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-7]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym2190;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym2191;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym2190;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym2191;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3927,M.p));
return((M.p).label)(M);};

_3927=RT.si_context_expected(7);

var _3922=function(M){M.e.splice(M.e.length-11,5);
M.e[M.e.length-7][0]=M.v;
M.e[M.e.length-7][1]=M.e[M.e.length-1];
M.e[M.e.length-7][2]=M.e[M.e.length-2];
M.e[M.e.length-7][3]=M.e[M.e.length-3];
M.e[M.e.length-7][4]=M.e[M.e.length-4];
M.e[M.e.length-7][5]=M.e[M.e.length-5];
M.e[M.e.length-7][6]=M.e[M.e.length-6];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3924=RT.si_context_expected(5);

var _3930=function(M){if(--M.cbt<0){throw _3930;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/posn.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3917=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3924.mvr=_3923;
_3927.mvr=_3926;
_3920.mvr=_3919;
_3930.mvr=_3929;
_3914.mvr=_3913;
var sym2190=RT.makeSymbol("x");
var sym2189=RT.makeSymbol("posn");
var sym2191=RT.makeSymbol("y");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3931, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/posn.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/posn.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/base.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _3952=function(M){if(M.modules["collects/racket/private/modbeg.rkt"].isInvoked!==false){return(_3954)(M);}else{M.c.push(new RT.CallFrame(_3954,M.p));
return(M.modules["collects/racket/private/modbeg.rkt"].label)(M);}};

var _3937=function(M){if(M.modules["whalesong/lang/private/list.rkt"].isInvoked!==false){return(_3939)(M);}else{M.c.push(new RT.CallFrame(_3939,M.p));
return(M.modules["whalesong/lang/private/list.rkt"].label)(M);}};

var _3953=function(M){if(--M.cbt<0){throw _3953;}
M.e.length-=(M.a-1);
return(_3954)(M);};

var _3954=function(M){if(--M.cbt<0){throw _3954;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/base.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/base.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _3949=function(M){if(M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked!==false){return(_3951)(M);}else{M.c.push(new RT.CallFrame(_3951,M.p));
return(M.modules["whalesong/lang/private/qq-and-or.rkt"].label)(M);}};

var _3943=function(M){if(M.modules["whalesong/lang/private/hash.rkt"].isInvoked!==false){return(_3945)(M);}else{M.c.push(new RT.CallFrame(_3945,M.p));
return(M.modules["whalesong/lang/private/hash.rkt"].label)(M);}};

var _3940=function(M){if(M.modules["whalesong/lang/private/map.rkt"].isInvoked!==false){return(_3942)(M);}else{M.c.push(new RT.CallFrame(_3942,M.p));
return(M.modules["whalesong/lang/private/map.rkt"].label)(M);}};

var _3946=function(M){if(M.modules["whalesong/lang/list.rkt"].isInvoked!==false){return(_3948)(M);}else{M.c.push(new RT.CallFrame(_3948,M.p));
return(M.modules["whalesong/lang/list.rkt"].label)(M);}};

var _3932=function(M){M.c.push(new RT.PromptFrame(_3934,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/base.rkt"]=new RT.ModuleRecord("base",_3936);
return(_3935)(M);};

var _3951=function(M){if(--M.cbt<0){throw _3951;}
if((M.modules["collects/racket/private/modbeg.rkt"]!==void(0))!==false){return(_3952)(M);}else{return(_3954)(M);}};

var _3935=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3941=function(M){if(--M.cbt<0){throw _3941;}
M.e.length-=(M.a-1);
return(_3942)(M);};

var _3939=function(M){if(--M.cbt<0){throw _3939;}
if((M.modules["whalesong/lang/private/map.rkt"]!==void(0))!==false){return(_3940)(M);}else{return(_3942)(M);}};

var _3936=function(M){M.modules["whalesong/lang/base.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/private/list.rkt"]!==void(0))!==false){return(_3937)(M);}else{return(_3939)(M);}};

var _3944=function(M){if(--M.cbt<0){throw _3944;}
M.e.length-=(M.a-1);
return(_3945)(M);};

var _3942=function(M){if(--M.cbt<0){throw _3942;}
if((M.modules["whalesong/lang/private/hash.rkt"]!==void(0))!==false){return(_3943)(M);}else{return(_3945)(M);}};

var _3948=function(M){if(--M.cbt<0){throw _3948;}
if((M.modules["whalesong/lang/private/qq-and-or.rkt"]!==void(0))!==false){return(_3949)(M);}else{return(_3951)(M);}};

var _3945=function(M){if(--M.cbt<0){throw _3945;}
if((M.modules["whalesong/lang/list.rkt"]!==void(0))!==false){return(_3946)(M);}else{return(_3948)(M);}};

var _3938=function(M){if(--M.cbt<0){throw _3938;}
M.e.length-=(M.a-1);
return(_3939)(M);};

var _3933=function(M){if(--M.cbt<0){throw _3933;}
M.e.length-=(M.a-1);
return(_3934)(M);};

var _3934=function(M){if(--M.cbt<0){throw _3934;}
};

var _3950=function(M){if(--M.cbt<0){throw _3950;}
M.e.length-=(M.a-1);
return(_3951)(M);};

var _3947=function(M){if(--M.cbt<0){throw _3947;}
M.e.length-=(M.a-1);
return(_3948)(M);};

var _3955=function(M){return(_3932)(M);};

_3939.mvr=_3938;
_3942.mvr=_3941;
_3945.mvr=_3944;
_3948.mvr=_3947;
_3951.mvr=_3950;
_3954.mvr=_3953;
_3934.mvr=_3933;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_3955, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/base.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/base.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/list.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _4746=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.NULL;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4294=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_4345)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4284=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.e[M.e.length-6]=M.e[M.e.length-13];
M.e[M.e.length-7]=M.e[M.e.length-14];
M.e[M.e.length-8]=M.e[M.e.length-15];
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4287,M.p));
return((M.p).label)(M);};

var _4272=function(M){M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4254=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.e.push(M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4259,M.p));
return((M.p).label)(M);};

var _4242=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(void(0));
M.p=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4245,M.p));
return((M.p).label)(M);};

var _4230=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4221=function(M){M.e[M.e.length-2]=new RT.Closure(_3986,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:372:28");
return(_4220)(M);};

var _4205=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4190=function(M){M.e[M.e.length-2]=new RT.Closure(_3981,(RT.makeArityAtLeast(0)),[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:385:34");
return(_4187)(M);};

var _4178=function(M){M.e.push(void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-4],M.e[M.e.length-5]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-4][60];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-3]);
M.v=RT.checkedCdr(M, M.e[M.e.length-3]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4164=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_3975)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_3977)(M);}};

var _4157=function(M){M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4613=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4600=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4601)(M);};

var _4074=function(M){M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4069=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3960,1,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_3961,2,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_3962,(RT.makeArityAtLeast(0)),[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:333:18");
M.e[M.e.length-4]=new RT.Closure(_3959,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=3;
return(_4070)(M);};

var _4562=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2322;
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4745=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2323;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4746)(M);};

var _4742=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_4745)(M);}else{M.v=RT.VOID;
return(_4746)(M);}};

var _4732=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4282=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-8]);
M.v=RT.isList(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_4284)(M);}else{M.v=RT.VOID;
return(_4285)(M);}};

var _4723=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4034)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_4036)(M);}};

var _4257=function(M){M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4248=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(void(0));
M.p=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4251,M.p));
return((M.p).label)(M);};

var _4692=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4236=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4239,M.p));
return((M.p).label)(M);};

var _4682=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.e[M.e.length-8]=M.e[M.e.length-14];
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4685,M.p));
return((M.p).label)(M);};

var _4218=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][59];
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4221)(M);}else{M.e[M.e.length-2]=new RT.Closure(_3985,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:371:28");
return(_4220)(M);}};

var _4667=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][51];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4192=function(M){M.e[M.e.length-2]=new RT.Closure(_3983,(RT.makeArityAtLeast(0)),[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:388:34");
return(_4187)(M);};

var _4188=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4192)(M);}else{M.e[M.e.length-2]=new RT.Closure(_3982,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:387:34");
return(_4187)(M);}};

var _4656=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4023)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_4024)(M);}};

var _4163=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4164)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3976)(M);}};

var _4156=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3975,1,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_3976,2,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_3977,(RT.makeArityAtLeast(0)),[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:333:18");
M.e[M.e.length-4]=new RT.Closure(_3974,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=3;
return(_4157)(M);};

var _4631=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym2324;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4630=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2324;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4631)(M);};

var _4616=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=RT.checkedCdr(M, M.e[M.e.length-10]);
M.p=_4010_c;
M.a=5;
M.e.splice(M.e.length-10,5);
M.c[M.c.length-1].p=M.p;
return(_4010)(M);};

var _4106=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4599=function(M){M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_4600)(M);}else{M.v=RT.VOID;
return(_4601)(M);}};

var _4584=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4004)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_4005)(M);}};

var _4070=function(M){M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4066=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.v=(1===M.e[M.e.length-2]);
if(M.v===false){return(_4073)(M);}else{M.e[M.e.length-1]=new RT.Closure(_3963,1,[M.e[M.e.length-5],M.e[M.e.length-4]],"composed");
return(_4074)(M);}};

var _4560=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4562)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4567,M.p));
return((M.p).label)(M);}};

var _4054=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=sym2325;
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4057,M.p));
return((M.p).label)(M);};

var _4749=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2326;
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4750)(M);};

var _4741=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2323;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4742)(M);};

var _4285=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e[M.e.length-1]=M.primitives["length"];
M.v=RT.checkedCar(M, M.e[M.e.length-10]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4291,M.p));
return((M.p).label)(M);};

var _4730=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-8]);
M.p=_4035_c;
M.a=3;
M.c.push(new RT.CallFrame(_4734,M.p));
return(_4035)(M);};

var _4863=function(M){if(--M.cbt<0){throw _4863;}
M.c.push(new RT.PromptFrame(_4865,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4014,2,[M.e[M.e.length-1]],"remq*");
M.e[M.e.length-1][11]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4262=function(M){M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4256=function(M){M.v=M.e[M.e.length-7];
return(_4257)(M);};

var _4699=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(void(0),void(0));
M.e[M.e.length-1]="given procedure does not accept ~a arguments: ";
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4704,M.p));
return((M.p).label)(M);};

var _4831=function(M){if(--M.cbt<0){throw _4831;}
M.c.push(new RT.PromptFrame(_4833,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3991,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4686=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=2;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.e[M.e.length-8]=M.e[M.e.length-14];
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4689,M.p));
return((M.p).label)(M);};

var _4683=function(M){M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){return(_4686)(M);}else{M.v=RT.VOID;
return(_4687)(M);}};

var _4212=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4715=function(M){if(--M.cbt<0){throw _4715;}
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.p=_4031_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_4031)(M);};

var _4666=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2327;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4667)(M);};

var _4185=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][60];
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4188)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4190)(M);}else{M.e[M.e.length-2]=new RT.Closure(_3980,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:384:34");
return(_4187)(M);}}};

var _4583=function(M){if(--M.cbt<0){throw _4583;}
M.e[M.e.length-2]=M.v;
return(_4581)(M);};

var _4647=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][46];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4646=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2328;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4647)(M);};

var _4641=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][45];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4146=function(M){M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4151,M.p));
return((M.p).label)(M);};

var _4633=function(M){if(M.v===false){return(_4630)(M);}else{M.v=RT.VOID;
return(_4631)(M);}};

var _4626=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4012)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_4013)(M);}};

var _4132=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=sym2329;
M.e[M.e.length-3]="procedure (arity 1)";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4135,M.p));
return((M.p).label)(M);};

var _4126=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=sym2329;
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4129,M.p));
return((M.p).label)(M);};

var _4096=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4598=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4599)(M);};

var _4589=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym2330;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4591=function(M){if(M.v===false){return(_4588)(M);}else{M.v=RT.VOID;
return(_4589)(M);}};

var _4073=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3965,1,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_3966,2,[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_3967,(RT.makeArityAtLeast(0)),[M.e[M.e.length-8],M.e[M.e.length-7]],"...private/list.rkt:333:18");
M.e[M.e.length-4]=new RT.Closure(_3964,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=3;
return(_4074)(M);};

var _4575=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4580,M.p));
return((M.p).label)(M);};

var _4571=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_4002_c;
M.a=3;
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return(_4002)(M);};

var _4058=function(M){M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][64];
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][61];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-11]);
M.v=RT.checkedCdr(M, M.e[M.e.length-11]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4063,M.p));
return((M.p).label)(M);};

var _4551=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2328;
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4519=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym2331;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4220=function(M){M.e.pop();
M.v=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4472=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4477,M.p));
return((M.p).label)(M);};

var _4470=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym2332;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4299=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym2327;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4744=function(M){if(M.v===false){return(_4741)(M);}else{M.v=RT.VOID;
return(_4742)(M);}};

var _4888=function(M){if(--M.cbt<0){throw _4888;}
M.c.push(new RT.PromptFrame(_4890,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_4030,3,[M.e[M.e.length-3]],"...private/list.rkt:239:4");
M.e[M.e.length-2]=new RT.Closure(_4032,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:243:4");
M.v=new RT.Closure(_4029,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldl");
M.e.length-=2;
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4873=function(M){if(--M.cbt<0){throw _4873;}
M.c.push(new RT.PromptFrame(_4875,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4019,3,[M.e[M.e.length-1]],"bad-item");
M.e[M.e.length-1][17]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4865=function(M){if(--M.cbt<0){throw _4865;}
M.c.push(new RT.PromptFrame(_4867,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4015,2,[M.e[M.e.length-1]],"remv*");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4712=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-8]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4715,M.p));
return((M.p).label)(M);};

var _4705=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4030)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_4032)(M);}};

var _4841=function(M){if(--M.cbt<0){throw _4841;}
M.c.push(new RT.PromptFrame(_4843,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3996,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][49]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4835=function(M){if(--M.cbt<0){throw _4835;}
M.c.push(new RT.PromptFrame(_4837,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3993,7,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4690=function(M){M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4695,M.p));
return((M.p).label)(M);};

var _4817=function(M){if(--M.cbt<0){throw _4817;}
M.c.push(new RT.PromptFrame(_4819,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3978,2,[M.e[M.e.length-1]],"pipeline*");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4675=function(M){M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-3]);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4678,M.p));
return((M.p).label)(M);};

var _4708=function(M){if(--M.cbt<0){throw _4708;}
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_4031_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_4031)(M);};

var _4669=function(M){if(M.v===false){return(_4666)(M);}else{M.v=RT.VOID;
return(_4667)(M);}};

var _4661=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][50];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4580=function(M){if(--M.cbt<0){throw _4580;}
if(M.v===false){return(_4577)(M);}else{M.v=RT.checkedCdr(M, M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4557=function(M){if(--M.cbt<0){throw _4557;}
if(M.v===false){return(_4554)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4649=function(M){if(M.v===false){return(_4646)(M);}else{M.v=RT.VOID;
return(_4647)(M);}};

var _4640=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2322;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4641)(M);};

var _4463=function(M){if(--M.cbt<0){throw _4463;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4465)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4468,M.p));
return((M.p).label)(M);}};

var _4632=function(M){M.v=false;
return(_4633)(M);};

var _4133=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-7][63];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=RT.checkedCar(M, M.e[M.e.length-11]);
M.e[M.e.length-4]=RT.checkedCdr(M, M.e[M.e.length-11]);
M.e[M.e.length-5]=RT.checkedAdd1(M, M.e[M.e.length-12]);
M.v=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-13]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4130=function(M){M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][62];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-11]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-11]);
M.p=_3969_c;
M.a=2;
M.c.push(new RT.CallFrame(_4140,M.p));
return(_3969)(M);};

var _4113=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4601=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_4009_c;
M.a=3;
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return(_4009)(M);};

var _4081=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_3960)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_3962)(M);}};

var _4588=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2330;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4589)(M);};

var _4590=function(M){M.v=false;
return(_4591)(M);};

var _4577=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-8]);
M.p=_4002_c;
M.a=3;
M.c.push(new RT.CallFrame(_4583,M.p));
return(_4002)(M);};

var _3962=function(M){if(--M.cbt<0){throw _3962;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:333:18 whalesong/lang/private/list.rkt 333 18 11664 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4092,M.p));
return((M.p).label)(M);};

var _4570=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4571)(M);};

var _4055=function(M){M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_4058)(M);}else{M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=RT.checkedCar(M, M.e[M.e.length-11]);
M.e[M.e.length-4]=RT.checkedCdr(M, M.e[M.e.length-11]);
M.e[M.e.length-5]=RT.checkedAdd1(M, M.e[M.e.length-12]);
M.v=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-13]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4051=function(M){M.c.push(new RT.PromptFrame(_4053,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/list.rkt"]=new RT.ModuleRecord("list",_4806);
return(_4805)(M);};

var _4545=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym2331;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4521=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4526,M.p));
return((M.p).label)(M);};

var _4507=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4512,M.p));
return((M.p).label)(M);};

var _4860=function(M){if(--M.cbt<0){throw _4860;}
M.e.length-=(M.a-1);
return(_4861)(M);};

var _4465=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_4490)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4456=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym2332;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4421=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4805=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4402=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_4447)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4786=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][62];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4779=function(M){M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2329;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4777=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_4042)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_4045)(M);}};

var _4349=function(M){M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){return(_4398)(M);}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4751=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2326;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4752)(M);};

_4906=RT.si_context_expected(2);

var _4743=function(M){M.v=false;
return(_4744)(M);};

var _4886=function(M){if(--M.cbt<0){throw _4886;}
M.c.push(new RT.PromptFrame(_4888,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4028,5,[M.e[M.e.length-1]],"check-fold");
M.e[M.e.length-1][25]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4871=function(M){if(--M.cbt<0){throw _4871;}
M.c.push(new RT.PromptFrame(_4873,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4018,2,[M.e[M.e.length-1]],"bad-list");
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4861=function(M){if(--M.cbt<0){throw _4861;}
M.c.push(new RT.PromptFrame(_4863,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_4012,2,[M.e[M.e.length-3]],"...private/list.rkt:98:4");
M.e[M.e.length-2]=new RT.Closure(_4013,3,[M.e[M.e.length-3]],"...private/list.rkt:99:4");
M.v=new RT.Closure(_4011,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove*");
M.e.length-=2;
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4859=function(M){if(--M.cbt<0){throw _4859;}
M.c.push(new RT.PromptFrame(_4861,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4008,4,[M.e[M.e.length-1]],"do-remove*");
M.e[M.e.length-1][9]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4851=function(M){if(--M.cbt<0){throw _4851;}
M.c.push(new RT.PromptFrame(_4853,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4001,4,[M.e[M.e.length-1]],"do-remove");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4839=function(M){if(--M.cbt<0){throw _4839;}
M.c.push(new RT.PromptFrame(_4841,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3995,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4829=function(M){if(--M.cbt<0){throw _4829;}
M.c.push(new RT.PromptFrame(_4831,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3990,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4687=function(M){M.v=(M.e[M.e.length-6]===RT.NULL);
if(M.v===false){return(_4690)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4692)(M);}else{M.v=RT.VOID;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _4815=function(M){if(--M.cbt<0){throw _4815;}
M.c.push(new RT.PromptFrame(_4817,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3972,2,[M.e[M.e.length-1]],"simple-compose");
M.e[M.e.length-1][62]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4679=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3982=function(M){if(--M.cbt<0){throw _3982;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:387:34 whalesong/lang/private/list.rkt 387 34 14265 29)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4207,M.p));
return((M.p).label)(M);};

var _4668=function(M){M.v=false;
return(_4669)(M);};

var _4660=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4661)(M);};

var _4021=function(M){if(--M.cbt<0){throw _4021;}
//"lambda body for #(struct:LamPositionalName assv whalesong/lang/private/list.rkt 182 11 5719 55)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4529=function(M){if(--M.cbt<0){throw _4529;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_4531)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym2331;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4648=function(M){M.v=false;
return(_4649)(M);};

var _4643=function(M){if(M.v===false){return(_4640)(M);}else{M.v=RT.VOID;
return(_4641)(M);}};

var _4461=function(M){if(--M.cbt<0){throw _4461;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4458)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4138=function(M){M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4414=function(M){if(--M.cbt<0){throw _4414;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4416)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4419,M.p));
return((M.p).label)(M);}};

var _4127=function(M){M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_4130)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4132)(M);}else{M.v=RT.VOID;
return(_4133)(M);}}};

var _4120=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4605=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-7];
M.p=_4010_c;
M.a=5;
M.e.splice(M.e.length-9,4);
M.c[M.c.length-1].p=M.p;
return(_4010)(M);};


var _4080=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4081)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3961)(M);}};

var _3964=function(M){if(--M.cbt<0){throw _3964;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4102)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3965)(M);}};

var _4581=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4232=function(M){if(--M.cbt<0){throw _4232;}
M.a=1;
return(_4233)(M);};

var _4564=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][45];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.checkedCdr(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4904=function(M){M.e.splice(M.e.length-2,1);
M.e.splice(M.e.length-2,1);
M.e[M.e.length-2][42]=M.v;
M.e[M.e.length-2][43]=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4549=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4551)(M);}else{M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4557,M.p));
return((M.p).label)(M);}};

var _4531=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][47];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4901=function(M){if(--M.cbt<0){throw _4901;}
M.e.length-=(M.a-1);
return(_4902)(M);};

var _4514=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_4539)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4858=function(M){if(--M.cbt<0){throw _4858;}
M.e.length-=(M.a-1);
return(_4859)(M);};

var _4854=function(M){if(--M.cbt<0){throw _4854;}
M.e.length-=(M.a-1);
return(_4855)(M);};

var _4458=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4463,M.p));
return((M.p).label)(M);};

var _4447=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4433=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][49];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4423=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4428,M.p));
return((M.p).label)(M);};

var _4807=function(M){if(M.modules["whalesong/lang/unsafe/ops.rkt"].isInvoked!==false){return(_4809)(M);}else{M.c.push(new RT.CallFrame(_4809,M.p));
return(M.modules["whalesong/lang/unsafe/ops.rkt"].label)(M);}};

var _4800=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][64];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4785=function(M){M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2329;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=4;
return(_4786)(M);};

var _4370=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4356=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4363,M.p));
return((M.p).label)(M);};

var _4770=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4760=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2334;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4761)(M);};

var _4758=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2334;
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4759)(M);};

var _4754=function(M){if(M.v===false){return(_4751)(M);}else{M.v=RT.VOID;
return(_4752)(M);}};

var _4902=function(M){if(--M.cbt<0){throw _4902;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/list.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _4289=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-7]=M.e[M.e.length-8][52];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=RT.checkedCdr(M, M.e[M.e.length-14]);
M.v=RT.checkedAdd1(M, M.e[M.e.length-15]);
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-15,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

_4883=RT.si_context_expected(4);

var _4869=function(M){if(--M.cbt<0){throw _4869;}
M.c.push(new RT.PromptFrame(_4871,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4017,2,[M.e[M.e.length-1]],"findf");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4719=function(M){if(--M.cbt<0){throw _4719;}
M.e.length-=(M.a-1);
return(_4720)(M);};

var _4857=function(M){if(--M.cbt<0){throw _4857;}
M.c.push(new RT.PromptFrame(_4859,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4007,2,[M.e[M.e.length-1]],"remv");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4849=function(M){if(--M.cbt<0){throw _4849;}
M.c.push(new RT.PromptFrame(_4851,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4000,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4837=function(M){if(--M.cbt<0){throw _4837;}
M.c.push(new RT.PromptFrame(_4839,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3994,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4833=function(M){if(--M.cbt<0){throw _4833;}
M.c.push(new RT.PromptFrame(_4835,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3992,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4827=function(M){if(--M.cbt<0){throw _4827;}
M.c.push(new RT.PromptFrame(_4829,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3989,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4819=function(M){if(--M.cbt<0){throw _4819;}
M.c.push(new RT.PromptFrame(_4821,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3979,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][60]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4811=function(M){if(--M.cbt<0){throw _4811;}
M.c.push(new RT.PromptFrame(_4813,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3957,2,[M.e[M.e.length-1]],"simple-compose");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4726=function(M){if(--M.cbt<0){throw _4726;}
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_4035_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_4035)(M);};

var _4704=function(M){if(--M.cbt<0){throw _4704;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd(M, 2,M.e[M.e.length-1]);
M.e.pop();
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4663=function(M){if(M.v===false){return(_4660)(M);}else{M.v=RT.VOID;
return(_4661)(M);}};

var _4022=function(M){if(--M.cbt<0){throw _4022;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4656)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_4023)(M);}};

var _4526=function(M){if(--M.cbt<0){throw _4526;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4529,M.p));
return((M.p).label)(M);};

var _4524=function(M){if(--M.cbt<0){throw _4524;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_4521)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4642=function(M){M.v=false;
return(_4643)(M);};

var _4454=function(M){if(--M.cbt<0){throw _4454;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4456)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4461,M.p));
return((M.p).label)(M);}};

var _4431=function(M){if(--M.cbt<0){throw _4431;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_4433)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4412=function(M){if(--M.cbt<0){throw _4412;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4409)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _4611=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-7]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4619,M.p));
return((M.p).label)(M);};

var _4103=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_3965)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_3967)(M);}};

var _4309=function(M){if(--M.cbt<0){throw _4309;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4311)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4314,M.p));
return((M.p).label)(M);}};

var _4279=function(M){if(--M.cbt<0){throw _4279;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4269=function(M){if(--M.cbt<0){throw _4269;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4002=function(M){if(--M.cbt<0){throw _4002;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 61 2 1755 156)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4575)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4197=function(M){if(--M.cbt<0){throw _4197;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4171=function(M){if(--M.cbt<0){throw _4171;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4554=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-5][46];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.v=RT.checkedCdr(M, M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4881=function(M){M.e.splice(M.e.length-4,1);
M.e.splice(M.e.length-4,1);
M.e.splice(M.e.length-4,1);
M.e.splice(M.e.length-4,1);
M.e[M.e.length-4][18]=M.v;
M.e[M.e.length-4][19]=M.e[M.e.length-1];
M.e[M.e.length-4][20]=M.e[M.e.length-2];
M.e[M.e.length-4][21]=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4539=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym2331;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4905=function(M){if(--M.cbt<0){throw _4905;}
if((M.a-2)===0){return(_4904)(M);}else{RT.si_context_expected(2)(M);
}};

var _4899=function(M){if(--M.cbt<0){throw _4899;}
M.e.length-=(M.a-1);
return(_4900)(M);};

var _4893=function(M){if(--M.cbt<0){throw _4893;}
M.e.length-=(M.a-1);
return(_4894)(M);};

var _4500=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_4545)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4496=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym2332;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4482=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][48];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4856=function(M){if(--M.cbt<0){throw _4856;}
M.e.length-=(M.a-1);
return(_4857)(M);};

var _4852=function(M){if(--M.cbt<0){throw _4852;}
M.e.length-=(M.a-1);
return(_4853)(M);};

var _4846=function(M){if(--M.cbt<0){throw _4846;}
M.e.length-=(M.a-1);
return(_4847)(M);};

var _4451=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_4496)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4822=function(M){if(--M.cbt<0){throw _4822;}
M.e.length-=(M.a-1);
return(_4823)(M);};

var _4814=function(M){if(--M.cbt<0){throw _4814;}
M.e.length-=(M.a-1);
return(_4815)(M);};

var _4409=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4414,M.p));
return((M.p).label)(M);};

var _4799=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2325;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_4800)(M);};

var _4795=function(M){M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2325;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4784=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4785)(M);}else{M.v=RT.VOID;
return(_4786)(M);}};

var _4783=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2329;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_4784)(M);};


var _4776=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_4777)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_4044)(M);}};

var _4345=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym2327;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4763=function(M){if(M.v===false){return(_4760)(M);}else{M.v=RT.VOID;
return(_4761)(M);}};

var _4316=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym2327;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4753=function(M){M.v=false;
return(_4754)(M);};

var _4900=function(M){if(--M.cbt<0){throw _4900;}
M.c.push(new RT.PromptFrame(_4902,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0));
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_4042,1,[M.e[M.e.length-6]],"...private/list.rkt:394:12");
M.e[M.e.length-2]=new RT.Closure(_4043,2,[M.e[M.e.length-6]],"...private/list.rkt:396:12");
M.e[M.e.length-3]=_4044_c;
M.e[M.e.length-4]=new RT.Closure(_4045,(RT.makeArityAtLeast(1)),[M.e[M.e.length-6]],"...private/list.rkt:404:12");
M.e[M.e.length-5]=new RT.Closure(_4041,RT.makePair(1,RT.makePair(2,RT.makePair(0,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"compose1");
M.e.length-=4;
M.e.push(void(0));
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_4047,1,[M.e[M.e.length-7]],"...private/list.rkt:394:12");
M.e[M.e.length-2]=new RT.Closure(_4048,2,[M.e[M.e.length-7]],"...private/list.rkt:396:12");
M.e[M.e.length-3]=_4049_c;
M.e[M.e.length-4]=new RT.Closure(_4050,(RT.makeArityAtLeast(1)),[M.e[M.e.length-7]],"...private/list.rkt:404:12");
M.e[M.e.length-5]=new RT.Closure(_4046,RT.makePair(1,RT.makePair(2,RT.makePair(0,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"compose");
M.e.length-=4;
M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4906,M.p));
return((M.p).label)(M);};

var _4896=function(M){if(--M.cbt<0){throw _4896;}
M.c.push(new RT.PromptFrame(_4898,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4039,2,[M.e[M.e.length-1]],"build-string");
M.e[M.e.length-1][37]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4877=function(M){if(--M.cbt<0){throw _4877;}
M.c.push(new RT.PromptFrame(_4886,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=_4026_c;
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4725=function(M){if(--M.cbt<0){throw _4725;}
M.e.length-=(M.a-1);
return(_4726)(M);};

var _4036=function(M){if(--M.cbt<0){throw _4036;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:258:4 whalesong/lang/private/list.rkt 258 4 8639 242)"

M.unspliceRestFromStack(3,(M.a-3));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym2335;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4738,M.p));
return((M.p).label)(M);};

var _4855=function(M){if(--M.cbt<0){throw _4855;}
M.c.push(new RT.PromptFrame(_4857,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4006,2,[M.e[M.e.length-1]],"remq");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4847=function(M){if(--M.cbt<0){throw _4847;}
M.c.push(new RT.PromptFrame(_4849,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3999,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _4825=function(M){if(--M.cbt<0){throw _4825;}
M.c.push(new RT.PromptFrame(_4827,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3988,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4813=function(M){if(--M.cbt<0){throw _4813;}
M.c.push(new RT.PromptFrame(_4815,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3968,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][63]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4738=function(M){if(--M.cbt<0){throw _4738;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4026=function(M){if(--M.cbt<0){throw _4026;}
//"lambda body for #(struct:LamPositionalName mapadd whalesong/lang/private/list.rkt 206 0 6693 128)"

M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=_4027_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_4027)(M);};

var _4702=function(M){if(--M.cbt<0){throw _4702;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd(M, 2,M.e[M.e.length-1]);
M.e.pop();
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4699)(M);}else{M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4689=function(M){if(--M.cbt<0){throw _4689;}
return(_4687)(M);};

var _4024=function(M){if(--M.cbt<0){throw _4024;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:187:13 whalesong/lang/private/list.rkt 187 13 5882 258)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4662)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4663)(M);}};

var _4018=function(M){if(--M.cbt<0){throw _4018;}
//"lambda body for #(struct:LamPositionalName bad-list whalesong/lang/private/list.rkt 138 0 4055 136)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4517=function(M){if(--M.cbt<0){throw _4517;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4519)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4524,M.p));
return((M.p).label)(M);}};

var _4503=function(M){if(--M.cbt<0){throw _4503;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4505)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4510,M.p));
return((M.p).label)(M);}};

var _4014=function(M){if(--M.cbt<0){throw _4014;}
//"lambda body for #(struct:LamPositionalName remq* whalesong/lang/private/list.rkt 105 0 3120 50)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym2336;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eq?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4428=function(M){if(--M.cbt<0){throw _4428;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4431,M.p));
return((M.p).label)(M);};

var _4405=function(M){if(--M.cbt<0){throw _4405;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4407)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4412,M.p));
return((M.p).label)(M);}};

var _4379=function(M){if(--M.cbt<0){throw _4379;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4382,M.p));
return((M.p).label)(M);};

var _4363=function(M){if(--M.cbt<0){throw _4363;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4365)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4368,M.p));
return((M.p).label)(M);}};

var _4329=function(M){if(--M.cbt<0){throw _4329;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_4331)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym2327;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _4287=function(M){if(--M.cbt<0){throw _4287;}
return(_4285)(M);};

var _3966=function(M){if(--M.cbt<0){throw _3966;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:332:18 whalesong/lang/private/list.rkt 332 18 11622 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4115,M.p));
return((M.p).label)(M);};

var _4245=function(M){if(--M.cbt<0){throw _4245;}
M.e[M.e.length-3]=M.v;
M.v=M.primitives["string-set!"]._i(M);
M.e.length-=3;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][57];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=RT.checkedAdd1(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4226=function(M){if(--M.cbt<0){throw _4226;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4207=function(M){if(--M.cbt<0){throw _4207;}
M.a=1;
return(_4208)(M);};


var _4135=function(M){if(--M.cbt<0){throw _4135;}
return(_4133)(M);};

var _4108=function(M){if(--M.cbt<0){throw _4108;}
M.a=1;
return(_4109)(M);};

var _4084=function(M){if(--M.cbt<0){throw _4084;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4897=function(M){if(--M.cbt<0){throw _4897;}
M.e.length-=(M.a-1);
return(_4898)(M);};

var _4891=function(M){if(--M.cbt<0){throw _4891;}
M.e.length-=(M.a-1);
return(_4892)(M);};

var _4505=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym2331;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4882=function(M){if(--M.cbt<0){throw _4882;}
if((M.a-4)===0){return(_4881)(M);}else{RT.si_context_expected(4)(M);
}};

var _4870=function(M){if(--M.cbt<0){throw _4870;}
M.e.length-=(M.a-1);
return(_4871)(M);};


var _4850=function(M){if(--M.cbt<0){throw _4850;}
M.e.length-=(M.a-1);
return(_4851)(M);};

var _4844=function(M){if(--M.cbt<0){throw _4844;}
M.e.length-=(M.a-1);
return(_4845)(M);};

var _4838=function(M){if(--M.cbt<0){throw _4838;}
M.e.length-=(M.a-1);
return(_4839)(M);};

var _4830=function(M){if(--M.cbt<0){throw _4830;}
M.e.length-=(M.a-1);
return(_4831)(M);};

var _4820=function(M){if(--M.cbt<0){throw _4820;}
M.e.length-=(M.a-1);
return(_4821)(M);};

var _4812=function(M){if(--M.cbt<0){throw _4812;}
M.e.length-=(M.a-1);
return(_4813)(M);};

var _4416=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_4441)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4798=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4799)(M);}else{M.v=RT.VOID;
return(_4800)(M);}};

var _4398=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4793=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_4047)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_4050)(M);}};

var _4372=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4379,M.p));
return((M.p).label)(M);};

var _4782=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4783)(M);}else{M.v=RT.VOID;
return(_4784)(M);}};


var _4775=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4776)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_4043)(M);}};

var _4769=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2337;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4770)(M);};

var _4762=function(M){M.v=false;
return(_4763)(M);};

var _4752=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-3]);
M.a=1;
M.v=M.primitives["make-vector"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=0;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4750=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4753)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4754)(M);}};

var _4898=function(M){if(--M.cbt<0){throw _4898;}
M.c.push(new RT.PromptFrame(_4900,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4040,2,[M.e[M.e.length-1]],"build-list");
M.e[M.e.length-1][40]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4894=function(M){if(--M.cbt<0){throw _4894;}
M.c.push(new RT.PromptFrame(_4896,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4038,2,[M.e[M.e.length-1]],"build-vector");
M.e[M.e.length-1][33]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4737=function(M){if(--M.cbt<0){throw _4737;}
M.e.length-=(M.a-1);
return(_4738)(M);};


var _4033=function(M){if(--M.cbt<0){throw _4033;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4723)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_4034)(M);}};

var _4853=function(M){if(--M.cbt<0){throw _4853;}
M.c.push(new RT.PromptFrame(_4855,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_4004,2,[M.e[M.e.length-3]],"...private/list.rkt:68:4");
M.e[M.e.length-2]=new RT.Closure(_4005,3,[M.e[M.e.length-3]],"...private/list.rkt:69:4");
M.v=new RT.Closure(_4003,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove");
M.e.length-=2;
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4845=function(M){if(--M.cbt<0){throw _4845;}
M.c.push(new RT.PromptFrame(_4847,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3998,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4029=function(M){if(--M.cbt<0){throw _4029;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4705)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_4030)(M);}};

var _4697=function(M){if(--M.cbt<0){throw _4697;}
M.e.length-=(M.a-1);
return(_4698)(M);};

var _4823=function(M){if(--M.cbt<0){throw _4823;}
M.c.push(new RT.PromptFrame(_4825,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3987,3,[M.e[M.e.length-1]],"recr");
M.e[M.e.length-1][58]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4684=function(M){if(--M.cbt<0){throw _4684;}
M.e.length-=(M.a-1);
return(_4683)(M);};

var _4734=function(M){if(--M.cbt<0){throw _4734;}
return(_4732)(M);};

var _4720=function(M){if(--M.cbt<0){throw _4720;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4698=function(M){if(--M.cbt<0){throw _4698;}
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4702,M.p));
return((M.p).label)(M);};

var _4685=function(M){if(--M.cbt<0){throw _4685;}
return(_4683)(M);};


var _4020=function(M){if(--M.cbt<0){throw _4020;}
//"lambda body for #(struct:LamPositionalName assq whalesong/lang/private/list.rkt 179 11 5636 54)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][47];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4512=function(M){if(--M.cbt<0){throw _4512;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4514)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4517,M.p));
return((M.p).label)(M);}};

var _4480=function(M){if(--M.cbt<0){throw _4480;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_4482)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym2332;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _4426=function(M){if(--M.cbt<0){throw _4426;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4423)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4382=function(M){if(--M.cbt<0){throw _4382;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_4384)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4377=function(M){if(--M.cbt<0){throw _4377;}
if(M.v===false){return(_4372)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4361=function(M){if(--M.cbt<0){throw _4361;}
if(M.v===false){return(_4356)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4326=function(M){if(--M.cbt<0){throw _4326;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4329,M.p));
return((M.p).label)(M);};

var _4307=function(M){if(--M.cbt<0){throw _4307;}
M.e.pop();
if(M.v===false){return(_4301)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4006=function(M){if(--M.cbt<0){throw _4006;}
//"lambda body for #(struct:LamPositionalName remq whalesong/lang/private/list.rkt 75 0 2227 59)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym2338;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eq?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4267=function(M){if(--M.cbt<0){throw _4267;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4269,M.p));
return((M.p).label)(M);};

var _4259=function(M){if(--M.cbt<0){throw _4259;}
if(M.v===false){return(_4256)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-8]);
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_4257)(M);}};

var _4241=function(M){if(--M.cbt<0){throw _4241;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3958=function(M){if(--M.cbt<0){throw _3958;}
//"lambda body for #(struct:LamPositionalName composed whalesong/lang/private/list.rkt 329 16 11487 26)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4077,M.p));
return((M.p).label)(M);};

var _4167=function(M){if(--M.cbt<0){throw _4167;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4129=function(M){if(--M.cbt<0){throw _4129;}
return(_4127)(M);};

var _4098=function(M){if(--M.cbt<0){throw _4098;}
M.a=1;
return(_4099)(M);};

var _4077=function(M){if(--M.cbt<0){throw _4077;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4895=function(M){if(--M.cbt<0){throw _4895;}
M.e.length-=(M.a-1);
return(_4896)(M);};

var _4889=function(M){if(--M.cbt<0){throw _4889;}
M.e.length-=(M.a-1);
return(_4890)(M);};

var _4885=function(M){if(--M.cbt<0){throw _4885;}
M.e.length-=(M.a-1);
return(_4886)(M);};

var _4876=function(M){if(--M.cbt<0){throw _4876;}
M.e.length-=(M.a-1);
return(_4877)(M);};

var _4868=function(M){if(--M.cbt<0){throw _4868;}
M.e.length-=(M.a-1);
return(_4869)(M);};


var _4848=function(M){if(--M.cbt<0){throw _4848;}
M.e.length-=(M.a-1);
return(_4849)(M);};

var _4842=function(M){if(--M.cbt<0){throw _4842;}
M.e.length-=(M.a-1);
return(_4843)(M);};

var _4836=function(M){if(--M.cbt<0){throw _4836;}
M.e.length-=(M.a-1);
return(_4837)(M);};

var _4828=function(M){if(--M.cbt<0){throw _4828;}
M.e.length-=(M.a-1);
return(_4829)(M);};

var _4818=function(M){if(--M.cbt<0){throw _4818;}
M.e.length-=(M.a-1);
return(_4819)(M);};

var _4810=function(M){if(--M.cbt<0){throw _4810;}
M.e.length-=(M.a-1);
return(_4811)(M);};

var _4809=function(M){if(--M.cbt<0){throw _4809;}
M.e.push([M.params.currentNamespace.get("do-remove")||M.primitives["do-remove"],M.primitives["raise-type-error"],M.params.currentNamespace.get("remove")||M.primitives["remove"],M.primitives["equal?"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.params.currentNamespace.get("remq")||M.primitives["remq"],M.params.currentNamespace.get("remv")||M.primitives["remv"],M.primitives["eqv?"],M.params.currentNamespace.get("do-remove*")||M.primitives["do-remove*"],M.params.currentNamespace.get("remove*")||M.primitives["remove*"],M.params.currentNamespace.get("remq*")||M.primitives["remq*"],M.params.currentNamespace.get("remv*")||M.primitives["remv*"],M.params.currentNamespace.get("memf")||M.primitives["memf"],M.primitives["raise-mismatch-error"],M.params.currentNamespace.get("findf")||M.primitives["findf"],M.params.currentNamespace.get("bad-list")||M.primitives["bad-list"],M.params.currentNamespace.get("bad-item")||M.primitives["bad-item"],M.params.currentNamespace.get("assq")||M.primitives["assq"],M.params.currentNamespace.get("assv")||M.primitives["assv"],M.params.currentNamespace.get("assoc")||M.primitives["assoc"],M.params.currentNamespace.get("assf")||M.primitives["assf"],[M.modules["whalesong/lang/unsafe/ops.rkt"].prefix,M.modules["whalesong/lang/unsafe/ops.rkt"].getPrefixOffset("unsafe-car1.1"),{moduleName:"whalesong/lang/unsafe/ops.rkt",name:"unsafe-car1.1"}],[M.modules["whalesong/lang/unsafe/ops.rkt"].prefix,M.modules["whalesong/lang/unsafe/ops.rkt"].getPrefixOffset("unsafe-cdr2.3"),{moduleName:"whalesong/lang/unsafe/ops.rkt",name:"unsafe-cdr2.3"}],M.params.currentNamespace.get("mapadd")||M.primitives["mapadd"],M.params.currentNamespace.get("check-fold")||M.primitives["check-fold"],M.primitives["length"],M.primitives["format"],M.params.currentNamespace.get("foldl")||M.primitives["foldl"],M.primitives["map"],M.params.currentNamespace.get("foldr")||M.primitives["foldr"],M.params.currentNamespace.get("filter")||M.primitives["filter"],M.primitives["reverse"],M.params.currentNamespace.get("build-vector")||M.primitives["build-vector"],M.primitives["exact-nonnegative-integer?"],M.primitives["make-vector"],M.primitives["vector-set!"],M.params.currentNamespace.get("build-string")||M.primitives["build-string"],M.primitives["make-string"],M.primitives["string-set!"],M.params.currentNamespace.get("build-list")||M.primitives["build-list"],M.primitives["zero?"],M.params.currentNamespace.get("compose1")||M.primitives["compose1"],M.params.currentNamespace.get("compose")||M.primitives["compose"],M.primitives["procedure-arity"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["do-remove","raise-type-error","remove","equal?","procedure?","procedure-arity-includes?","remq","remv","eqv?","do-remove*","remove*","remq*","remv*","memf","raise-mismatch-error","findf","bad-list","bad-item","assq","assv","assoc","assf","unsafe-car1.1","unsafe-cdr2.3","mapadd","check-fold","length","format","foldl","map","foldr","filter","reverse","build-vector","exact-nonnegative-integer?","make-vector","vector-set!","build-string","make-string","string-set!","build-list","zero?","compose1","compose","procedure-arity",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/private/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_4811,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3956,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4407=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4797=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2325;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_4798)(M);};

var _4792=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_4793)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_4049)(M);}};


var _4781=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2329;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_4782)(M);};

var _4043=function(M){if(--M.cbt<0){throw _4043;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:396:12 whalesong/lang/private/list.rkt 396 12 14684 273)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4781)(M);}else{M.v=RT.VOID;
return(_4782)(M);}};

var _4354=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4772=function(M){if(M.v===false){return(_4769)(M);}else{M.v=RT.VOID;
return(_4770)(M);}};

var _4761=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-3]);
M.a=1;
M.v=M.primitives["make-string"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=0;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4759=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4762)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4763)(M);}};


var _4301=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4309,M.p));
return((M.p).label)(M);};


var _4892=function(M){if(--M.cbt<0){throw _4892;}
M.c.push(new RT.PromptFrame(_4894,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4037,2,[M.e[M.e.length-1]],"filter");
M.e[M.e.length-1][31]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4035=function(M){if(--M.cbt<0){throw _4035;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 254 5 8522 111)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4730)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _4707=function(M){if(--M.cbt<0){throw _4707;}
M.e.length-=(M.a-1);
return(_4708)(M);};

var _3989=function(M){if(--M.cbt<0){throw _3989;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 288 4 9878 113)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-5],M.e[M.e.length-3]);
if(M.v===false){return(_4248)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _4821=function(M){if(--M.cbt<0){throw _4821;}
M.c.push(new RT.PromptFrame(_4823,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3984,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][59]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _4695=function(M){if(--M.cbt<0){throw _4695;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][52];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.e[M.e.length-7]=3;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4698,M.p));
return((M.p).label)(M);};

var _4681=function(M){if(--M.cbt<0){throw _4681;}
M.e[M.e.length-2]=M.v;
return(_4679)(M);};

var _4619=function(M){if(--M.cbt<0){throw _4619;}
if(M.v===false){return(_4616)(M);}else{M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=_4009_c;
M.a=3;
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return(_4009)(M);}};


var _4510=function(M){if(--M.cbt<0){throw _4510;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_4507)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4477=function(M){if(--M.cbt<0){throw _4477;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4480,M.p));
return((M.p).label)(M);};

var _4468=function(M){if(--M.cbt<0){throw _4468;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4470)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4475,M.p));
return((M.p).label)(M);}};

var _4419=function(M){if(--M.cbt<0){throw _4419;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4421)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4426,M.p));
return((M.p).label)(M);}};


var _4375=function(M){if(--M.cbt<0){throw _4375;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4377,M.p));
return((M.p).label)(M);};

var _4359=function(M){if(--M.cbt<0){throw _4359;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4361,M.p));
return((M.p).label)(M);};

var _4324=function(M){if(--M.cbt<0){throw _4324;}
M.e.pop();
if(M.v===false){return(_4318)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4304=function(M){if(--M.cbt<0){throw _4304;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4307,M.p));
return((M.p).label)(M);};

var _4297=function(M){if(--M.cbt<0){throw _4297;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4299)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][22][0][M.e[M.e.length-4][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4304,M.p));
return((M.p).label)(M);}};

var _4277=function(M){if(--M.cbt<0){throw _4277;}
M.e[M.e.length-2]=M.v;
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4279,M.p));
return((M.p).label)(M);};

var _4251=function(M){if(--M.cbt<0){throw _4251;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedVectorSet(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=3;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][56];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=RT.checkedAdd1(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4239=function(M){if(--M.cbt<0){throw _4239;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-6][58];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=RT.checkedAdd1(M, M.e[M.e.length-8]);
M.v=RT.checkedSub1(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4241,M.p));
return((M.p).label)(M);};

var _4201=function(M){if(--M.cbt<0){throw _4201;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4160=function(M){if(--M.cbt<0){throw _4160;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4151=function(M){if(--M.cbt<0){throw _4151;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.p=_3971_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_3971)(M);};

var _4122=function(M){if(--M.cbt<0){throw _4122;}
M.a=1;
return(_4123)(M);};

var _4092=function(M){if(--M.cbt<0){throw _4092;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4063=function(M){if(--M.cbt<0){throw _4063;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4887=function(M){if(--M.cbt<0){throw _4887;}
M.e.length-=(M.a-1);
return(_4888)(M);};


var _4874=function(M){if(--M.cbt<0){throw _4874;}
M.e.length-=(M.a-1);
return(_4875)(M);};

var _4866=function(M){if(--M.cbt<0){throw _4866;}
M.e.length-=(M.a-1);
return(_4867)(M);};



var _4840=function(M){if(--M.cbt<0){throw _4840;}
M.e.length-=(M.a-1);
return(_4841)(M);};

var _4834=function(M){if(--M.cbt<0){throw _4834;}
M.e.length-=(M.a-1);
return(_4835)(M);};

var _4826=function(M){if(--M.cbt<0){throw _4826;}
M.e.length-=(M.a-1);
return(_4827)(M);};

var _4816=function(M){if(--M.cbt<0){throw _4816;}
M.e.length-=(M.a-1);
return(_4817)(M);};

var _4808=function(M){if(--M.cbt<0){throw _4808;}
M.e.length-=(M.a-1);
return(_4809)(M);};

var _4806=function(M){M.modules["whalesong/lang/private/list.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/unsafe/ops.rkt"]!==void(0))!==false){return(_4807)(M);}else{return(_4809)(M);}};


var _4050=function(M){if(--M.cbt<0){throw _4050;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:404:12 whalesong/lang/private/list.rkt 404 12 14994 416)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=0;
M.e[M.e.length-6]=RT.NULL;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4791=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4792)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_4048)(M);}};


var _4365=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_4392)(M);}else{M.v=false;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4045=function(M){if(--M.cbt<0){throw _4045;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:404:12 whalesong/lang/private/list.rkt 404 12 14994 416)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][63];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=0;
M.e[M.e.length-6]=RT.NULL;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4771=function(M){M.v=false;
return(_4772)(M);};

var _4767=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2337;
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4768)(M);};

var _4318=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4326,M.p));
return((M.p).label)(M);};


var _4908=function(M){return(_4051)(M);};

var _4038=function(M){if(--M.cbt<0){throw _4038;}
//"lambda body for #(struct:LamPositionalName build-vector whalesong/lang/private/list.rkt 281 0 9559 434)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_4749)(M);}else{M.v=RT.VOID;
return(_4750)(M);}};

var _4890=function(M){if(--M.cbt<0){throw _4890;}
M.c.push(new RT.PromptFrame(_4892,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_4034,3,[M.e[M.e.length-3]],"...private/list.rkt:252:4");
M.e[M.e.length-2]=new RT.Closure(_4036,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:258:4");
M.v=new RT.Closure(_4033,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldr");
M.e.length-=2;
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4875=function(M){if(--M.cbt<0){throw _4875;}
M.c.push(new RT.PromptFrame(_4877,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_4020,2,[M.e[M.e.length-2]],"assq");
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_4021,2,[M.e[M.e.length-3]],"assv");
M.e.push(void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_4023,2,[M.e[M.e.length-6]],"...private/list.rkt:186:13");
M.e[M.e.length-2]=new RT.Closure(_4024,3,[M.e[M.e.length-6]],"...private/list.rkt:187:13");
M.e[M.e.length-3]=new RT.Closure(_4022,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"assoc");
M.e.length-=2;
M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_4025,2,[M.e[M.e.length-5]],"assf");
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-5];
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4883,M.p));
return((M.p).label)(M);};

var _4867=function(M){if(--M.cbt<0){throw _4867;}
M.c.push(new RT.PromptFrame(_4869,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4016,2,[M.e[M.e.length-1]],"memf");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4032=function(M){if(--M.cbt<0){throw _4032;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:243:4 whalesong/lang/private/list.rkt 243 4 8170 259)"

M.unspliceRestFromStack(3,(M.a-3));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym2339;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4720,M.p));
return((M.p).label)(M);};

var _4843=function(M){if(--M.cbt<0){throw _4843;}
M.c.push(new RT.PromptFrame(_4845,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_3997,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4688=function(M){if(--M.cbt<0){throw _4688;}
M.e.length-=(M.a-1);
return(_4687)(M);};

var _3985=function(M){if(--M.cbt<0){throw _3985;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:371:28 whalesong/lang/private/list.rkt 371 28 13383 24)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4226,M.p));
return((M.p).label)(M);};

var _4053=function(M){if(--M.cbt<0){throw _4053;}
};

var _4027=function(M){if(--M.cbt<0){throw _4027;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 207 2 6721 99)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4675)(M);}else{M.v=RT.makePair(M.e[M.e.length-2],RT.NULL);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3981=function(M){if(--M.cbt<0){throw _3981;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:385:34 whalesong/lang/private/list.rkt 385 34 14134 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-2]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4201,M.p));
return((M.p).label)(M);};

var _4678=function(M){if(--M.cbt<0){throw _4678;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-8]);
M.p=_4027_c;
M.a=3;
M.c.push(new RT.CallFrame(_4681,M.p));
return(_4027)(M);};

var _4615=function(M){if(--M.cbt<0){throw _4615;}
M.e[M.e.length-2]=M.v;
return(_4613)(M);};

var _4567=function(M){if(--M.cbt<0){throw _4567;}
if(M.v===false){return(_4564)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3977=function(M){if(--M.cbt<0){throw _3977;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:333:18 whalesong/lang/private/list.rkt 333 18 11664 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4175,M.p));
return((M.p).label)(M);};

var _4475=function(M){if(--M.cbt<0){throw _4475;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4472)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4015=function(M){if(--M.cbt<0){throw _4015;}
//"lambda body for #(struct:LamPositionalName remv* whalesong/lang/private/list.rkt 108 0 3172 51)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym2340;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eqv?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3971=function(M){if(--M.cbt<0){throw _3971;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 356 8 12717 138)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4146)(M);}else{M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4134=function(M){if(--M.cbt<0){throw _4134;}
M.e.length-=(M.a-1);
return(_4133)(M);};

var _4368=function(M){if(--M.cbt<0){throw _4368;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4370)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4375,M.p));
return((M.p).label)(M);}};

var _4352=function(M){if(--M.cbt<0){throw _4352;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4354)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4359,M.p));
return((M.p).label)(M);}};

var _4321=function(M){if(--M.cbt<0){throw _4321;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4324,M.p));
return((M.p).label)(M);};

var _4314=function(M){if(--M.cbt<0){throw _4314;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_4316)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][22][0][M.e[M.e.length-6][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4321,M.p));
return((M.p).label)(M);}};

var _4291=function(M){if(--M.cbt<0){throw _4291;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_4288)(M);}else{M.v=RT.VOID;
return(_4289)(M);}};

var _4275=function(M){if(--M.cbt<0){throw _4275;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4277,M.p));
return((M.p).label)(M);};

var _4265=function(M){if(--M.cbt<0){throw _4265;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4267,M.p));
return((M.p).label)(M);};

var _3959=function(M){if(--M.cbt<0){throw _3959;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4080)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3960)(M);}};

var _4214=function(M){if(--M.cbt<0){throw _4214;}
M.a=1;
return(_4215)(M);};

var _4175=function(M){if(--M.cbt<0){throw _4175;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4140=function(M){if(--M.cbt<0){throw _4140;}
M.e[M.e.length-1]=M.v;
return(_4138)(M);};

var _4115=function(M){if(--M.cbt<0){throw _4115;}
M.a=1;
return(_4116)(M);};

var _4088=function(M){if(--M.cbt<0){throw _4088;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4057=function(M){if(--M.cbt<0){throw _4057;}
return(_4055)(M);};



var _4215=function(M){if(--M.cbt<0){throw _4215;}
if(M.a===0){return(_4212)(M);}else{M.e.push(M.v);
return(_4212)(M);}};

var _4872=function(M){if(--M.cbt<0){throw _4872;}
M.e.length-=(M.a-1);
return(_4873)(M);};

var _4864=function(M){if(--M.cbt<0){throw _4864;}
M.e.length-=(M.a-1);
return(_4865)(M);};

var _4862=function(M){if(--M.cbt<0){throw _4862;}
M.e.length-=(M.a-1);
return(_4863)(M);};



var _4832=function(M){if(--M.cbt<0){throw _4832;}
M.e.length-=(M.a-1);
return(_4833)(M);};

var _4824=function(M){if(--M.cbt<0){throw _4824;}
M.e.length-=(M.a-1);
return(_4825)(M);};




var _4052=function(M){if(--M.cbt<0){throw _4052;}
M.e.length-=(M.a-1);
return(_4053)(M);};

var _4049=function(M){if(--M.cbt<0){throw _4049;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:403:12 whalesong/lang/private/list.rkt 403 12 14970 11)"

M.v=M.primitives["values"];
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4048=function(M){if(--M.cbt<0){throw _4048;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:396:12 whalesong/lang/private/list.rkt 396 12 14684 273)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4797)(M);}else{M.v=RT.VOID;
return(_4798)(M);}};

var _4046=function(M){if(--M.cbt<0){throw _4046;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4791)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_4047)(M);}};


var _4044=function(M){if(--M.cbt<0){throw _4044;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:403:12 whalesong/lang/private/list.rkt 403 12 14970 11)"

M.v=M.primitives["values"];
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4041=function(M){if(--M.cbt<0){throw _4041;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4775)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_4042)(M);}};

var _4768=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4771)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4772)(M);}};

var _4040=function(M){if(--M.cbt<0){throw _4040;}
//"lambda body for #(struct:LamPositionalName build-list whalesong/lang/private/list.rkt 305 0 10431 412)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_4767)(M);}else{M.v=RT.VOID;
return(_4768)(M);}};


var _4039=function(M){if(--M.cbt<0){throw _4039;}
//"lambda body for #(struct:LamPositionalName build-string whalesong/lang/private/list.rkt 293 0 9995 434)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_4758)(M);}else{M.v=RT.VOID;
return(_4759)(M);}};

var _4311=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_4339)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _4288=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.e[M.e.length-3]=RT.checkedCar(M, M.e[M.e.length-10]);
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=3;
return(_4289)(M);};

var _4037=function(M){if(--M.cbt<0){throw _4037;}
//"lambda body for #(struct:LamPositionalName filter whalesong/lang/private/list.rkt 265 0 8885 481)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4743)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4744)(M);}};

var _3993=function(M){if(--M.cbt<0){throw _3993;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 222 8 7238 446)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){return(_4282)(M);}else{M.v=RT.VOID;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3992=function(M){if(--M.cbt<0){throw _3992;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 245 5 8229 199)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_4272)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4275,M.p));
return((M.p).label)(M);}};


var _4031=function(M){if(--M.cbt<0){throw _4031;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 241 5 8075 89)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4712)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3990=function(M){if(--M.cbt<0){throw _3990;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 273 2 9217 148)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4254)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["reverse"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _4028=function(M){if(--M.cbt<0){throw _4028;}
//"lambda body for #(struct:LamPositionalName check-fold whalesong/lang/private/list.rkt 213 0 6824 1160)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4682)(M);}else{M.v=RT.VOID;
return(_4683)(M);}};


var _3983=function(M){if(--M.cbt<0){throw _3983;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:388:34 whalesong/lang/private/list.rkt 388 34 14329 35)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4214,M.p));
return((M.p).label)(M);};

var _4025=function(M){if(--M.cbt<0){throw _4025;}
//"lambda body for #(struct:LamPositionalName assf whalesong/lang/private/list.rkt 193 11 6170 211)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4668)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4669)(M);}};

var _4662=function(M){M.v=false;
return(_4663)(M);};

var _3978=function(M){if(--M.cbt<0){throw _3978;}
//"lambda body for #(struct:LamPositionalName pipeline* whalesong/lang/private/list.rkt 360 4 12862 1546)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4178)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][59];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4019=function(M){if(--M.cbt<0){throw _4019;}
//"lambda body for #(struct:LamPositionalName bad-item whalesong/lang/private/list.rkt 142 0 4192 200)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=" in ";
M.e[M.e.length-5]=M.e[M.e.length-9];
M.p=M.primitives["raise-mismatch-error"];
RT.raiseArityMismatchError(M,M.p,5);
return(_4020)(M);};

var _4017=function(M){if(--M.cbt<0){throw _4017;}
//"lambda body for #(struct:LamPositionalName findf whalesong/lang/private/list.rkt 123 0 3608 445)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4648)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4649)(M);}};

var _3976=function(M){if(--M.cbt<0){throw _3976;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:332:18 whalesong/lang/private/list.rkt 332 18 11622 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4171,M.p));
return((M.p).label)(M);};

var _4016=function(M){if(--M.cbt<0){throw _4016;}
//"lambda body for #(struct:LamPositionalName memf whalesong/lang/private/list.rkt 111 0 3225 381)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4642)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4643)(M);}};

var _4013=function(M){if(--M.cbt<0){throw _4013;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:99:4 whalesong/lang/private/list.rkt 99 4 2905 211)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4632)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4633)(M);}};

var _4011=function(M){if(--M.cbt<0){throw _4011;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4626)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_4012)(M);}};


var _4010=function(M){if(--M.cbt<0){throw _4010;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 90 13 2602 216)"

M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){return(_4611)(M);}else{M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.p=_4009_c;
M.a=3;
M.c.push(new RT.CallFrame(_4615,M.p));
return(_4009)(M);}};

var _4009=function(M){if(--M.cbt<0){throw _4009;}
//"lambda body for #(struct:LamPositionalName rloop whalesong/lang/private/list.rkt 86 2 2502 320)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4605)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4008=function(M){if(--M.cbt<0){throw _4008;}
//"lambda body for #(struct:LamPositionalName do-remove* whalesong/lang/private/list.rkt 81 0 2350 473)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_4598)(M);}else{M.v=RT.VOID;
return(_4599)(M);}};

var _4007=function(M){if(--M.cbt<0){throw _4007;}
//"lambda body for #(struct:LamPositionalName remv whalesong/lang/private/list.rkt 78 0 2288 60)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym2341;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eqv?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4005=function(M){if(--M.cbt<0){throw _4005;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:69:4 whalesong/lang/private/list.rkt 69 4 2003 220)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4590)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4591)(M);}};

var _4003=function(M){if(--M.cbt<0){throw _4003;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4584)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_4004)(M);}};


var _4001=function(M){if(--M.cbt<0){throw _4001;}
//"lambda body for #(struct:LamPositionalName do-remove whalesong/lang/private/list.rkt 58 0 1649 263)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_4570)(M);}else{M.v=RT.VOID;
return(_4571)(M);}};

var _4000=function(M){if(--M.cbt<0){throw _4000;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 114 2 3366 239)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_4560)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3999=function(M){if(--M.cbt<0){throw _3999;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 126 2 3751 301)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_4549)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4042=function(M){if(--M.cbt<0){throw _4042;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:394:12 whalesong/lang/private/list.rkt 394 12 14590 81)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4779)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4023=function(M){if(--M.cbt<0){throw _4023;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:186:13 whalesong/lang/private/list.rkt 186 13 5830 38)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][49];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4004=function(M){if(--M.cbt<0){throw _4004;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:68:4 whalesong/lang/private/list.rkt 68 4 1948 50)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym2330;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["equal?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _3998=function(M){if(--M.cbt<0){throw _3998;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 180 13 5663 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4500)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4503,M.p));
return((M.p).label)(M);}};

var _4490=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym2332;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4123=function(M){if(--M.cbt<0){throw _4123;}
if(M.a===0){return(_4120)(M);}else{M.e.push(M.v);
return(_4120)(M);}};

var _4116=function(M){if(--M.cbt<0){throw _4116;}
if(M.a===0){return(_4113)(M);}else{M.e.push(M.v);
return(_4113)(M);}};

var _4099=function(M){if(--M.cbt<0){throw _4099;}
if(M.a===0){return(_4096)(M);}else{M.e.push(M.v);
return(_4096)(M);}};


var _3997=function(M){if(--M.cbt<0){throw _3997;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 183 13 5746 27)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4451)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4454,M.p));
return((M.p).label)(M);}};

var _4441=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _3996=function(M){if(--M.cbt<0){throw _3996;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 186 20 5837 30)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4402)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4405,M.p));
return((M.p).label)(M);}};

var _4392=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym2333;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4384=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][50];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.e[M.e.length-5]=M.e[M.e.length-7];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-16,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _3995=function(M){if(--M.cbt<0){throw _3995;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 191 14 6106 33)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_4349)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4352,M.p));
return((M.p).label)(M);}};

var _4339=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym2327;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4331=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][51];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};





var _3994=function(M){if(--M.cbt<0){throw _3994;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 196 13 6336 44)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4294)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4297,M.p));
return((M.p).label)(M);}};

var _4286=function(M){if(--M.cbt<0){throw _4286;}
M.e.length-=(M.a-1);
return(_4285)(M);};



var _3991=function(M){if(--M.cbt<0){throw _3991;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 260 5 8698 182)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_4262)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-6][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-9][54];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4265,M.p));
return((M.p).label)(M);}};



var _3988=function(M){if(--M.cbt<0){throw _3988;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 300 4 10314 113)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-5],M.e[M.e.length-3]);
if(M.v===false){return(_4242)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3987=function(M){if(--M.cbt<0){throw _3987;}
//"lambda body for #(struct:LamPositionalName recr whalesong/lang/private/list.rkt 311 2 10711 131)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-4]);
if(M.v===false){return(_4236)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3986=function(M){if(--M.cbt<0){throw _3986;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:372:28 whalesong/lang/private/list.rkt 372 28 13436 29)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4232,M.p));
return((M.p).label)(M);};

var _3984=function(M){if(--M.cbt<0){throw _3984;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 366 10 13169 335)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4218)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _3980=function(M){if(--M.cbt<0){throw _3980;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:384:34 whalesong/lang/private/list.rkt 384 34 14075 24)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-2]);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4197,M.p));
return((M.p).label)(M);};

var _3979=function(M){if(--M.cbt<0){throw _3979;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 378 12 13773 632)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4185)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _3974=function(M){if(--M.cbt<0){throw _3974;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4163)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3975)(M);}};

var _3973=function(M){if(--M.cbt<0){throw _3973;}
//"lambda body for #(struct:LamPositionalName composed whalesong/lang/private/list.rkt 329 16 11487 26)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4160,M.p));
return((M.p).label)(M);};

var _3972=function(M){if(--M.cbt<0){throw _3972;}
//"lambda body for #(struct:LamPositionalName simple-compose whalesong/lang/private/list.rkt 413 8 15468 43)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.v=(1===M.e[M.e.length-2]);
if(M.v===false){return(_4156)(M);}else{M.e[M.e.length-1]=new RT.Closure(_3973,1,[M.e[M.e.length-5],M.e[M.e.length-4]],"composed");
return(_4157)(M);}};

var _3970=function(M){if(--M.cbt<0){throw _3970;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:355:6 whalesong/lang/private/list.rkt 355 6 12697 159)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=_3971_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_3971)(M);};

var _3969=function(M){if(--M.cbt<0){throw _3969;}
//"lambda body for #(struct:LamPositionalName pipeline1 whalesong/lang/private/list.rkt 349 4 12469 388)"

M.v=new RT.Closure(_3970,1,[M.e[M.e.length-2],M.e[M.e.length-1]],"...private/list.rkt:355:6");
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4128=function(M){if(--M.cbt<0){throw _4128;}
M.e.length-=(M.a-1);
return(_4127)(M);};

var _3968=function(M){if(--M.cbt<0){throw _3968;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 405 13 15019 390)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4126)(M);}else{M.v=RT.VOID;
return(_4127)(M);}};

var _4102=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4103)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3966)(M);}};



var _3967=function(M){if(--M.cbt<0){throw _3967;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:333:18 whalesong/lang/private/list.rkt 333 18 11664 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4122,M.p));
return((M.p).label)(M);};

var _3963=function(M){if(--M.cbt<0){throw _3963;}
//"lambda body for #(struct:LamPositionalName composed whalesong/lang/private/list.rkt 329 16 11487 26)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4098,M.p));
return((M.p).label)(M);};

var _3961=function(M){if(--M.cbt<0){throw _3961;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:332:18 whalesong/lang/private/list.rkt 332 18 11622 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4088,M.p));
return((M.p).label)(M);};

var _3957=function(M){if(--M.cbt<0){throw _3957;}
//"lambda body for #(struct:LamPositionalName simple-compose whalesong/lang/private/list.rkt 415 8 15566 144)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_4066)(M);}else{M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.v=(1===M.e[M.e.length-2]);
if(M.v===false){return(_4069)(M);}else{M.e[M.e.length-1]=new RT.Closure(_3958,1,[M.e[M.e.length-5],M.e[M.e.length-4]],"composed");
return(_4070)(M);}}};

var _4056=function(M){if(--M.cbt<0){throw _4056;}
M.e.length-=(M.a-1);
return(_4055)(M);};

var _3956=function(M){if(--M.cbt<0){throw _3956;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 405 13 15019 390)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4054)(M);}else{M.v=RT.VOID;
return(_4055)(M);}};

var _4047=function(M){if(--M.cbt<0){throw _4047;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:394:12 whalesong/lang/private/list.rkt 394 12 14590 81)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4795)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4034=function(M){if(--M.cbt<0){throw _4034;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:252:4 whalesong/lang/private/list.rkt 252 4 8466 168)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym2335;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=RT.NULL;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4726,M.p));
return((M.p).label)(M);};

var _4030=function(M){if(--M.cbt<0){throw _4030;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:239:4 whalesong/lang/private/list.rkt 239 4 8019 146)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym2339;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=RT.NULL;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4708,M.p));
return((M.p).label)(M);};

var _4012=function(M){if(--M.cbt<0){throw _4012;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:98:4 whalesong/lang/private/list.rkt 98 4 2860 40)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym2324;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["equal?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4233=function(M){if(--M.cbt<0){throw _4233;}
if(M.a===0){return(_4230)(M);}else{M.e.push(M.v);
return(_4230)(M);}};

var _4208=function(M){if(--M.cbt<0){throw _4208;}
if(M.a===0){return(_4205)(M);}else{M.e.push(M.v);
return(_4205)(M);}};

var _4187=function(M){M.e.pop();
M.v=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3975=function(M){if(--M.cbt<0){throw _3975;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:331:18 whalesong/lang/private/list.rkt 331 18 11582 21)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4167,M.p));
return((M.p).label)(M);};

var _4109=function(M){if(--M.cbt<0){throw _4109;}
if(M.a===0){return(_4106)(M);}else{M.e.push(M.v);
return(_4106)(M);}};

var _3965=function(M){if(--M.cbt<0){throw _3965;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:331:18 whalesong/lang/private/list.rkt 331 18 11582 21)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4108,M.p));
return((M.p).label)(M);};

var _3960=function(M){if(--M.cbt<0){throw _3960;}
//"lambda body for #(struct:LamPositionalName ...private/list.rkt:331:18 whalesong/lang/private/list.rkt 331 18 11582 21)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4084,M.p));
return((M.p).label)(M);};

_4057.mvr=_4056;
_4098.mvr=_4099;
_4108.mvr=_4109;
_4115.mvr=_4116;
_4122.mvr=_4123;
_4129.mvr=_4128;
_4135.mvr=_4134;
_4207.mvr=_4208;
_4214.mvr=_4215;
_4232.mvr=_4233;
_4287.mvr=_4286;
_4685.mvr=_4684;
_4689.mvr=_4688;
_4698.mvr=_4697;
_4708.mvr=_4707;
_4720.mvr=_4719;
_4726.mvr=_4725;
_4738.mvr=_4737;
_4809.mvr=_4808;
_4811.mvr=_4810;
_4813.mvr=_4812;
_4815.mvr=_4814;
_4817.mvr=_4816;
_4819.mvr=_4818;
_4821.mvr=_4820;
_4823.mvr=_4822;
_4825.mvr=_4824;
_4827.mvr=_4826;
_4829.mvr=_4828;
_4831.mvr=_4830;
_4833.mvr=_4832;
_4835.mvr=_4834;
_4837.mvr=_4836;
_4839.mvr=_4838;
_4841.mvr=_4840;
_4843.mvr=_4842;
_4845.mvr=_4844;
_4847.mvr=_4846;
_4849.mvr=_4848;
_4851.mvr=_4850;
_4853.mvr=_4852;
_4855.mvr=_4854;
_4857.mvr=_4856;
_4859.mvr=_4858;
_4861.mvr=_4860;
_4863.mvr=_4862;
_4865.mvr=_4864;
_4867.mvr=_4866;
_4869.mvr=_4868;
_4871.mvr=_4870;
_4873.mvr=_4872;
_4875.mvr=_4874;
_4883.mvr=_4882;
_4877.mvr=_4876;
_4886.mvr=_4885;
_4888.mvr=_4887;
_4890.mvr=_4889;
_4892.mvr=_4891;
_4894.mvr=_4893;
_4896.mvr=_4895;
_4898.mvr=_4897;
_4900.mvr=_4899;
_4906.mvr=_4905;
_4902.mvr=_4901;
_4053.mvr=_4052;
var sym2330=RT.makeSymbol("remove");
var sym2329=RT.makeSymbol("compose1");
var sym2328=RT.makeSymbol("findf");
var sym2326=RT.makeSymbol("build-vector");
var sym2325=RT.makeSymbol("compose");
var sym2338=RT.makeSymbol("remq");
var sym2335=RT.makeSymbol("foldr");
var sym2334=RT.makeSymbol("build-string");
var sym2339=RT.makeSymbol("foldl");
var sym2336=RT.makeSymbol("remq*");
var sym2332=RT.makeSymbol("assv");
var sym2331=RT.makeSymbol("assq");
var sym2337=RT.makeSymbol("build-list");
var sym2333=RT.makeSymbol("assoc");
var sym2341=RT.makeSymbol("remv");
var sym2340=RT.makeSymbol("remv*");
var sym2322=RT.makeSymbol("memf");
var sym2323=RT.makeSymbol("filter");
var sym2324=RT.makeSymbol("remove*");
var sym2327=RT.makeSymbol("assf");var _4027_c=new RT.Closure(_4027,3,void(0),"loop");
var _3971_c=new RT.Closure(_3971,3,void(0),"loop");
var _3969_c=new RT.Closure(_3969,2,void(0),"pipeline1");
var _4035_c=new RT.Closure(_4035,3,void(0),"loop");
var _4049_c=new RT.Closure(_4049,0,void(0),"...private/list.rkt:403:12");
var _4031_c=new RT.Closure(_4031,3,void(0),"loop");
var _4010_c=new RT.Closure(_4010,5,void(0),"loop");
var _4009_c=new RT.Closure(_4009,3,void(0),"rloop");
var _4044_c=new RT.Closure(_4044,0,void(0),"...private/list.rkt:403:12");
var _4026_c=new RT.Closure(_4026,3,void(0),"mapadd");
var _4002_c=new RT.Closure(_4002,3,void(0),"loop");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_4908, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/list.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/list.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/lang/unsafe/ops.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/lang/unsafe/ops.rkt",
        function(M) {
            
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/lang/unsafe/ops.rkt"];
             modrec.prefix=[void(0),void(0)];modrec.prefix.names=["unsafe-car1.1","unsafe-cdr2.3"];modrec.prefix.internalNames=["unsafe-car","unsafe-cdr"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){
EXPORTS['unsafe-car'] =
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-car',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].first;
        });


EXPORTS['unsafe-cdr'] = 
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-cdr',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].rest;
        });
})(M, exports);
             modrec.prefix[0]=exports["unsafe-car"];
modrec.prefix[1]=exports["unsafe-cdr"];

             modrec.privateExports = exports;
             modrec.finalizeModuleInvokation();
             return M.c.pop().label(M);
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/hash.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _4941=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4918=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["hash-ref"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.v=RT.checkedCar(M, M.e[M.e.length-8]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4921,M.p));
return((M.p).label)(M);};

var _4949=function(M){if(M.v===false){return(_4946)(M);}else{M.v=RT.VOID;
return(_4947)(M);}};

var _4926=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2377;
M.e[M.e.length-2]="hash";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4927)(M);};

var _4946=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2378;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4947)(M);};

var _4927=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4930)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4931)(M);}};

var _4947=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["hash-keys"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4935=function(M){M.e.push(void(0),void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-7]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["hash-ref"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=RT.checkedCar(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4938,M.p));
return((M.p).label)(M);};

var _4960=function(M){return(_4915)(M);};

var _4957=function(M){if(--M.cbt<0){throw _4957;}
M.c.push(new RT.PromptFrame(_4959,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4914,2,[M.e[M.e.length-1]],"hash-for-each");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4940=function(M){if(--M.cbt<0){throw _4940;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-8]);
M.p=_4913_c;
M.a=3;
M.c.push(new RT.CallFrame(_4943,M.p));
return(_4913)(M);};

var _4958=function(M){if(--M.cbt<0){throw _4958;}
M.e.length-=(M.a-1);
return(_4959)(M);};

var _4955=function(M){if(--M.cbt<0){throw _4955;}
M.c.push(new RT.PromptFrame(_4957,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4912,2,[M.e[M.e.length-1]],"hash-map");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4938=function(M){if(--M.cbt<0){throw _4938;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4940,M.p));
return((M.p).label)(M);};

var _4956=function(M){if(--M.cbt<0){throw _4956;}
M.e.length-=(M.a-1);
return(_4957)(M);};

var _4953=function(M){M.modules["whalesong/lang/private/hash.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("hash-map")||M.primitives["hash-map"],M.primitives["raise-type-error"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["hash-keys"],M.params.currentNamespace.get("hash-for-each")||M.primitives["hash-for-each"],M.primitives["void"],false]);M.e[M.e.length-1].names=["hash-map","raise-type-error","procedure?","procedure-arity-includes?","hash-keys","hash-for-each","void",false];
M.modules["whalesong/lang/private/hash.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_4955,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4911,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4921=function(M){if(--M.cbt<0){throw _4921;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4923,M.p));
return((M.p).label)(M);};


var _4943=function(M){if(--M.cbt<0){throw _4943;}
M.e[M.e.length-2]=M.v;
return(_4941)(M);};

var _4923=function(M){if(--M.cbt<0){throw _4923;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.checkedCdr(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _4930=function(M){M.v=false;
return(_4931)(M);};

var _4912=function(M){if(--M.cbt<0){throw _4912;}
//"lambda body for #(struct:LamPositionalName hash-map whalesong/lang/private/hash.rkt 5 0 64 388)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["hash?"]._i(M);
M.e.pop();
if(M.v===false){return(_4926)(M);}else{M.v=RT.VOID;
return(_4927)(M);}};

var _4911=function(M){if(--M.cbt<0){throw _4911;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/hash.rkt 22 2 694 173)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_4918)(M);}else{M.a=0;
M.v=M.primitives["void"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4931=function(M){if(M.v===false){return(_4928)(M);}else{M.v=RT.VOID;
return(_4929)(M);}};

var _4922=function(M){if(--M.cbt<0){throw _4922;}
M.e.length-=(M.a-1);
return(_4923)(M);};


var _4928=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2377;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4929)(M);};

var _4914=function(M){if(--M.cbt<0){throw _4914;}
//"lambda body for #(struct:LamPositionalName hash-for-each whalesong/lang/private/hash.rkt 17 0 455 413)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["hash?"]._i(M);
M.e.pop();
if(M.v===false){return(_4944)(M);}else{M.v=RT.VOID;
return(_4945)(M);}};

var _4913=function(M){if(--M.cbt<0){throw _4913;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/hash.rkt 10 2 288 163)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_4935)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4929=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["hash-keys"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_4913_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_4913)(M);};

var _4954=function(M){if(--M.cbt<0){throw _4954;}
M.e.length-=(M.a-1);
return(_4955)(M);};

var _4916=function(M){if(--M.cbt<0){throw _4916;}
M.e.length-=(M.a-1);
return(_4917)(M);};

var _4944=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2378;
M.e[M.e.length-2]="hash";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_4945)(M);};

var _4959=function(M){if(--M.cbt<0){throw _4959;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/hash.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _4917=function(M){if(--M.cbt<0){throw _4917;}
};

var _4945=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_4948)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_4949)(M);}};

var _4952=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4915=function(M){M.c.push(new RT.PromptFrame(_4917,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/hash.rkt"]=new RT.ModuleRecord("hash",_4953);
return(_4952)(M);};

var _4948=function(M){M.v=false;
return(_4949)(M);};

_4923.mvr=_4922;
_4955.mvr=_4954;
_4957.mvr=_4956;
_4959.mvr=_4958;
_4917.mvr=_4916;
var sym2377=RT.makeSymbol("hash-map");
var sym2378=RT.makeSymbol("hash-for-each");var _4913_c=new RT.Closure(_4913,3,void(0),"loop");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_4960, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/hash.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/hash.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Applications/Racket v5.2.1/collects/racket/private/modbeg.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _4961=function(M){if(--M.cbt<0){throw _4961;}
//"lambda body for #(struct:LamPositionalName print-values collects/racket/private/modbeg.rkt 10 4 214 72)"

M.unspliceRestFromStack(0,M.a);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["for-each"];
M.a=0;
M.v=M.primitives["current-print"]._i(M);
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4966,M.p));
return((M.p).label)(M);};

var _4969=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4962=function(M){M.c.push(new RT.PromptFrame(_4964,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["collects/racket/private/modbeg.rkt"]=new RT.ModuleRecord("modbeg",_4970);
return(_4969)(M);};

var _4964=function(M){if(--M.cbt<0){throw _4964;}
};

var _4966=function(M){if(--M.cbt<0){throw _4966;}
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4965=function(M){if(--M.cbt<0){throw _4965;}
M.e.length-=(M.a-1);
return(_4966)(M);};

var _4973=function(M){return(_4962)(M);};

var _4970=function(M){M.modules["collects/racket/private/modbeg.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("print-values")||M.primitives["print-values"]]);M.e[M.e.length-1].names=["print-values"];
M.modules["collects/racket/private/modbeg.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_4972,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=_4961_c;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4963=function(M){if(--M.cbt<0){throw _4963;}
M.e.length-=(M.a-1);
return(_4964)(M);};

var _4972=function(M){if(--M.cbt<0){throw _4972;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["collects/racket/private/modbeg.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _4971=function(M){if(--M.cbt<0){throw _4971;}
M.e.length-=(M.a-1);
return(_4972)(M);};

_4966.mvr=_4965;
_4972.mvr=_4971;
_4964.mvr=_4963;
var _4961_c=new RT.Closure(_4961,(RT.makeArityAtLeast(0)),void(0),"print-values");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_4973, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Applications/Racket v5.2.1/collects/racket/private/modbeg.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Applications/Racket v5.2.1/collects/racket/private/modbeg.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/list.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;

var _5621=function(M){if(--M.cbt<0){throw _5621;}
M.c.push(new RT.PromptFrame(_5623,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5038,2,[M.e[M.e.length-1]],"partition");
M.e[M.e.length-1][45]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5605=function(M){if(--M.cbt<0){throw _5605;}
M.c.push(new RT.PromptFrame(_5607,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5016,2,[M.e[M.e.length-1]],"take-right");
M.e[M.e.length-1][28]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5026=function(M){if(--M.cbt<0){throw _5026;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:166:15 whalesong/lang/list.rkt 166 15 4983 38)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["apply"];
M.e[M.e.length-2]=M.primitives["append"];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5024=function(M){if(--M.cbt<0){throw _5024;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:164:15 whalesong/lang/list.rkt 164 15 4873 36)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _5336=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][22];
M.e[M.e.length-1]=sym2401;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5339,M.p));
return((M.p).label)(M);};

var _5328=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5525=function(M){if(--M.cbt<0){throw _5525;}
M.c.push(new RT.PromptFrame(_5527,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4975,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][69]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5302=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][22];
M.e[M.e.length-1]=sym2402;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5305,M.p));
return((M.p).label)(M);};

var _5413=function(M){if(--M.cbt<0){throw _5413;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5393=function(M){if(--M.cbt<0){throw _5393;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_5387)(M);};

var _5279=function(M){M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=3;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5322=function(M){if(--M.cbt<0){throw _5322;}
M.e[M.e.length-3]=M.v;
return(_5318)(M);};

var _5269=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][61];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.NULL;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5113=function(M){if(--M.cbt<0){throw _5113;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5252=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2403;
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5242=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2404;
M.e[M.e.length-2]="pair";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5234=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2405;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5226=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2406;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5218=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2407;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5206=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2408;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5584=function(M){if(--M.cbt<0){throw _5584;}
M.e.length-=(M.a-1);
return(_5585)(M);};

var _5198=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][52];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5186=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5180=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5550=function(M){if(--M.cbt<0){throw _5550;}
M.e.length-=(M.a-1);
return(_5551)(M);};

var _5162=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5156=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][59];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5150=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][60];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5522=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4980=function(M){if(--M.cbt<0){throw _4980;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 153 2 4424 306)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5120)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][64];
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-7]);
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5106=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-5][66];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5113,M.p));
return((M.p).label)(M);};

var _5499=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2409;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5500)(M);};

var _5497=function(M){M.v=false;
return(_5498)(M);};

var _5079=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-7][68];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-11]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5068=function(M){M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _5031=function(M){if(--M.cbt<0){throw _5031;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:253:12 whalesong/lang/list.rkt 253 12 8755 36)"

M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_5410)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _5030=function(M){if(--M.cbt<0){throw _5030;}
//"lambda body for #(struct:LamPositionalName filter-map whalesong/lang/list.rkt 246 0 8442 922)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5380)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5383,M.p));
return((M.p).label)(M);}};

var _5364=function(M){M.p=_5028_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_5028)(M);};

var _5362=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5027=function(M){if(--M.cbt<0){throw _5027;}
//"lambda body for #(struct:LamPositionalName flatten whalesong/lang/list.rkt 168 0 5025 199)"

M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=RT.NULL;
M.p=_5028_c;
M.a=2;
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return(_5028)(M);};

var _5023=function(M){if(--M.cbt<0){throw _5023;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:163:15 whalesong/lang/list.rkt 163 15 4827 30)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5021=function(M){if(--M.cbt<0){throw _5021;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_5342)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_5022)(M);}};

var _5549=function(M){if(--M.cbt<0){throw _5549;}
M.c.push(new RT.PromptFrame(_5551,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4987,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][57]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5319=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][22];
M.e[M.e.length-1]=sym2410;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5322,M.p));
return((M.p).label)(M);};

var _5018=function(M){if(--M.cbt<0){throw _5018;}
//"lambda body for #(struct:LamPositionalName drop-right whalesong/lang/list.rkt 140 0 3890 386)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_5314)(M);}else{M.v=RT.VOID;
return(_5315)(M);}};

var _5468=function(M){if(--M.cbt<0){throw _5468;}
if(M.v===false){return(_5465)(M);}else{M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-6]);
return(_5466)(M);}};

var _5440=function(M){if(--M.cbt<0){throw _5440;}
return(_5438)(M);};

var _5015=function(M){if(--M.cbt<0){throw _5015;}
//"lambda body for #(struct:LamPositionalName drop whalesong/lang/list.rkt 122 0 3176 253)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_5288)(M);}else{M.v=RT.VOID;
return(_5289)(M);}};

var _5014=function(M){if(--M.cbt<0){throw _5014;}
//"lambda body for #(struct:LamPositionalName split-at whalesong/lang/list.rkt 114 0 2812 362)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_5284)(M);}else{M.v=RT.VOID;
return(_5285)(M);}};

var _5278=function(M){M.e[M.e.length-3]=" (not a proper list)";
return(_5279)(M);};

var _5011=function(M){if(--M.cbt<0){throw _5011;}
//"lambda body for #(struct:LamPositionalName drop* whalesong/lang/list.rkt 97 0 2175 146)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-3]);
if(M.v===false){return(_5272)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5268=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2411;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_5269)(M);};

var _5008=function(M){if(--M.cbt<0){throw _5008;}
//"lambda body for #(struct:LamPositionalName cons? whalesong/lang/list.rkt 86 14 1860 22)"

M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5255=function(M){if(M.v===false){return(_5252)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_5006_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_5006)(M);}};

var _5004=function(M){if(--M.cbt<0){throw _5004;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 67 4 1404 86)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5247)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_5004_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_5004)(M);}};

var _5002=function(M){if(--M.cbt<0){throw _5002;}
//"lambda body for #(struct:LamPositionalName tenth whalesong/lang/list.rkt 63 0 1333 27)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5238)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][60];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=10;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5606=function(M){if(--M.cbt<0){throw _5606;}
M.e.length-=(M.a-1);
return(_5607)(M);};

var _5598=function(M){if(--M.cbt<0){throw _5598;}
M.e.length-=(M.a-1);
return(_5599)(M);};

var _5210=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2412;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5582=function(M){if(--M.cbt<0){throw _5582;}
M.e.length-=(M.a-1);
return(_5583)(M);};

var _5196=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2408;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=2;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5192=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5178=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2407;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=5;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4988=function(M){if(--M.cbt<0){throw _4988;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5172)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5174)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5168=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5154=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2405;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=9;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5148=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2413;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=10;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5138=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][22];
M.e[M.e.length-1]=sym2414;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5130=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][22];
M.e[M.e.length-1]=sym2415;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _5116=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-6][65];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=RT.checkedCdr(M, M.e[M.e.length-8]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5119,M.p));
return((M.p).label)(M);};

var _5500=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][69];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.NULL;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5496=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5499)(M);}else{M.v=RT.VOID;
return(_5500)(M);}};

var _5091=function(M){M.v=M.e[M.e.length-9];
return(_5092)(M);};

var _4976=function(M){if(--M.cbt<0){throw _4976;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 311 2 11151 196)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5073)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5067=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-8]);
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5068)(M);};


var _5394=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_5033_c;
M.a=2;
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return(_5033)(M);};

var _5386=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2416;
M.e[M.e.length-2]="proper list";
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["ormap"];
M.e[M.e.length-1]=_5031_c;
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5393,M.p));
return((M.p).label)(M);};

var _5388=function(M){M.v=false;
return(_5389)(M);};

var _5378=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2416;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5385,M.p));
return((M.p).label)(M);};

var _5374=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][65];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.v=RT.checkedCdr(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5377,M.p));
return((M.p).label)(M);};

var _5589=function(M){if(--M.cbt<0){throw _5589;}
M.c.push(new RT.PromptFrame(_5591,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=_5009_c;
M.e[M.e.length-1][16]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5360=function(M){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_5362)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e[M.e.length-2]=M.e[M.e.length-6];
M.p=_5028_c;
M.a=2;
M.c.push(new RT.CallFrame(_5366,M.p));
return(_5028)(M);}};

var _5579=function(M){if(--M.cbt<0){throw _5579;}
M.c.push(new RT.PromptFrame(_5581,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5002,1,[M.e[M.e.length-1]],"tenth");
M.e[M.e.length-1][11]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5345=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 5]).racketArity,M.a)){return(_5022)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 5];
return(_5026)(M);}};

var _5343=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_5344)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_5024)(M);}};


var _5020=function(M){if(--M.cbt<0){throw _5020;}
//"lambda body for #(struct:LamPositionalName split-at-right whalesong/lang/list.rkt 150 0 4278 453)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_5331)(M);}else{M.v=RT.VOID;
return(_5332)(M);}};

var _5533=function(M){if(--M.cbt<0){throw _5533;}
M.c.push(new RT.PromptFrame(_5535,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4979,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][65]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5315=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][21];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5317,M.p));
return((M.p).label)(M);};

var _5512=function(M){if(--M.cbt<0){throw _5512;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-1]);
M.v=M.primitives["real?"]._i(M);
M.e.pop();
if(M.v===false){return(_5514)(M);}else{M.v=RT.VOID;
return(_5515)(M);}};


var _5016=function(M){if(--M.cbt<0){throw _5016;}
//"lambda body for #(struct:LamPositionalName take-right whalesong/lang/list.rkt 130 0 3512 376)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_5297)(M);}else{M.v=RT.VOID;
return(_5298)(M);}};

var _5289=function(M){M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][21];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5291,M.p));
return((M.p).label)(M);};

var _5281=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][62];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5377=function(M){if(--M.cbt<0){throw _5377;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5274=function(M){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5291=function(M){if(--M.cbt<0){throw _5291;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5293)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5264=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2417;
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5102=function(M){if(--M.cbt<0){throw _5102;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5104,M.p));
return((M.p).label)(M);};

var _5090=function(M){if(--M.cbt<0){throw _5090;}
M.e[M.e.length-3]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-10]);
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5094,M.p));
return((M.p).label)(M);};

var _5053=function(M){if(--M.cbt<0){throw _5053;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-1]);
M.v=M.primitives["real?"]._i(M);
M.e.pop();
if(M.v===false){return(_5055)(M);}else{M.v=RT.VOID;
return(_5056)(M);}};

var _5003=function(M){if(--M.cbt<0){throw _5003;}
//"lambda body for #(struct:LamPositionalName last-pair whalesong/lang/list.rkt 65 0 1362 173)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5242)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_5004_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_5004)(M);}};

var _5001=function(M){if(--M.cbt<0){throw _5001;}
//"lambda body for #(struct:LamPositionalName ninth whalesong/lang/list.rkt 62 0 1306 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5234)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][59];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=9;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5000=function(M){if(--M.cbt<0){throw _5000;}
//"lambda body for #(struct:LamPositionalName eighth whalesong/lang/list.rkt 61 0 1279 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5230)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=8;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4998=function(M){if(--M.cbt<0){throw _4998;}
//"lambda body for #(struct:LamPositionalName sixth whalesong/lang/list.rkt 59 0 1225 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5222)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=6;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5590=function(M){if(--M.cbt<0){throw _5590;}
M.e.length-=(M.a-1);
return(_5591)(M);};

var _4994=function(M){if(--M.cbt<0){throw _4994;}
//"lambda body for #(struct:LamPositionalName second whalesong/lang/list.rkt 55 0 1117 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5206)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][52];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=2;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5574=function(M){if(--M.cbt<0){throw _5574;}
M.e.length-=(M.a-1);
return(_5575)(M);};

var _5190=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2412;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=3;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5184=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2418;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=4;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4989=function(M){if(--M.cbt<0){throw _4989;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5178)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5180)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5166=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2406;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=7;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5160=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2419;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=8;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5528=function(M){if(--M.cbt<0){throw _5528;}
M.e.length-=(M.a-1);
return(_5529)(M);};

var _5144=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][61];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedSub1(M, M.e[M.e.length-6]);
M.v=RT.makePair(M.e[M.e.length-5],M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5126=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_5130)(M);}else{M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-5]=M.e[M.e.length-6][63];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-9]);
M.e[M.e.length-4]=RT.checkedSub1(M, M.e[M.e.length-10]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-11]);
M.e[M.e.length-2]=M.e[M.e.length-13];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4981=function(M){if(--M.cbt<0){throw _4981;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 117 2 2958 215)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-5]);
if(M.v===false){return(_5126)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5503=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5504)(M);};

var _5044=function(M){if(--M.cbt<0){throw _5044;}
//"lambda body for #(struct:LamPositionalName mk-min whalesong/lang/list.rkt 341 0 12292 894)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5505)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_5506)(M);}};

var _5495=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2409;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5496)(M);};


var _5087=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][67];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5090,M.p));
return((M.p).label)(M);};

var _5039=function(M){if(--M.cbt<0){throw _5039;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_5480)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_5040)(M);}};

var _5474=function(M){M.v=false;
return(_5475)(M);};

var _5057=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.v=RT.checkedCdr(M, M.e[M.e.length-14]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _5451=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5453,M.p));
return((M.p).label)(M);};

var _5301=function(M){M.e.pop();
M.p=_5017_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_5017)(M);};

var _5633=function(M){if(--M.cbt<0){throw _5633;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/list.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5389=function(M){if(M.v===false){return(_5386)(M);}else{M.v=RT.VOID;
return(_5387)(M);}};

var _5619=function(M){if(--M.cbt<0){throw _5619;}
M.c.push(new RT.PromptFrame(_5621,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5034,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"count");
M.e[M.e.length-1][44]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5381=function(M){if(M.v===false){return(_5378)(M);}else{M.v=RT.VOID;
return(_5379)(M);}};

var _5603=function(M){if(--M.cbt<0){throw _5603;}
M.c.push(new RT.PromptFrame(_5605,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5015,2,[M.e[M.e.length-1]],"drop");
M.e[M.e.length-1][27]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5029=function(M){if(--M.cbt<0){throw _5029;}
//"lambda body for #(struct:LamPositionalName add-between whalesong/lang/list.rkt 176 0 5304 349)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5370)(M);}else{M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_5372)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5581=function(M){if(--M.cbt<0){throw _5581;}
M.c.push(new RT.PromptFrame(_5583,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5003,1,[M.e[M.e.length-1]],"last-pair");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5577=function(M){if(--M.cbt<0){throw _5577;}
M.c.push(new RT.PromptFrame(_5579,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5001,1,[M.e[M.e.length-1]],"ninth");
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5571=function(M){if(--M.cbt<0){throw _5571;}
M.c.push(new RT.PromptFrame(_5573,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4998,1,[M.e[M.e.length-1]],"sixth");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5563=function(M){if(--M.cbt<0){throw _5563;}
M.c.push(new RT.PromptFrame(_5565,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4994,1,[M.e[M.e.length-1]],"second");
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5332=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][64];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][21];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5334,M.p));
return((M.p).label)(M);};

var _5547=function(M){if(--M.cbt<0){throw _5547;}
M.c.push(new RT.PromptFrame(_5549,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4986,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][58]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5019=function(M){while(true){if(--M.cbt<0){throw _5019;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 143 2 4028 247)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5326)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.p=_5019_c;
M.a=2;
M.c.push(new RT.CallFrame(_5330,M.p));
}}};

var _5314=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2410;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_5315)(M);};

var _5017=function(M){if(--M.cbt<0){throw _5017;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 133 2 3657 230)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5309)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_5017_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_5017)(M);}};

var _5298=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][21];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5300,M.p));
return((M.p).label)(M);};

var _5297=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2402;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5298)(M);};

var _5288=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2420;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5289)(M);};

var _5285=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][63];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=RT.NULL;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5013=function(M){if(--M.cbt<0){throw _5013;}
//"lambda body for #(struct:LamPositionalName take whalesong/lang/list.rkt 106 0 2498 312)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_5280)(M);}else{M.v=RT.VOID;
return(_5281)(M);}};

var _5272=function(M){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5274)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][21];
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.v=RT.checkedSub1(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5009=function(M){if(--M.cbt<0){throw _5009;}
//"lambda body for #(struct:LamPositionalName empty? whalesong/lang/list.rkt 87 15 1899 22)"

M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5267=function(M){if(M.v===false){return(_5264)(M);}else{M.v=RT.checkedCdr(M, M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5007=function(M){if(--M.cbt<0){throw _5007;}
//"lambda body for #(struct:LamPositionalName rest whalesong/lang/list.rkt 81 0 1734 110)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5266)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_5267)(M);}};

var _5006=function(M){if(--M.cbt<0){throw _5006;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 75 4 1590 92)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5259)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_5006_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_5006)(M);}};

var _5005=function(M){if(--M.cbt<0){throw _5005;}
//"lambda body for #(struct:LamPositionalName last whalesong/lang/list.rkt 73 0 1537 195)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5254)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_5255)(M);}};

var _5628=function(M){if(--M.cbt<0){throw _5628;}
M.e.length-=(M.a-1);
return(_5629)(M);};

var _5620=function(M){if(--M.cbt<0){throw _5620;}
M.e.length-=(M.a-1);
return(_5621)(M);};

var _4999=function(M){if(--M.cbt<0){throw _4999;}
//"lambda body for #(struct:LamPositionalName seventh whalesong/lang/list.rkt 60 0 1252 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5226)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=7;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4997=function(M){if(--M.cbt<0){throw _4997;}
//"lambda body for #(struct:LamPositionalName fifth whalesong/lang/list.rkt 58 0 1198 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5218)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=5;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4996=function(M){if(--M.cbt<0){throw _4996;}
//"lambda body for #(struct:LamPositionalName fourth whalesong/lang/list.rkt 57 0 1171 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5214)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=4;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5202=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2421;
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4993=function(M){if(--M.cbt<0){throw _4993;}
//"lambda body for #(struct:LamPositionalName first whalesong/lang/list.rkt 39 0 613 112)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_5204)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_5205)(M);}};

var _5568=function(M){if(--M.cbt<0){throw _5568;}
M.e.length-=(M.a-1);
return(_5569)(M);};

var _5560=function(M){if(--M.cbt<0){throw _5560;}
M.e.length-=(M.a-1);
return(_5561)(M);};

var _5174=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5544=function(M){if(--M.cbt<0){throw _5544;}
M.e.length-=(M.a-1);
return(_5545)(M);};

var _5536=function(M){if(--M.cbt<0){throw _5536;}
M.e.length-=(M.a-1);
return(_5537)(M);};

var _5530=function(M){if(--M.cbt<0){throw _5530;}
M.e.length-=(M.a-1);
return(_5531)(M);};

var _5523=function(M){M.modules["whalesong/lang/list.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("first")||M.primitives["first"],M.primitives["raise-type-error"],M.params.currentNamespace.get("second")||M.primitives["second"],M.primitives["format"],M.params.currentNamespace.get("third")||M.primitives["third"],M.params.currentNamespace.get("fourth")||M.primitives["fourth"],M.params.currentNamespace.get("fifth")||M.primitives["fifth"],M.params.currentNamespace.get("sixth")||M.primitives["sixth"],M.params.currentNamespace.get("seventh")||M.primitives["seventh"],M.params.currentNamespace.get("eighth")||M.primitives["eighth"],M.params.currentNamespace.get("ninth")||M.primitives["ninth"],M.params.currentNamespace.get("tenth")||M.primitives["tenth"],M.params.currentNamespace.get("last-pair")||M.primitives["last-pair"],M.params.currentNamespace.get("last")||M.primitives["last"],M.params.currentNamespace.get("rest")||M.primitives["rest"],M.params.currentNamespace.get("cons?")||M.primitives["cons?"],M.params.currentNamespace.get("empty?")||M.primitives["empty?"],M.params.currentNamespace.get("empty")||M.primitives["empty"],M.params.currentNamespace.get("make-list")||M.primitives["make-list"],M.primitives["exact-nonnegative-integer?"],M.primitives["zero?"],M.params.currentNamespace.get("drop*")||M.primitives["drop*"],M.params.currentNamespace.get("too-large")||M.primitives["too-large"],M.primitives["raise-mismatch-error"],M.params.currentNamespace.get("take")||M.primitives["take"],M.params.currentNamespace.get("split-at")||M.primitives["split-at"],M.primitives["reverse"],M.params.currentNamespace.get("drop")||M.primitives["drop"],M.params.currentNamespace.get("take-right")||M.primitives["take-right"],M.params.currentNamespace.get("drop-right")||M.primitives["drop-right"],M.params.currentNamespace.get("split-at-right")||M.primitives["split-at-right"],M.params.currentNamespace.get("append*")||M.primitives["append*"],M.primitives["append"],M.params.currentNamespace.get("flatten")||M.primitives["flatten"],M.params.currentNamespace.get("add-between")||M.primitives["add-between"],M.primitives["list*"],M.params.currentNamespace.get("filter-map")||M.primitives["filter-map"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["length"],M.primitives["andmap"],M.primitives["ormap"],M.primitives["map"],M.primitives["error"],M.params.currentNamespace.get("count")||M.primitives["count"],M.params.currentNamespace.get("partition")||M.primitives["partition"],M.params.currentNamespace.get("append-map")||M.primitives["append-map"],M.params.currentNamespace.get("filter-not")||M.primitives["filter-not"],M.params.currentNamespace.get("mk-min")||M.primitives["mk-min"],M.primitives["real?"],M.params.currentNamespace.get("argmin")||M.primitives["argmin"],M.params.currentNamespace.get("argmax")||M.primitives["argmax"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["first","raise-type-error","second","format","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","last-pair","last","rest","cons?","empty?","empty","make-list","exact-nonnegative-integer?","zero?","drop*","too-large","raise-mismatch-error","take","split-at","reverse","drop","take-right","drop-right","split-at-right","append*","append","flatten","add-between","list*","filter-map","procedure?","procedure-arity-includes?","length","andmap","ormap","map","error","count","partition","append-map","filter-not","mk-min","real?","argmin","argmax",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_5525,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4974,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][70]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5136=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_5138)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-7][62];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-10]);
M.v=RT.checkedSub1(M, M.e[M.e.length-11]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5141,M.p));
return((M.p).label)(M);}};

var _5514=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5515)(M);};



var _5498=function(M){if(M.v===false){return(_5495)(M);}else{M.v=RT.VOID;
return(_5496)(M);}};


var _5041=function(M){if(--M.cbt<0){throw _5041;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:319:15 whalesong/lang/list.rkt 319 15 11432 40)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5488,M.p));
return((M.p).label)(M);};


var _5065=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][69];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.e.push(M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5070,M.p));
return((M.p).label)(M);};

var _4975=function(M){if(--M.cbt<0){throw _4975;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 332 2 11989 144)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5065)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["reverse"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5463=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e.push(M.e[M.e.length-4]);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5468,M.p));
return((M.p).label)(M);};

var _5448=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym2422;
M.e[M.e.length-2]="all lists must have same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5450=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_5451)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_5451)(M);}};

var _5035=function(M){if(--M.cbt<0){throw _5035;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:279:12 whalesong/lang/list.rkt 279 12 9744 36)"

M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_5459)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5438=function(M){if(M.v===false){return(_5435)(M);}else{M.v=RT.VOID;
return(_5436)(M);}};

var _5427=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2422;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5434,M.p));
return((M.p).label)(M);};


var _5419=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=_5033_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_5033)(M);};

var _5402=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5404,M.p));
return((M.p).label)(M);};

var _5631=function(M){if(--M.cbt<0){throw _5631;}
M.c.push(new RT.PromptFrame(_5633,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5046,2,[M.e[M.e.length-1]],"argmax");
M.e[M.e.length-1][51]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5627=function(M){if(--M.cbt<0){throw _5627;}
M.c.push(new RT.PromptFrame(_5629,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5044,4,[M.e[M.e.length-1]],"mk-min");
M.e[M.e.length-1][48]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5617=function(M){if(--M.cbt<0){throw _5617;}
M.c.push(new RT.PromptFrame(_5619,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5030,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"filter-map");
M.e[M.e.length-1][36]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5611=function(M){if(--M.cbt<0){throw _5611;}
M.c.push(new RT.PromptFrame(_5613,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_5022,1,[M.e[M.e.length-6]],"...ng/lang/list.rkt:162:15");
M.e[M.e.length-2]=new RT.Closure(_5023,2,[M.e[M.e.length-6]],"...ng/lang/list.rkt:163:15");
M.e[M.e.length-3]=new RT.Closure(_5024,3,[M.e[M.e.length-6]],"...ng/lang/list.rkt:164:15");
M.e[M.e.length-4]=new RT.Closure(_5025,4,[M.e[M.e.length-6]],"...ng/lang/list.rkt:165:15");
M.e[M.e.length-5]=new RT.Closure(_5026,(RT.makeArityAtLeast(1)),[M.e[M.e.length-6]],"...ng/lang/list.rkt:166:15");
M.v=new RT.Closure(_5021,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))))),[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append*");
M.e.length-=5;
M.e[M.e.length-1][31]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5601=function(M){if(--M.cbt<0){throw _5601;}
M.c.push(new RT.PromptFrame(_5603,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5014,2,[M.e[M.e.length-1]],"split-at");
M.e[M.e.length-1][25]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5595=function(M){if(--M.cbt<0){throw _5595;}
M.c.push(new RT.PromptFrame(_5597,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5011,2,[M.e[M.e.length-1]],"drop*");
M.e[M.e.length-1][21]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5587=function(M){if(--M.cbt<0){throw _5587;}
M.c.push(new RT.PromptFrame(_5589,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=_5008_c;
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5575=function(M){if(--M.cbt<0){throw _5575;}
M.c.push(new RT.PromptFrame(_5577,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5000,1,[M.e[M.e.length-1]],"eighth");
M.e[M.e.length-1][9]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5569=function(M){if(--M.cbt<0){throw _5569;}
M.c.push(new RT.PromptFrame(_5571,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4997,1,[M.e[M.e.length-1]],"fifth");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5561=function(M){if(--M.cbt<0){throw _5561;}
M.c.push(new RT.PromptFrame(_5563,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4993,1,[M.e[M.e.length-1]],"first");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5555=function(M){if(--M.cbt<0){throw _5555;}
M.c.push(new RT.PromptFrame(_5557,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4990,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5545=function(M){if(--M.cbt<0){throw _5545;}
M.c.push(new RT.PromptFrame(_5547,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4985,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][59]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5537=function(M){if(--M.cbt<0){throw _5537;}
M.c.push(new RT.PromptFrame(_5539,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4981,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][63]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5531=function(M){if(--M.cbt<0){throw _5531;}
M.c.push(new RT.PromptFrame(_5533,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4978,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][66]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5049=function(M){if(--M.cbt<0){throw _5049;}
};

var _5462=function(M){if(--M.cbt<0){throw _5462;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5446=function(M){if(--M.cbt<0){throw _5446;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["andmap"];
M.v=new RT.Closure(_5036,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...ng/lang/list.rkt:282:18");
M.a=1;
if(M.a===0){return(_5450)(M);}else{M.e.push(M.v);
return(_5450)(M);}};

var _5423=function(M){if(--M.cbt<0){throw _5423;}
M.e[M.e.length-2]=M.v;
return(_5421)(M);};

var _5404=function(M){if(--M.cbt<0){throw _5404;}
if(M.v===false){return(_5399)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][66];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5366=function(M){if(--M.cbt<0){throw _5366;}
M.e[M.e.length-2]=M.v;
return(_5364)(M);};

var _5334=function(M){if(--M.cbt<0){throw _5334;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5336)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-1];
return(_5335)(M);}};

var _5317=function(M){if(--M.cbt<0){throw _5317;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5319)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-1];
return(_5318)(M);}};

var _5111=function(M){if(--M.cbt<0){throw _5111;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5109=function(M){if(--M.cbt<0){throw _5109;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5111,M.p));
return((M.p).label)(M);};

var _5094=function(M){if(--M.cbt<0){throw _5094;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5096,M.p));
return((M.p).label)(M);};

var _5632=function(M){if(--M.cbt<0){throw _5632;}
M.e.length-=(M.a-1);
return(_5633)(M);};

var _5626=function(M){if(--M.cbt<0){throw _5626;}
M.e.length-=(M.a-1);
return(_5627)(M);};

var _5618=function(M){if(--M.cbt<0){throw _5618;}
M.e.length-=(M.a-1);
return(_5619)(M);};

var _5612=function(M){if(--M.cbt<0){throw _5612;}
M.e.length-=(M.a-1);
return(_5613)(M);};

var _5604=function(M){if(--M.cbt<0){throw _5604;}
M.e.length-=(M.a-1);
return(_5605)(M);};

var _5596=function(M){if(--M.cbt<0){throw _5596;}
M.e.length-=(M.a-1);
return(_5597)(M);};

var _5205=function(M){if(M.v===false){return(_5202)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5580=function(M){if(--M.cbt<0){throw _5580;}
M.e.length-=(M.a-1);
return(_5581)(M);};

var _5566=function(M){if(--M.cbt<0){throw _5566;}
M.e.length-=(M.a-1);
return(_5567)(M);};

var _5558=function(M){if(--M.cbt<0){throw _5558;}
M.e.length-=(M.a-1);
return(_5559)(M);};

var _5556=function(M){if(--M.cbt<0){throw _5556;}
M.e.length-=(M.a-1);
return(_5557)(M);};

var _5542=function(M){if(--M.cbt<0){throw _5542;}
M.e.length-=(M.a-1);
return(_5543)(M);};

var _5538=function(M){if(--M.cbt<0){throw _5538;}
M.e.length-=(M.a-1);
return(_5539)(M);};

var _4985=function(M){if(--M.cbt<0){throw _4985;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5154)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5156)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5524=function(M){if(--M.cbt<0){throw _5524;}
M.e.length-=(M.a-1);
return(_5525)(M);};

var _5045=function(M){if(--M.cbt<0){throw _5045;}
//"lambda body for #(struct:LamPositionalName argmin whalesong/lang/list.rkt 366 0 13188 46)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.primitives["<"];
M.e[M.e.length-2]=sym2423;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5508=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5512,M.p));
return((M.p).label)(M);};

var _5510=function(M){if(M.v===false){return(_5507)(M);}else{M.v=RT.VOID;
return(_5508)(M);}};


var _5092=function(M){M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _5477=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][68];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=RT.NULL;
M.e[M.e.length-4]=RT.NULL;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5473=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5476)(M);}else{M.v=RT.VOID;
return(_5477)(M);}};

var _5038=function(M){if(--M.cbt<0){throw _5038;}
//"lambda body for #(struct:LamPositionalName partition whalesong/lang/list.rkt 307 0 10913 435)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5474)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_5475)(M);}};

var _5056=function(M){M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5060,M.p));
return((M.p).label)(M);};

var _5047=function(M){M.c.push(new RT.PromptFrame(_5049,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/list.rkt"]=new RT.ModuleRecord("list",_5523);
return(_5522)(M);};

var _5335=function(M){M.e.pop();
M.v=RT.NULL;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _5034=function(M){if(--M.cbt<0){throw _5034;}
//"lambda body for #(struct:LamPositionalName count whalesong/lang/list.rkt 272 0 9446 787)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5429)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5432,M.p));
return((M.p).label)(M);}};


var _5401=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_5402)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_5402)(M);}};

var _5629=function(M){if(--M.cbt<0){throw _5629;}
M.c.push(new RT.PromptFrame(_5631,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5045,2,[M.e[M.e.length-1]],"argmin");
M.e[M.e.length-1][50]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5625=function(M){if(--M.cbt<0){throw _5625;}
M.c.push(new RT.PromptFrame(_5627,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5043,2,[M.e[M.e.length-1]],"filter-not");
M.e[M.e.length-1][47]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5615=function(M){if(--M.cbt<0){throw _5615;}
M.c.push(new RT.PromptFrame(_5617,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5029,2,[M.e[M.e.length-1]],"add-between");
M.e[M.e.length-1][34]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5609=function(M){if(--M.cbt<0){throw _5609;}
M.c.push(new RT.PromptFrame(_5611,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5020,2,[M.e[M.e.length-1]],"split-at-right");
M.e[M.e.length-1][30]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5599=function(M){if(--M.cbt<0){throw _5599;}
M.c.push(new RT.PromptFrame(_5601,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5013,2,[M.e[M.e.length-1]],"take");
M.e[M.e.length-1][24]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5593=function(M){if(--M.cbt<0){throw _5593;}
M.c.push(new RT.PromptFrame(_5595,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5010,2,[M.e[M.e.length-1]],"make-list");
M.e[M.e.length-1][18]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5585=function(M){if(--M.cbt<0){throw _5585;}
M.c.push(new RT.PromptFrame(_5587,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5007,1,[M.e[M.e.length-1]],"rest");
M.e[M.e.length-1][14]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5573=function(M){if(--M.cbt<0){throw _5573;}
M.c.push(new RT.PromptFrame(_5575,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4999,1,[M.e[M.e.length-1]],"seventh");
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5567=function(M){if(--M.cbt<0){throw _5567;}
M.c.push(new RT.PromptFrame(_5569,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4996,1,[M.e[M.e.length-1]],"fourth");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5559=function(M){if(--M.cbt<0){throw _5559;}
M.c.push(new RT.PromptFrame(_5561,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4992,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5553=function(M){if(--M.cbt<0){throw _5553;}
M.c.push(new RT.PromptFrame(_5555,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4989,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5543=function(M){if(--M.cbt<0){throw _5543;}
M.c.push(new RT.PromptFrame(_5545,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4984,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][60]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5535=function(M){if(--M.cbt<0){throw _5535;}
M.c.push(new RT.PromptFrame(_5537,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4980,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][64]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5527=function(M){if(--M.cbt<0){throw _5527;}
M.c.push(new RT.PromptFrame(_5529,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4976,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][68]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5492=function(M){if(--M.cbt<0){throw _5492;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5484=function(M){if(--M.cbt<0){throw _5484;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5434=function(M){if(--M.cbt<0){throw _5434;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_5428)(M);};

var _5417=function(M){if(--M.cbt<0){throw _5417;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5419)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.p=_5033_c;
M.a=2;
M.c.push(new RT.CallFrame(_5423,M.p));
return(_5033)(M);}};

var _5391=function(M){if(--M.cbt<0){throw _5391;}
return(_5389)(M);};

var _5385=function(M){if(--M.cbt<0){throw _5385;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_5379)(M);};

var _5330=function(M){if(--M.cbt<0){throw _5330;}
M.e[M.e.length-2]=M.v;
return(_5328)(M);};

var _5305=function(M){if(--M.cbt<0){throw _5305;}
M.e[M.e.length-3]=M.v;
return(_5301)(M);};

var _5141=function(M){if(--M.cbt<0){throw _5141;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5096=function(M){if(--M.cbt<0){throw _5096;}
if(M.v===false){return(_5091)(M);}else{M.v=RT.checkedAdd1(M, M.e[M.e.length-9]);
return(_5092)(M);}};

var _5070=function(M){if(--M.cbt<0){throw _5070;}
if(M.v===false){return(_5067)(M);}else{M.v=M.e[M.e.length-7];
return(_5068)(M);}};

var _5630=function(M){if(--M.cbt<0){throw _5630;}
M.e.length-=(M.a-1);
return(_5631)(M);};

var _5624=function(M){if(--M.cbt<0){throw _5624;}
M.e.length-=(M.a-1);
return(_5625)(M);};

var _5616=function(M){if(--M.cbt<0){throw _5616;}
M.e.length-=(M.a-1);
return(_5617)(M);};

var _5610=function(M){if(--M.cbt<0){throw _5610;}
M.e.length-=(M.a-1);
return(_5611)(M);};

var _5602=function(M){if(--M.cbt<0){throw _5602;}
M.e.length-=(M.a-1);
return(_5603)(M);};

var _5594=function(M){if(--M.cbt<0){throw _5594;}
M.e.length-=(M.a-1);
return(_5595)(M);};

var _5588=function(M){if(--M.cbt<0){throw _5588;}
M.e.length-=(M.a-1);
return(_5589)(M);};

var _5578=function(M){if(--M.cbt<0){throw _5578;}
M.e.length-=(M.a-1);
return(_5579)(M);};

var _5572=function(M){if(--M.cbt<0){throw _5572;}
M.e.length-=(M.a-1);
return(_5573)(M);};

var _5564=function(M){if(--M.cbt<0){throw _5564;}
M.e.length-=(M.a-1);
return(_5565)(M);};

var _5554=function(M){if(--M.cbt<0){throw _5554;}
M.e.length-=(M.a-1);
return(_5555)(M);};

var _5548=function(M){if(--M.cbt<0){throw _5548;}
M.e.length-=(M.a-1);
return(_5549)(M);};

var _5540=function(M){if(--M.cbt<0){throw _5540;}
M.e.length-=(M.a-1);
return(_5541)(M);};

var _5526=function(M){if(--M.cbt<0){throw _5526;}
M.e.length-=(M.a-1);
return(_5527)(M);};

var _4983=function(M){if(--M.cbt<0){throw _4983;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 93 2 2076 74)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-3]);
if(M.v===false){return(_5144)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5046=function(M){if(--M.cbt<0){throw _5046;}
//"lambda body for #(struct:LamPositionalName argmax whalesong/lang/list.rkt 367 0 13235 46)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.primitives[">"];
M.e[M.e.length-2]=sym2424;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5507=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5508)(M);};

var _5509=function(M){M.v=false;
return(_5510)(M);};

var _5506=function(M){if(M.v===false){return(_5503)(M);}else{M.v=RT.VOID;
return(_5504)(M);}};

var _5099=function(M){M.e.push(void(0));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-7]);
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5102,M.p));
return((M.p).label)(M);};


var _5481=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_5040)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_5042)(M);}};

var _5476=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2425;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5477)(M);};

var _5472=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2425;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5473)(M);};

var _5466=function(M){M.p=_5037_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_5037)(M);};

var _5055=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5056)(M);};

var _4974=function(M){if(--M.cbt<0){throw _4974;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 351 4 12715 469)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){return(_5050)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _5443=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=0;
M.p=_5037_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_5037)(M);};

var _5436=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_5443)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5446,M.p));
return((M.p).label)(M);}};

var _5437=function(M){M.v=false;
return(_5438)(M);};

var _5430=function(M){if(M.v===false){return(_5427)(M);}else{M.v=RT.VOID;
return(_5428)(M);}};

var _5421=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5410=function(M){M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5399=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym2416;
M.e[M.e.length-2]="all lists must have same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5634=function(M){return(_5047)(M);};

var _5623=function(M){if(--M.cbt<0){throw _5623;}
M.c.push(new RT.PromptFrame(_5625,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_5040,2,[M.e[M.e.length-4]],"...ng/lang/list.rkt:318:15");
M.e[M.e.length-2]=new RT.Closure(_5041,3,[M.e[M.e.length-4]],"...ng/lang/list.rkt:319:15");
M.e[M.e.length-3]=new RT.Closure(_5042,(RT.makeArityAtLeast(2)),[M.e[M.e.length-4]],"...ng/lang/list.rkt:320:15");
M.v=new RT.Closure(_5039,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(2)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append-map");
M.e.length-=3;
M.e[M.e.length-1][46]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5613=function(M){if(--M.cbt<0){throw _5613;}
M.c.push(new RT.PromptFrame(_5615,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=_5027_c;
M.e[M.e.length-1][33]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5607=function(M){if(--M.cbt<0){throw _5607;}
M.c.push(new RT.PromptFrame(_5609,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5018,2,[M.e[M.e.length-1]],"drop-right");
M.e[M.e.length-1][29]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5597=function(M){if(--M.cbt<0){throw _5597;}
M.c.push(new RT.PromptFrame(_5599,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5012,3,[M.e[M.e.length-1]],"too-large");
M.e[M.e.length-1][22]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5591=function(M){if(--M.cbt<0){throw _5591;}
M.c.push(new RT.PromptFrame(_5593,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=RT.NULL;
M.e[M.e.length-1][17]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5583=function(M){if(--M.cbt<0){throw _5583;}
M.c.push(new RT.PromptFrame(_5585,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5005,1,[M.e[M.e.length-1]],"last");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5028=function(M){if(--M.cbt<0){throw _5028;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 169 2 5055 168)"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_5360)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5565=function(M){if(--M.cbt<0){throw _5565;}
M.c.push(new RT.PromptFrame(_5567,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4995,1,[M.e[M.e.length-1]],"third");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5557=function(M){if(--M.cbt<0){throw _5557;}
M.c.push(new RT.PromptFrame(_5559,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4991,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5551=function(M){if(--M.cbt<0){throw _5551;}
M.c.push(new RT.PromptFrame(_5553,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4988,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5541=function(M){if(--M.cbt<0){throw _5541;}
M.c.push(new RT.PromptFrame(_5543,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4983,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][61]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5539=function(M){if(--M.cbt<0){throw _5539;}
M.c.push(new RT.PromptFrame(_5541,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4982,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][62]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5529=function(M){if(--M.cbt<0){throw _5529;}
M.c.push(new RT.PromptFrame(_5531,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_4977,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][67]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5488=function(M){if(--M.cbt<0){throw _5488;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5453=function(M){if(--M.cbt<0){throw _5453;}
if(M.v===false){return(_5448)(M);}else{M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][67];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=0;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5442=function(M){if(--M.cbt<0){throw _5442;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_5436)(M);};

var _5432=function(M){if(--M.cbt<0){throw _5432;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_5430)(M);};

var _5397=function(M){if(--M.cbt<0){throw _5397;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["andmap"];
M.v=new RT.Closure(_5032,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...ng/lang/list.rkt:256:18");
M.a=1;
if(M.a===0){return(_5401)(M);}else{M.e.push(M.v);
return(_5401)(M);}};

var _5383=function(M){if(--M.cbt<0){throw _5383;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_5381)(M);};

var _5339=function(M){if(--M.cbt<0){throw _5339;}
M.e[M.e.length-3]=M.v;
return(_5335)(M);};

var _5300=function(M){if(--M.cbt<0){throw _5300;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5302)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-1];
return(_5301)(M);}};

var _5119=function(M){if(--M.cbt<0){throw _5119;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["list*"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5104=function(M){if(--M.cbt<0){throw _5104;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5106)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-7][66];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-9]);
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5109,M.p));
return((M.p).label)(M);}};

var _5082=function(M){if(--M.cbt<0){throw _5082;}
if(M.v===false){return(_5079)(M);}else{M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-7][68];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5060=function(M){if(--M.cbt<0){throw _5060;}
if(M.v===false){return(_5057)(M);}else{M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=RT.checkedCar(M, M.e[M.e.length-14]);
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=RT.checkedCdr(M, M.e[M.e.length-14]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5622=function(M){if(--M.cbt<0){throw _5622;}
M.e.length-=(M.a-1);
return(_5623)(M);};

var _5614=function(M){if(--M.cbt<0){throw _5614;}
M.e.length-=(M.a-1);
return(_5615)(M);};

var _5608=function(M){if(--M.cbt<0){throw _5608;}
M.e.length-=(M.a-1);
return(_5609)(M);};

var _5600=function(M){if(--M.cbt<0){throw _5600;}
M.e.length-=(M.a-1);
return(_5601)(M);};

var _5592=function(M){if(--M.cbt<0){throw _5592;}
M.e.length-=(M.a-1);
return(_5593)(M);};

var _5586=function(M){if(--M.cbt<0){throw _5586;}
M.e.length-=(M.a-1);
return(_5587)(M);};

var _5576=function(M){if(--M.cbt<0){throw _5576;}
M.e.length-=(M.a-1);
return(_5577)(M);};

var _5570=function(M){if(--M.cbt<0){throw _5570;}
M.e.length-=(M.a-1);
return(_5571)(M);};

var _5562=function(M){if(--M.cbt<0){throw _5562;}
M.e.length-=(M.a-1);
return(_5563)(M);};

var _5552=function(M){if(--M.cbt<0){throw _5552;}
M.e.length-=(M.a-1);
return(_5553)(M);};

var _5546=function(M){if(--M.cbt<0){throw _5546;}
M.e.length-=(M.a-1);
return(_5547)(M);};

var _5534=function(M){if(--M.cbt<0){throw _5534;}
M.e.length-=(M.a-1);
return(_5535)(M);};

var _5532=function(M){if(--M.cbt<0){throw _5532;}
M.e.length-=(M.a-1);
return(_5533)(M);};

var _5048=function(M){if(--M.cbt<0){throw _5048;}
M.e.length-=(M.a-1);
return(_5049)(M);};

var _5515=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=RT.checkedCar(M, M.e[M.e.length-12]);
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=RT.checkedCdr(M, M.e[M.e.length-12]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5120=function(M){M.v=M.e[M.e.length-3];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5504=function(M){M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){return(_5509)(M);}else{M.v=RT.isPair(M.e[M.e.length-5]);
return(_5510)(M);}};

var _5505=function(M){M.v=false;
return(_5506)(M);};

var _4978=function(M){if(--M.cbt<0){throw _4978;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 257 8 8914 241)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5099)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5043=function(M){if(--M.cbt<0){throw _5043;}
//"lambda body for #(struct:LamPositionalName filter-not whalesong/lang/list.rkt 324 0 11634 500)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5497)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_5498)(M);}};

var _5042=function(M){if(--M.cbt<0){throw _5042;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:320:15 whalesong/lang/list.rkt 320 15 11488 46)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["map"];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5492,M.p));
return((M.p).label)(M);};

var _5480=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_5481)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_5041)(M);}};

var _5475=function(M){if(M.v===false){return(_5472)(M);}else{M.v=RT.VOID;
return(_5473)(M);}};

var _5465=function(M){M.e[M.e.length-3]=M.e[M.e.length-6];
return(_5466)(M);};

var _5459=function(M){M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5037=function(M){if(--M.cbt<0){throw _5037;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 289 4 10141 90)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_5463)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5036=function(M){if(--M.cbt<0){throw _5036;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:282:18 whalesong/lang/list.rkt 282 18 9859 31)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5462,M.p));
return((M.p).label)(M);};


var _5435=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2422;
M.e[M.e.length-2]="proper list";
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["ormap"];
M.e[M.e.length-1]=_5035_c;
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5442,M.p));
return((M.p).label)(M);};

var _5428=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5437)(M);}else{M.e.push(void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.primitives["list?"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5440,M.p));
return((M.p).label)(M);}};

var _5429=function(M){M.v=false;
return(_5430)(M);};


var _5414=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-4]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5417,M.p));
return((M.p).label)(M);};

var _5033=function(M){if(--M.cbt<0){throw _5033;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 265 4 9222 140)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_5414)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _5032=function(M){if(--M.cbt<0){throw _5032;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:256:18 whalesong/lang/list.rkt 256 18 8870 31)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5413,M.p));
return((M.p).label)(M);};

var _5387=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_5394)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5397,M.p));
return((M.p).label)(M);}};

var _5379=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5388)(M);}else{M.e.push(void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.primitives["list?"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5391,M.p));
return((M.p).label)(M);}};

var _5380=function(M){M.v=false;
return(_5381)(M);};

var _5372=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_5374)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5370=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2426;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5025=function(M){if(--M.cbt<0){throw _5025;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:165:15 whalesong/lang/list.rkt 165 15 4925 42)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5344=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_5345)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_5025)(M);}};

var _5342=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_5343)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_5023)(M);}};

var _5331=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2401;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_5332)(M);};

var _5326=function(M){M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _5309=function(M){M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5293=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][22];
M.e[M.e.length-1]=sym2420;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _5284=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2415;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5285)(M);};

var _5280=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2414;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5281)(M);};

var _5012=function(M){if(--M.cbt<0){throw _5012;}
//"lambda body for #(struct:LamPositionalName too-large whalesong/lang/list.rkt 99 0 2322 174)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=RT.isList(M.e[M.e.length-9]);
if(M.v===false){return(_5278)(M);}else{M.e[M.e.length-3]="";
return(_5279)(M);}};

var _5010=function(M){if(--M.cbt<0){throw _5010;}
//"lambda body for #(struct:LamPositionalName make-list whalesong/lang/list.rkt 90 0 1943 208)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_5268)(M);}else{M.v=RT.VOID;
return(_5269)(M);}};

var _5266=function(M){M.v=false;
return(_5267)(M);};

var _5259=function(M){M.v=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5254=function(M){M.v=false;
return(_5255)(M);};

var _5247=function(M){M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5238=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2413;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5230=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2419;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5222=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2427;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5214=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2418;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4995=function(M){if(--M.cbt<0){throw _4995;}
//"lambda body for #(struct:LamPositionalName third whalesong/lang/list.rkt 56 0 1144 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_5210)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=3;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5204=function(M){M.v=false;
return(_5205)(M);};

var _4992=function(M){if(--M.cbt<0){throw _4992;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5196)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5198)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _4991=function(M){if(--M.cbt<0){throw _4991;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5190)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5192)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _4990=function(M){if(--M.cbt<0){throw _4990;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5184)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5186)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5172=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2427;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=6;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4987=function(M){if(--M.cbt<0){throw _4987;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5166)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5168)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _4986=function(M){if(--M.cbt<0){throw _4986;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5160)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5162)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _4984=function(M){if(--M.cbt<0){throw _4984;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_5148)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_5150)(M);}else{M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};


var _4982=function(M){if(--M.cbt<0){throw _4982;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 109 2 2636 173)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-5]);
if(M.v===false){return(_5136)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _4979=function(M){if(--M.cbt<0){throw _4979;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 181 20 5502 147)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5116)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _4977=function(M){if(--M.cbt<0){throw _4977;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 283 8 9903 176)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5087)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5073=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5082,M.p));
return((M.p).label)(M);};



var _5050=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5053,M.p));
return((M.p).label)(M);};

var _5040=function(M){if(--M.cbt<0){throw _5040;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:318:15 whalesong/lang/list.rkt 318 15 11384 32)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5484,M.p));
return((M.p).label)(M);};

var _5022=function(M){if(--M.cbt<0){throw _5022;}
//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:162:15 whalesong/lang/list.rkt 162 15 4764 24)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5318=function(M){M.e.pop();
M.p=_5019_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_5019)(M);};

_5525.mvr=_5524;
_5527.mvr=_5526;
_5529.mvr=_5528;
_5531.mvr=_5530;
_5533.mvr=_5532;
_5535.mvr=_5534;
_5537.mvr=_5536;
_5539.mvr=_5538;
_5541.mvr=_5540;
_5543.mvr=_5542;
_5545.mvr=_5544;
_5547.mvr=_5546;
_5549.mvr=_5548;
_5551.mvr=_5550;
_5553.mvr=_5552;
_5555.mvr=_5554;
_5557.mvr=_5556;
_5559.mvr=_5558;
_5561.mvr=_5560;
_5563.mvr=_5562;
_5565.mvr=_5564;
_5567.mvr=_5566;
_5569.mvr=_5568;
_5571.mvr=_5570;
_5573.mvr=_5572;
_5575.mvr=_5574;
_5577.mvr=_5576;
_5579.mvr=_5578;
_5581.mvr=_5580;
_5583.mvr=_5582;
_5585.mvr=_5584;
_5587.mvr=_5586;
_5589.mvr=_5588;
_5591.mvr=_5590;
_5593.mvr=_5592;
_5595.mvr=_5594;
_5597.mvr=_5596;
_5599.mvr=_5598;
_5601.mvr=_5600;
_5603.mvr=_5602;
_5605.mvr=_5604;
_5607.mvr=_5606;
_5609.mvr=_5608;
_5611.mvr=_5610;
_5613.mvr=_5612;
_5615.mvr=_5614;
_5617.mvr=_5616;
_5619.mvr=_5618;
_5621.mvr=_5620;
_5623.mvr=_5622;
_5625.mvr=_5624;
_5627.mvr=_5626;
_5629.mvr=_5628;
_5631.mvr=_5630;
_5633.mvr=_5632;
_5049.mvr=_5048;
var sym2427=RT.makeSymbol("sixth");
var sym2407=RT.makeSymbol("fifth");
var sym2419=RT.makeSymbol("eighth");
var sym2413=RT.makeSymbol("tenth");
var sym2411=RT.makeSymbol("make-list");
var sym2420=RT.makeSymbol("drop");
var sym2404=RT.makeSymbol("last-pair");
var sym2422=RT.makeSymbol("count");
var sym2417=RT.makeSymbol("rest");
var sym2409=RT.makeSymbol("filter-not");
var sym2423=RT.makeSymbol("argmin");
var sym2418=RT.makeSymbol("fourth");
var sym2401=RT.makeSymbol("split-at-right");
var sym2408=RT.makeSymbol("second");
var sym2416=RT.makeSymbol("filter-map");
var sym2410=RT.makeSymbol("drop-right");
var sym2421=RT.makeSymbol("first");
var sym2415=RT.makeSymbol("split-at");
var sym2402=RT.makeSymbol("take-right");
var sym2424=RT.makeSymbol("argmax");
var sym2412=RT.makeSymbol("third");
var sym2403=RT.makeSymbol("last");
var sym2426=RT.makeSymbol("add-between");
var sym2414=RT.makeSymbol("take");
var sym2425=RT.makeSymbol("partition");
var sym2406=RT.makeSymbol("seventh");
var sym2405=RT.makeSymbol("ninth");var _5017_c=new RT.Closure(_5017,2,void(0),"loop");
var _5009_c=new RT.Closure(_5009,1,void(0),"empty?");
var _5008_c=new RT.Closure(_5008,1,void(0),"cons?");
var _5028_c=new RT.Closure(_5028,2,void(0),"loop");
var _5006_c=new RT.Closure(_5006,2,void(0),"loop");
var _5037_c=new RT.Closure(_5037,3,void(0),"loop");
var _5004_c=new RT.Closure(_5004,2,void(0),"loop");
var _5035_c=new RT.Closure(_5035,1,void(0),"...ng/lang/list.rkt:279:12");
var _5019_c=new RT.Closure(_5019,2,void(0),"loop");
var _5027_c=new RT.Closure(_5027,1,void(0),"flatten");
var _5033_c=new RT.Closure(_5033,2,void(0),"loop");
var _5031_c=new RT.Closure(_5031,1,void(0),"...ng/lang/list.rkt:253:12");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_5634, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/list.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/list.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/qq-and-or.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _5647=function(M){return(_5636)(M);};

var _5644=function(M){M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("qq-append")||M.primitives["qq-append"]]);M.e[M.e.length-1].names=["qq-append"];
M.modules["whalesong/lang/private/qq-and-or.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_5646,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=_5635_c;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5635=function(M){if(--M.cbt<0){throw _5635;}
//"lambda body for #(struct:LamPositionalName qq-append whalesong/lang/private/qq-and-or.rkt 149 4 10310 107)"

M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_5639)(M);}else{M.e.push(void(0),void(0));
M.p=M.primitives["append"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5646=function(M){if(--M.cbt<0){throw _5646;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/qq-and-or.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5638=function(M){if(--M.cbt<0){throw _5638;}
};

var _5637=function(M){if(--M.cbt<0){throw _5637;}
M.e.length-=(M.a-1);
return(_5638)(M);};

var _5645=function(M){if(--M.cbt<0){throw _5645;}
M.e.length-=(M.a-1);
return(_5646)(M);};

var _5636=function(M){M.c.push(new RT.PromptFrame(_5638,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/qq-and-or.rkt"]=new RT.ModuleRecord("qq-and-or",_5644);
return(_5643)(M);};

var _5643=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5639=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym2430;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=M.e[M.e.length-4];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_5646.mvr=_5645;
_5638.mvr=_5637;
var sym2430=RT.makeSymbol("unquote-splicing");var _5635_c=new RT.Closure(_5635,2,void(0),"qq-append");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_5647, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/qq-and-or.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/qq-and-or.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/map.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _5846=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-4]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5851,M.p));
return((M.p).label)(M);};

var _5835=function(M){M.v=false;
return(_5836)(M);};

var _5830=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_5831)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_5669)(M);}};


var _5817=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5824,M.p));
return((M.p).label)(M);};


var _5798=function(M){M.v=false;
return(_5799)(M);};

var _5785=function(M){M.e.push(M.e[M.e.length-1]);
M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5792,M.p));
return((M.p).label)(M);};

var _5662=function(M){if(--M.cbt<0){throw _5662;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 72 20 2369 163)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_5785)(M);}else{M.e.push(M.e[M.e.length-1]);
M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5774=function(M){M.v=false;
return(_5775)(M);};

var _5770=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_5661)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_5665)(M);}};

var _5749=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["for-each"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5755=function(M){M.v=false;
return(_5752)(M);};

var _5741=function(M){M.v=false;
return(_5742)(M);};

var _5659=function(M){if(--M.cbt<0){throw _5659;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:60:11 whalesong/lang/private/map.rkt 60 11 2047 36)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["for-each"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _5727=function(M){M.e.push(void(0),void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5730,M.p));
return((M.p).label)(M);};


var _5705=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5652=function(M){if(--M.cbt<0){throw _5652;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 16 16 463 139)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_5701)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5653=function(M){if(--M.cbt<0){throw _5653;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:21:11 whalesong/lang/private/map.rkt 21 11 642 463)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5710)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5712)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5714)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_5716)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5719,M.p));
return((M.p).label)(M);}}}}};

var _5650=function(M){if(--M.cbt<0){throw _5650;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_5687)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_5651)(M);}};

var _5649=function(M){if(--M.cbt<0){throw _5649;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 43 16 1376 142)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5681)(M);}else{M.a=0;
M.v=M.primitives["void"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5667=function(M){if(--M.cbt<0){throw _5667;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:97:11 whalesong/lang/private/map.rkt 97 11 3265 394)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5835)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5837)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_5836)(M);}}};

var _5651=function(M){if(--M.cbt<0){throw _5651;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:12:11 whalesong/lang/private/map.rkt 12 11 319 311)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5692)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5694)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_5693)(M);}}};

var _5902=function(M){if(--M.cbt<0){throw _5902;}
M.c.push(new RT.PromptFrame(_5904,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_5661,2,[M.e[M.e.length-4]],".../private/map.rkt:66:11");
M.e[M.e.length-2]=new RT.Closure(_5663,3,[M.e[M.e.length-4]],".../private/map.rkt:77:11");
M.e[M.e.length-3]=new RT.Closure(_5665,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:91:11");
M.v=new RT.Closure(_5660,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"andmap");
M.e.length-=3;
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5869=function(M){if(--M.cbt<0){throw _5869;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5871,M.p));
return((M.p).label)(M);};

var _5809=function(M){if(--M.cbt<0){throw _5809;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5799)(M);};

var _5733=function(M){if(--M.cbt<0){throw _5733;}
M.e[M.e.length-2]=M.v;
return(_5731)(M);};

var _5707=function(M){if(--M.cbt<0){throw _5707;}
M.e[M.e.length-2]=M.v;
return(_5705)(M);};

var _5684=function(M){if(--M.cbt<0){throw _5684;}
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5899=function(M){if(--M.cbt<0){throw _5899;}
M.e.length-=(M.a-1);
return(_5900)(M);};

var _5893=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5858=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["ormap"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5866=function(M){M.v=false;
return(_5861)(M);};

var _5833=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["ormap"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5671=function(M){if(--M.cbt<0){throw _5671;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:122:11 whalesong/lang/private/map.rkt 122 11 4242 33)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["ormap"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5796=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5804=function(M){M.v=false;
return(_5799)(M);};

var _5775=function(M){if(M.v===false){return(_5772)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5778)(M);}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5660=function(M){if(--M.cbt<0){throw _5660;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_5769)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_5661)(M);}};


var _5753=function(M){M.v=false;
return(_5752)(M);};

var _5739=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["for-each"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5737=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_5657)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_5659)(M);}};

var _5731=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5716=function(M){M.v=false;
return(_5711)(M);};

var _5714=function(M){M.v=false;
return(_5711)(M);};

var _5690=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5692=function(M){M.v=false;
return(_5693)(M);};

var _5681=function(M){M.e.push(M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-4]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5684,M.p));
return((M.p).label)(M);};

var _5675=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5678,M.p));
return((M.p).label)(M);};

var _5904=function(M){if(--M.cbt<0){throw _5904;}
M.c.push(new RT.PromptFrame(_5906,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_5667,2,[M.e[M.e.length-4]],".../private/map.rkt:97:11");
M.e[M.e.length-2]=new RT.Closure(_5669,3,[M.e[M.e.length-4]],".../private/map.rkt:108:11");
M.e[M.e.length-3]=new RT.Closure(_5671,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:122:11");
M.v=new RT.Closure(_5666,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"ormap");
M.e.length-=3;
M.e[M.e.length-1][10]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5898=function(M){if(--M.cbt<0){throw _5898;}
M.c.push(new RT.PromptFrame(_5900,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_5651,2,[M.e[M.e.length-4]],".../private/map.rkt:12:11");
M.e[M.e.length-2]=new RT.Closure(_5653,3,[M.e[M.e.length-4]],".../private/map.rkt:21:11");
M.e[M.e.length-3]=new RT.Closure(_5655,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:33:11");
M.v=new RT.Closure(_5650,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"map");
M.e.length-=3;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5871=function(M){if(--M.cbt<0){throw _5871;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5861)(M);};

var _5851=function(M){if(--M.cbt<0){throw _5851;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5853)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5762=function(M){if(--M.cbt<0){throw _5762;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5752)(M);};

var _5721=function(M){if(--M.cbt<0){throw _5721;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_5711)(M);};

var _5905=function(M){if(--M.cbt<0){throw _5905;}
M.e.length-=(M.a-1);
return(_5906)(M);};

var _5901=function(M){if(--M.cbt<0){throw _5901;}
M.e.length-=(M.a-1);
return(_5902)(M);};

var _5894=function(M){M.modules["whalesong/lang/private/map.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("map2")||M.primitives["map2"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["map"],M.primitives["length"],M.params.currentNamespace.get("for-each2")||M.primitives["for-each2"],M.primitives["void"],M.primitives["for-each"],M.params.currentNamespace.get("andmap2")||M.primitives["andmap2"],M.primitives["andmap"],M.params.currentNamespace.get("ormap2")||M.primitives["ormap2"],M.primitives["ormap"],false,false]);M.e[M.e.length-1].names=["map2","procedure?","procedure-arity-includes?","map","length","for-each2","void","for-each","andmap2","andmap","ormap2","ormap",false,false];
M.modules["whalesong/lang/private/map.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_5896,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5648,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][13]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5879=function(M){M.e.push(void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5884,M.p));
return((M.p).label)(M);};

var _5861=function(M){if(M.v===false){return(_5858)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5872)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5864=function(M){M.v=false;
return(_5861)(M);};

var _5839=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_5668_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_5668)(M);};

var _5836=function(M){if(M.v===false){return(_5833)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5839)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5831=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_5667)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_5671)(M);}};

var _5821=function(M){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5810=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_5664_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_5664)(M);};

var _5799=function(M){if(M.v===false){return(_5796)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5810)(M);}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _5802=function(M){M.v=false;
return(_5799)(M);};

var _5789=function(M){M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5778=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_5662_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_5662)(M);};

var _5776=function(M){M.v=false;
return(_5775)(M);};

var _5769=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_5770)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_5663)(M);}};

var _5752=function(M){if(M.v===false){return(_5749)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][13];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5757=function(M){M.v=false;
return(_5752)(M);};

var _5742=function(M){if(M.v===false){return(_5739)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5736=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_5737)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_5658)(M);}};


var _5708=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5711=function(M){if(M.v===false){return(_5708)(M);}else{M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_5654_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_5654)(M);}};

var _5712=function(M){M.v=false;
return(_5711)(M);};


var _5693=function(M){if(M.v===false){return(_5690)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_5652_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_5652)(M);}};

var _5688=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_5651)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_5655)(M);}};

var _5687=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_5688)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_5653)(M);}};

var _5677=function(M){if(--M.cbt<0){throw _5677;}
M.e.length-=(M.a-1);
return(_5678)(M);};

var _5672=function(M){M.c.push(new RT.PromptFrame(_5674,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/map.rkt"]=new RT.ModuleRecord("map",_5894);
return(_5893)(M);};

var _5906=function(M){if(--M.cbt<0){throw _5906;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/map.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5900=function(M){if(--M.cbt<0){throw _5900;}
M.c.push(new RT.PromptFrame(_5902,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_5657,2,[M.e[M.e.length-4]],".../private/map.rkt:39:11");
M.e[M.e.length-2]=new RT.Closure(_5658,3,[M.e[M.e.length-4]],".../private/map.rkt:48:11");
M.e[M.e.length-3]=new RT.Closure(_5659,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:60:11");
M.v=new RT.Closure(_5656,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"for-each");
M.e.length-=3;
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5884=function(M){if(--M.cbt<0){throw _5884;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_5886)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5807=function(M){if(--M.cbt<0){throw _5807;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5809,M.p));
return((M.p).label)(M);};

var _5792=function(M){if(--M.cbt<0){throw _5792;}
if(M.v===false){return(_5789)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-4]);
M.p=_5662_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_5662)(M);}};

var _5719=function(M){if(--M.cbt<0){throw _5719;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5721,M.p));
return((M.p).label)(M);};

var _5704=function(M){if(--M.cbt<0){throw _5704;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.p=_5652_c;
M.a=2;
M.c.push(new RT.CallFrame(_5707,M.p));
return(_5652)(M);};

var _5903=function(M){if(--M.cbt<0){throw _5903;}
M.e.length-=(M.a-1);
return(_5904)(M);};

var _5895=function(M){if(--M.cbt<0){throw _5895;}
M.e.length-=(M.a-1);
return(_5896)(M);};

var _5886=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.p=_5670_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_5670)(M);};

var _5872=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_5670_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_5670)(M);};


var _5862=function(M){M.v=false;
return(_5861)(M);};

var _5853=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=_5668_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_5668)(M);};

var _5668=function(M){if(--M.cbt<0){throw _5668;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 103 20 3466 162)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_5846)(M);}else{M.e.push(M.e[M.e.length-1]);
M.v=RT.checkedCar(M, M.e[M.e.length-3]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _5837=function(M){M.v=false;
return(_5836)(M);};

var _5669=function(M){if(--M.cbt<0){throw _5669;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:108:11 whalesong/lang/private/map.rkt 108 11 3671 559)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5860)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5862)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5864)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_5866)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5869,M.p));
return((M.p).label)(M);}}}}};

var _5666=function(M){if(--M.cbt<0){throw _5666;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_5830)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_5667)(M);}};

var _5664=function(M){if(--M.cbt<0){throw _5664;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 85 20 2864 238)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_5817)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _5800=function(M){M.v=false;
return(_5799)(M);};


var _5772=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5665=function(M){if(--M.cbt<0){throw _5665;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:91:11 whalesong/lang/private/map.rkt 91 11 3150 34)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["andmap"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5663=function(M){if(--M.cbt<0){throw _5663;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:77:11 whalesong/lang/private/map.rkt 77 11 2576 562)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5798)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5800)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5802)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_5804)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5807,M.p));
return((M.p).label)(M);}}}}};


var _5751=function(M){M.v=false;
return(_5752)(M);};

var _5743=function(M){M.v=false;
return(_5742)(M);};

var _5658=function(M){if(--M.cbt<0){throw _5658;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:48:11 whalesong/lang/private/map.rkt 48 11 1563 472)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5751)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5753)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_5755)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_5757)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5760,M.p));
return((M.p).label)(M);}}}}};

var _5656=function(M){if(--M.cbt<0){throw _5656;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_5736)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_5657)(M);}};

var _5654=function(M){if(--M.cbt<0){throw _5654;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 27 16 872 201)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_5727)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _5710=function(M){M.v=false;
return(_5711)(M);};

var _5701=function(M){M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-3]);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5704,M.p));
return((M.p).label)(M);};

var _5694=function(M){M.v=false;
return(_5693)(M);};

var _5655=function(M){if(--M.cbt<0){throw _5655;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:33:11 whalesong/lang/private/map.rkt 33 11 1117 31)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["map"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5683=function(M){if(--M.cbt<0){throw _5683;}
M.e.length-=(M.a-1);
return(_5684)(M);};

var _5648=function(M){if(--M.cbt<0){throw _5648;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 54 16 1793 205)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_5675)(M);}else{M.a=0;
M.v=M.primitives["void"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5661=function(M){if(--M.cbt<0){throw _5661;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:66:11 whalesong/lang/private/map.rkt 66 11 2168 396)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5774)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5776)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_5775)(M);}}};

var _5657=function(M){if(--M.cbt<0){throw _5657;}
//"lambda body for #(struct:LamPositionalName .../private/map.rkt:39:11 whalesong/lang/private/map.rkt 39 11 1232 319)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_5741)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_5743)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_5742)(M);}}};

var _5907=function(M){return(_5672)(M);};

var _5896=function(M){if(--M.cbt<0){throw _5896;}
M.c.push(new RT.PromptFrame(_5898,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5649,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5674=function(M){if(--M.cbt<0){throw _5674;}
};

var _5824=function(M){if(--M.cbt<0){throw _5824;}
if(M.v===false){return(_5821)(M);}else{M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.p=_5664_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_5664)(M);}};

var _5760=function(M){if(--M.cbt<0){throw _5760;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5762,M.p));
return((M.p).label)(M);};

var _5730=function(M){if(--M.cbt<0){throw _5730;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.e[M.e.length-3]=RT.checkedCdr(M, M.e[M.e.length-8]);
M.p=_5654_c;
M.a=3;
M.c.push(new RT.CallFrame(_5733,M.p));
return(_5654)(M);};

var _5678=function(M){if(--M.cbt<0){throw _5678;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][13];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.v=RT.checkedCdr(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5897=function(M){if(--M.cbt<0){throw _5897;}
M.e.length-=(M.a-1);
return(_5898)(M);};

var _5673=function(M){if(--M.cbt<0){throw _5673;}
M.e.length-=(M.a-1);
return(_5674)(M);};


var _5670=function(M){if(--M.cbt<0){throw _5670;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 116 20 3959 236)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_5879)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _5860=function(M){M.v=false;
return(_5861)(M);};


_5678.mvr=_5677;
_5684.mvr=_5683;
_5896.mvr=_5895;
_5898.mvr=_5897;
_5900.mvr=_5899;
_5902.mvr=_5901;
_5904.mvr=_5903;
_5906.mvr=_5905;
_5674.mvr=_5673;
var _5668_c=new RT.Closure(_5668,2,void(0),"loop");
var _5670_c=new RT.Closure(_5670,3,void(0),"loop");
var _5662_c=new RT.Closure(_5662,2,void(0),"loop");
var _5664_c=new RT.Closure(_5664,3,void(0),"loop");
var _5654_c=new RT.Closure(_5654,3,void(0),"loop");
var _5652_c=new RT.Closure(_5652,2,void(0),"loop");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_5907, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/map.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/map.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/shared.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _5913=function(M){if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_5915)(M);}else{M.c.push(new RT.CallFrame(_5915,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}};

var _5920=function(M){return(_5908)(M);};

var _5914=function(M){if(--M.cbt<0){throw _5914;}
M.e.length-=(M.a-1);
return(_5915)(M);};

var _5909=function(M){if(--M.cbt<0){throw _5909;}
M.e.length-=(M.a-1);
return(_5910)(M);};

var _5910=function(M){if(--M.cbt<0){throw _5910;}
};

var _5915=function(M){if(--M.cbt<0){throw _5915;}
M.e.push([M.params.currentNamespace.get("undefined")||M.primitives["undefined"]]);M.e[M.e.length-1].names=["undefined"];
M.modules["whalesong/lang/private/shared.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_5917,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([void(0)]);
M.v=M.e[M.e.length-1][0];
M.e.pop();
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5912=function(M){M.modules["whalesong/lang/private/shared.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/private/traced-app.rkt"]!==void(0))!==false){return(_5913)(M);}else{return(_5915)(M);}};

var _5917=function(M){if(--M.cbt<0){throw _5917;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/shared.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5916=function(M){if(--M.cbt<0){throw _5916;}
M.e.length-=(M.a-1);
return(_5917)(M);};

var _5911=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5908=function(M){M.c.push(new RT.PromptFrame(_5910,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/shared.rkt"]=new RT.ModuleRecord("shared",_5912);
return(_5911)(M);};

_5915.mvr=_5914;
_5917.mvr=_5916;
_5910.mvr=_5909;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_5920, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/shared.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/shared.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/traced-app.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _5926=function(M){if(--M.cbt<0){throw _5926;}
M.e.length-=(M.a-1);
return(_5927)(M);};

var _5925=function(M){M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("traced-app-key")||M.primitives["traced-app-key"],M.params.currentNamespace.get("traced-callee-key")||M.primitives["traced-callee-key"]]);M.e[M.e.length-1].names=["traced-app-key","traced-callee-key"];
M.modules["whalesong/lang/private/traced-app.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_5927,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(sym2599);
M.a=1;
M.v=M.primitives["gensym"]._i(M);
M.e.pop();
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5927=function(M){if(--M.cbt<0){throw _5927;}
M.c.push(new RT.PromptFrame(_5929,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(sym2600);
M.a=1;
M.v=M.primitives["gensym"]._i(M);
M.e.pop();
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5923=function(M){if(--M.cbt<0){throw _5923;}
};

var _5922=function(M){if(--M.cbt<0){throw _5922;}
M.e.length-=(M.a-1);
return(_5923)(M);};

var _5929=function(M){if(--M.cbt<0){throw _5929;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/private/traced-app.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5928=function(M){if(--M.cbt<0){throw _5928;}
M.e.length-=(M.a-1);
return(_5929)(M);};

var _5921=function(M){M.c.push(new RT.PromptFrame(_5923,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/private/traced-app.rkt"]=new RT.ModuleRecord("traced-app",_5925);
return(_5924)(M);};

var _5924=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5930=function(M){return(_5921)(M);};

_5927.mvr=_5926;
_5929.mvr=_5928;
_5923.mvr=_5922;
var sym2600=RT.makeSymbol("traced-callee-key");
var sym2599=RT.makeSymbol("traced-app-key");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_5930, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/traced-app.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/private/traced-app.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/bool.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _5960=function(M){if(--M.cbt<0){throw _5960;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/bool.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5956=function(M){if(--M.cbt<0){throw _5956;}
M.c.push(new RT.PromptFrame(_5958,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5932,2,[M.e[M.e.length-1]],"boolean=?");
M.e[M.e.length-1][3]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5959=function(M){if(--M.cbt<0){throw _5959;}
M.e.length-=(M.a-1);
return(_5960)(M);};

var _5949=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5947=function(M){M.e[M.e.length-3]=0;
return(_5948)(M);};

var _5946=function(M){if(M.v===false){return(_5943)(M);}else{M.v=RT.VOID;
return(_5944)(M);}};

var _5958=function(M){if(--M.cbt<0){throw _5958;}
M.c.push(new RT.PromptFrame(_5960,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5933,2,[M.e[M.e.length-1]],"symbol=?");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5943=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2605;
M.e[M.e.length-2]="symbol";
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["symbol?"]._i(M);
M.e.pop();
if(M.v===false){return(_5947)(M);}else{M.e[M.e.length-3]=1;
return(_5948)(M);}};

var _5945=function(M){M.v=false;
return(_5946)(M);};

var _5935=function(M){if(--M.cbt<0){throw _5935;}
M.e.length-=(M.a-1);
return(_5936)(M);};

var _5934=function(M){M.c.push(new RT.PromptFrame(_5936,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/bool.rkt"]=new RT.ModuleRecord("bool",_5950);
return(_5949)(M);};

var _5957=function(M){if(--M.cbt<0){throw _5957;}
M.e.length-=(M.a-1);
return(_5958)(M);};

var _5950=function(M){M.modules["whalesong/lang/bool.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("true")||M.primitives["true"],M.params.currentNamespace.get("false")||M.primitives["false"],M.params.currentNamespace.get("false?")||M.primitives["false?"],M.params.currentNamespace.get("boolean=?")||M.primitives["boolean=?"],M.primitives["boolean?"],M.primitives["raise-type-error"],M.params.currentNamespace.get("symbol=?")||M.primitives["symbol=?"],M.primitives["symbol?"]]);M.e[M.e.length-1].names=["true","false","false?","boolean=?","boolean?","raise-type-error","symbol=?","symbol?"];
M.modules["whalesong/lang/bool.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_5952,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=true;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5932=function(M){if(--M.cbt<0){throw _5932;}
//"lambda body for #(struct:LamPositionalName boolean=? whalesong/lang/bool.rkt 12 0 161 149)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["boolean?"]._i(M);
M.e.pop();
if(M.v===false){return(_5939)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["boolean?"]._i(M);
M.e.pop();
return(_5940)(M);}};

var _5953=function(M){if(--M.cbt<0){throw _5953;}
M.e.length-=(M.a-1);
return(_5954)(M);};

var _5951=function(M){if(--M.cbt<0){throw _5951;}
M.e.length-=(M.a-1);
return(_5952)(M);};

var _5954=function(M){if(--M.cbt<0){throw _5954;}
M.c.push(new RT.PromptFrame(_5956,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=_5931_c;
M.e[M.e.length-1][2]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5933=function(M){if(--M.cbt<0){throw _5933;}
//"lambda body for #(struct:LamPositionalName symbol=? whalesong/lang/bool.rkt 17 0 312 143)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["symbol?"]._i(M);
M.e.pop();
if(M.v===false){return(_5945)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["symbol?"]._i(M);
M.e.pop();
return(_5946)(M);}};

var _5961=function(M){return(_5934)(M);};

var _5931=function(M){if(--M.cbt<0){throw _5931;}
//"lambda body for #(struct:LamPositionalName false? whalesong/lang/bool.rkt 10 0 129 30)"

M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5955=function(M){if(--M.cbt<0){throw _5955;}
M.e.length-=(M.a-1);
return(_5956)(M);};

var _5940=function(M){if(M.v===false){return(_5937)(M);}else{M.v=RT.VOID;
return(_5938)(M);}};

var _5936=function(M){if(--M.cbt<0){throw _5936;}
};

var _5942=function(M){M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5938)(M);};

var _5937=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym2606;
M.e[M.e.length-2]="boolean";
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["boolean?"]._i(M);
M.e.pop();
if(M.v===false){return(_5941)(M);}else{M.e[M.e.length-3]=1;
return(_5942)(M);}};

var _5952=function(M){if(--M.cbt<0){throw _5952;}
M.c.push(new RT.PromptFrame(_5954,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=false;
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5941=function(M){M.e[M.e.length-3]=0;
return(_5942)(M);};

var _5948=function(M){M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_5944)(M);};

var _5938=function(M){M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5944=function(M){M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5939=function(M){M.v=false;
return(_5940)(M);};

_5952.mvr=_5951;
_5954.mvr=_5953;
_5956.mvr=_5955;
_5958.mvr=_5957;
_5960.mvr=_5959;
_5936.mvr=_5935;
var sym2605=RT.makeSymbol("symbol=?");
var sym2606=RT.makeSymbol("boolean=?");var _5931_c=new RT.Closure(_5931,1,void(0),"false?");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_5961, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/bool.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/bool.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/check-expect/check-expect.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6042=function(M){if(--M.cbt<0){throw _6042;}
M.e.length-=(M.a-1);
return(_6043)(M);};



var _6064=function(M){if(--M.cbt<0){throw _6064;}
if((M.a-5)===0){return(_6066)(M);}else{RT.si_context_expected(5)(M);
}};

var _6054=function(M){if(--M.cbt<0){throw _6054;}
M.e.length-=(M.a-1);
return(_6055)(M);};


var _6044=function(M){if(--M.cbt<0){throw _6044;}
M.e.length-=(M.a-1);
return(_6045)(M);};

var _6040=function(M){M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==void(0))!==false){return(_6041)(M);}else{return(_6043)(M);}};

var _5988=function(M){if(--M.cbt<0){throw _5988;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
return(_5982)(M);};

var _6066=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym2644;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6068,M.p));
return((M.p).label)(M);};

var _6058=function(M){if(--M.cbt<0){throw _6058;}
M.e.length-=(M.a-1);
return(_6059)(M);};

var _6048=function(M){if(--M.cbt<0){throw _6048;}
M.e.length-=(M.a-1);
return(_6049)(M);};

var _5982=function(M){M.e.pop();
M.a=1;
M.v=M.primitives["display"]._i(M);
M.e.pop();
M.a=0;
M.v=M.primitives["newline"]._i(M);
return(_5977)(M);};

var _6033=function(M){M.v=RT.VOID;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _6027=function(M){M.v=(M.e[M.e.length-2]===1);
if(M.v===false){return(_6029)(M);}else{M.v="one test";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5976=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]="Ran ~a.\n";
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][6];
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-5][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5990,M.p));
return((M.p).label)(M);};

var _6052=function(M){if(--M.cbt<0){throw _6052;}
M.e.length-=(M.a-1);
return(_6053)(M);};

var _6039=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6061=function(M){if(--M.cbt<0){throw _6061;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/lang/check-expect/check-expect.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _5985=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]="All ~a tests passed!";
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-6][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5988,M.p));
return((M.p).label)(M);};

var _5969=function(M){M.c.push(new RT.PromptFrame(_5971,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/lang/check-expect/check-expect.rkt"]=new RT.ModuleRecord("check-expect",_6040);
return(_6039)(M);};

_6065=RT.si_context_expected(5);

var _6057=function(M){if(--M.cbt<0){throw _6057;}
M.c.push(new RT.PromptFrame(_6059,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5968,0,[M.e[M.e.length-1]],"run-tests");
M.e[M.e.length-1][15]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6049=function(M){if(--M.cbt<0){throw _6049;}
M.c.push(new RT.PromptFrame(_6051,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5964,1,[M.e[M.e.length-1]],"display-location");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6036=function(M){if(--M.cbt<0){throw _6036;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_6033)(M);}else{M.e.push("Running tests...\n");
M.a=1;
M.v=M.primitives["printf"]._i(M);
M.e.pop();
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][27];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.e.push(void(0));
if (M.e[M.e.length-5][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6021=function(M){if(--M.cbt<0){throw _6021;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_6023)(M);}else{M.v=true;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6000=function(M){if(--M.cbt<0){throw _6000;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["printf"]._i(M);
M.e.length-=2;
return(_5977)(M);};

var _5990=function(M){if(--M.cbt<0){throw _5990;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5992,M.p));
return((M.p).label)(M);};

var _5979=function(M){if(--M.cbt<0){throw _5979;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_5976)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0));
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5981,M.p));
return((M.p).label)(M);}};

var _6053=function(M){if(--M.cbt<0){throw _6053;}
M.c.push(new RT.PromptFrame(_6055,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5966,1,[M.e[M.e.length-1]],"test-suffixed");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6045=function(M){if(--M.cbt<0){throw _6045;}
M.c.push(new RT.PromptFrame(_6047,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=RT.NULL;
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6014=function(M){if(--M.cbt<0){throw _6014;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6005=function(M){if(--M.cbt<0){throw _6005;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_6007)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-6][27];
M.e[M.e.length-1]=RT.checkedAdd1(M, M.e[M.e.length-7]);
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(void(0));
M.p=M.e[M.e.length-7][21][0][M.e[M.e.length-7][21][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6010,M.p));
return((M.p).label)(M);}};

var _5992=function(M){if(--M.cbt<0){throw _5992;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["printf"]._i(M);
M.e.length-=2;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a passed.\n";
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][8];
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][6];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5994,M.p));
return((M.p).label)(M);};

var _5968=function(M){if(--M.cbt<0){throw _5968;}
//"lambda body for #(struct:LamPositionalName run-tests whalesong/lang/check-expect/check-expect.rkt 193 0 6362 1414)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6036,M.p));
return((M.p).label)(M);};

var _5966=function(M){if(--M.cbt<0){throw _5966;}
//"lambda body for #(struct:LamPositionalName test-suffixed whalesong/lang/check-expect/check-expect.rkt 176 0 5996 115)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-2]===0);
if(M.v===false){return(_6027)(M);}else{M.v="zero tests";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6025=function(M){if(--M.cbt<0){throw _6025;}
M.e.length-=(M.a-1);
return(_6026)(M);};








var _6043=function(M){if(--M.cbt<0){throw _6043;}
M.e.push([M.params.currentNamespace.get("*tests*")||M.primitives["*tests*"],M.params.currentNamespace.get("check-expect*")||M.primitives["check-expect*"],M.primitives["equal?"],M.primitives["printf"],M.params.currentNamespace.get("display-location")||M.primitives["display-location"],M.params.currentNamespace.get("accumulate-test!")||M.primitives["accumulate-test!"],M.params.currentNamespace.get("test-suffixed")||M.primitives["test-suffixed"],M.primitives["format"],M.params.currentNamespace.get("capitalize")||M.primitives["capitalize"],M.primitives["string-length"],M.primitives["string-append"],M.primitives["string"],M.primitives["char-upcase"],M.primitives["string-ref"],M.primitives["substring"],M.params.currentNamespace.get("run-tests")||M.primitives["run-tests"],M.primitives["length"],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("empty?"),{moduleName:"whalesong/lang/list.rkt",name:"empty?"}],M.primitives["display"],M.primitives["newline"],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("first"),{moduleName:"whalesong/lang/list.rkt",name:"first"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("rest"),{moduleName:"whalesong/lang/list.rkt",name:"rest"}],M.primitives["reverse"],M.params.currentNamespace.get("struct:unexpected-no-error")||M.primitives["struct:unexpected-no-error"],M.params.currentNamespace.get("make-unexpected-no-error")||M.primitives["make-unexpected-no-error"],M.params.currentNamespace.get("unexpected-no-error?")||M.primitives["unexpected-no-error?"],M.params.currentNamespace.get("unexpected-no-error-result")||M.primitives["unexpected-no-error-result"],false]);M.e[M.e.length-1].names=["*tests*","check-expect*","equal?","printf","display-location","accumulate-test!","test-suffixed","format","capitalize","string-length","string-append","string","char-upcase","string-ref","substring","run-tests","length","empty?","display","newline","first","rest","reverse","struct:unexpected-no-error","make-unexpected-no-error","unexpected-no-error?","unexpected-no-error-result",false];
M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_6045,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5962,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][27]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5996=function(M){if(--M.cbt<0){throw _5996;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["printf"]._i(M);
M.e.length-=2;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a failed.\n";
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][8];
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][6];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5998,M.p));
return((M.p).label)(M);};

var _5981=function(M){if(--M.cbt<0){throw _5981;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===1);
if(M.v===false){return(_5983)(M);}else{M.e[M.e.length-2]="The test passed!";
return(_5982)(M);}};

var _6067=function(M){if(--M.cbt<0){throw _6067;}
if((M.a-4)===0){return(_6063)(M);}else{RT.si_context_expected(4)(M);
}};

var _6056=function(M){if(--M.cbt<0){throw _6056;}
M.e.length-=(M.a-1);
return(_6057)(M);};

var _6046=function(M){if(--M.cbt<0){throw _6046;}
M.e.length-=(M.a-1);
return(_6047)(M);};

var _6041=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_6043)(M);}else{M.c.push(new RT.CallFrame(_6043,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

_6068=RT.si_context_expected(4);


var _5977=function(M){M.e[M.e.length-1][0]=RT.NULL;
M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6060=function(M){if(--M.cbt<0){throw _6060;}
M.e.length-=(M.a-1);
return(_6061)(M);};

var _6050=function(M){if(--M.cbt<0){throw _6050;}
M.e.length-=(M.a-1);
return(_6051)(M);};

var _6063=function(M){M.e.splice(M.e.length-8,5);
M.e[M.e.length-4][23]=M.v;
M.e[M.e.length-4][24]=M.e[M.e.length-1];
M.e[M.e.length-4][25]=M.e[M.e.length-2];
M.e[M.e.length-4][26]=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6007=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-6][27];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=RT.checkedAdd1(M, M.e[M.e.length-8]);
M.e.push(void(0));
M.p=M.e[M.e.length-7][21][0][M.e[M.e.length-7][21][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6014,M.p));
return((M.p).label)(M);};

var _6059=function(M){if(--M.cbt<0){throw _6059;}
M.c.push(new RT.PromptFrame(_6061,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym2645;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.a=0;
M.v=M.primitives["current-inspector"]._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.NULL);
M.e[M.e.length-10]=false;
M.v=sym2645;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6065,M.p));
return((M.p).label)(M);};

var _6029=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a tests";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5983=function(M){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){return(_5985)(M);}else{M.e[M.e.length-2]="Both tests passed!";
return(_5982)(M);}};

var _6023=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="check-expect: actual value ~s differs from ~s, the expected value\n";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["printf"]._i(M);
M.e.length-=3;
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][4];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6026,M.p));
return((M.p).label)(M);};

var _6031=function(M){M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5972=function(M){M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][20][0][M.e[M.e.length-3][20][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6002,M.p));
return((M.p).label)(M);};

var _6070=function(M){return(_5969)(M);};

var _6055=function(M){if(--M.cbt<0){throw _6055;}
M.c.push(new RT.PromptFrame(_6057,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5967,1,[M.e[M.e.length-1]],"capitalize");
M.e[M.e.length-1][8]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6047=function(M){if(--M.cbt<0){throw _6047;}
M.c.push(new RT.PromptFrame(_6049,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5963,4,[M.e[M.e.length-1]],"check-expect*");
M.e[M.e.length-1][1]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5971=function(M){if(--M.cbt<0){throw _5971;}
};

var _6010=function(M){if(--M.cbt<0){throw _6010;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6002=function(M){if(--M.cbt<0){throw _6002;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6005,M.p));
return((M.p).label)(M);};

var _5994=function(M){if(--M.cbt<0){throw _5994;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5996,M.p));
return((M.p).label)(M);};

var _5975=function(M){if(--M.cbt<0){throw _5975;}
if(M.v===false){return(_5972)(M);}else{M.v=M.e[M.e.length-4];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5979,M.p));
return((M.p).label)(M);}};

var _6051=function(M){if(--M.cbt<0){throw _6051;}
M.c.push(new RT.PromptFrame(_6053,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_5965,1,[M.e[M.e.length-1]],"accumulate-test!");
M.e[M.e.length-1][5]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6026=function(M){if(--M.cbt<0){throw _6026;}
M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6018=function(M){if(--M.cbt<0){throw _6018;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6021,M.p));
return((M.p).label)(M);};

var _5998=function(M){if(--M.cbt<0){throw _5998;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6000,M.p));
return((M.p).label)(M);};

var _5970=function(M){if(--M.cbt<0){throw _5970;}
M.e.length-=(M.a-1);
return(_5971)(M);};

var _5967=function(M){if(--M.cbt<0){throw _5967;}
//"lambda body for #(struct:LamPositionalName capitalize whalesong/lang/check-expect/check-expect.rkt 184 0 6148 189)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["string-length"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_6031)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.e.push(void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=0;
M.v=M.primitives["string-ref"]._i(M);
M.e.length-=2;
M.e[M.e.length-1]=M.v;
M.v=M.primitives["char-upcase"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.a=1;
M.v=M.primitives["string"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.a=2;
M.v=M.primitives["substring"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["string-append"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5965=function(M){if(--M.cbt<0){throw _5965;}
//"lambda body for #(struct:LamPositionalName accumulate-test! whalesong/lang/check-expect/check-expect.rkt 171 0 5881 73)"

M.e.push(M.p.closedVals[0]);
M.e[M.e.length-1][0]=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1][0]);
M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5964=function(M){if(--M.cbt<0){throw _5964;}
//"lambda body for #(struct:LamPositionalName display-location whalesong/lang/check-expect/check-expect.rkt 98 0 3161 171)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="  at: ~s, line ~s, column ~s\n";
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["srcloc-source"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["srcloc-line"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["srcloc-column"]._i(M);
M.e.pop();
M.e[M.e.length-4]=M.v;
M.a=4;
M.v=M.primitives["printf"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5963=function(M){if(--M.cbt<0){throw _5963;}
//"lambda body for #(struct:LamPositionalName check-expect* whalesong/lang/check-expect/check-expect.rkt 79 0 2489 669)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-2];
M.e.push(void(0));
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6018,M.p));
return((M.p).label)(M);};






var _5962=function(M){if(--M.cbt<0){throw _5962;}
//"lambda body for #(struct:LamPositionalName loop whalesong/lang/check-expect/check-expect.rkt 197 4 6480 1294)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.p=M.e[M.e.length-2][17][0][M.e[M.e.length-2][17][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5975,M.p));
return((M.p).label)(M);};

_6026.mvr=_6025;
_6043.mvr=_6042;
_6045.mvr=_6044;
_6047.mvr=_6046;
_6049.mvr=_6048;
_6051.mvr=_6050;
_6053.mvr=_6052;
_6055.mvr=_6054;
_6057.mvr=_6056;
_6059.mvr=_6058;
_6065.mvr=_6064;
_6068.mvr=_6067;
_6061.mvr=_6060;
_5971.mvr=_5970;
var sym2645=RT.makeSymbol("unexpected-no-error");
var sym2644=RT.makeSymbol("result");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6070, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/check-expect/check-expect.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/lang/check-expect/check-expect.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6078=function(M){if(--M.cbt<0){throw _6078;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/resource.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/resource.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6075=function(M){M.modules["whalesong/resource.rkt"].isInvoked=true;
if((M.modules["whalesong/resource/main.rkt"]!==void(0))!==false){return(_6076)(M);}else{return(_6078)(M);}};

var _6077=function(M){if(--M.cbt<0){throw _6077;}
M.e.length-=(M.a-1);
return(_6078)(M);};

var _6071=function(M){M.c.push(new RT.PromptFrame(_6073,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/resource.rkt"]=new RT.ModuleRecord("resource",_6075);
return(_6074)(M);};

var _6076=function(M){if(M.modules["whalesong/resource/main.rkt"].isInvoked!==false){return(_6078)(M);}else{M.c.push(new RT.CallFrame(_6078,M.p));
return(M.modules["whalesong/resource/main.rkt"].label)(M);}};

var _6074=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6079=function(M){return(_6071)(M);};

var _6073=function(M){if(--M.cbt<0){throw _6073;}
};

var _6072=function(M){if(--M.cbt<0){throw _6072;}
M.e.length-=(M.a-1);
return(_6073)(M);};

_6078.mvr=_6077;
_6073.mvr=_6072;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6079, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/main.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6094=function(M){return(_6080)(M);};

var _6090=function(M){if(--M.cbt<0){throw _6090;}
if((M.modules["whalesong/resource/structs.rkt"]!==void(0))!==false){return(_6091)(M);}else{return(_6093)(M);}};

var _6086=function(M){if(--M.cbt<0){throw _6086;}
M.e.length-=(M.a-1);
return(_6087)(M);};

var _6081=function(M){if(--M.cbt<0){throw _6081;}
M.e.length-=(M.a-1);
return(_6082)(M);};

var _6089=function(M){if(--M.cbt<0){throw _6089;}
M.e.length-=(M.a-1);
return(_6090)(M);};

var _6085=function(M){if(M.modules["whalesong/resource/compile-time.rkt"].isInvoked!==false){return(_6087)(M);}else{M.c.push(new RT.CallFrame(_6087,M.p));
return(M.modules["whalesong/resource/compile-time.rkt"].label)(M);}};

var _6092=function(M){if(--M.cbt<0){throw _6092;}
M.e.length-=(M.a-1);
return(_6093)(M);};

var _6093=function(M){if(--M.cbt<0){throw _6093;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/resource/main.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/resource/main.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6088=function(M){if(M.modules["whalesong/resource/runtime.rkt"].isInvoked!==false){return(_6090)(M);}else{M.c.push(new RT.CallFrame(_6090,M.p));
return(M.modules["whalesong/resource/runtime.rkt"].label)(M);}};

var _6082=function(M){if(--M.cbt<0){throw _6082;}
};

var _6091=function(M){if(M.modules["whalesong/resource/structs.rkt"].isInvoked!==false){return(_6093)(M);}else{M.c.push(new RT.CallFrame(_6093,M.p));
return(M.modules["whalesong/resource/structs.rkt"].label)(M);}};

var _6087=function(M){if(--M.cbt<0){throw _6087;}
if((M.modules["whalesong/resource/runtime.rkt"]!==void(0))!==false){return(_6088)(M);}else{return(_6090)(M);}};

var _6084=function(M){M.modules["whalesong/resource/main.rkt"].isInvoked=true;
if((M.modules["whalesong/resource/compile-time.rkt"]!==void(0))!==false){return(_6085)(M);}else{return(_6087)(M);}};

var _6080=function(M){M.c.push(new RT.PromptFrame(_6082,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/resource/main.rkt"]=new RT.ModuleRecord("main",_6084);
return(_6083)(M);};

var _6083=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_6087.mvr=_6086;
_6090.mvr=_6089;
_6093.mvr=_6092;
_6082.mvr=_6081;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6094, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/main.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/main.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/compile-time.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6107=function(M){return(_6096)(M);};

var _6098=function(M){if(--M.cbt<0){throw _6098;}
};

var _6103=function(M){if(--M.cbt<0){throw _6103;}
if((M.modules["whalesong/resource/specialize/impl.rkt"]!==void(0))!==false){return(_6104)(M);}else{return(_6106)(M);}};

var _6100=function(M){M.modules["whalesong/resource/compile-time.rkt"].isInvoked=true;
if((M.modules["whalesong/resource/structs.rkt"]!==void(0))!==false){return(_6101)(M);}else{return(_6103)(M);}};

var _6105=function(M){if(--M.cbt<0){throw _6105;}
M.e.length-=(M.a-1);
return(_6106)(M);};

var _6102=function(M){if(--M.cbt<0){throw _6102;}
M.e.length-=(M.a-1);
return(_6103)(M);};

var _6097=function(M){if(--M.cbt<0){throw _6097;}
M.e.length-=(M.a-1);
return(_6098)(M);};

var _6106=function(M){if(--M.cbt<0){throw _6106;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/resource/compile-time.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/resource/compile-time.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6099=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6096=function(M){M.c.push(new RT.PromptFrame(_6098,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/resource/compile-time.rkt"]=new RT.ModuleRecord("compile-time",_6100);
return(_6099)(M);};

var _6104=function(M){if(M.modules["whalesong/resource/specialize/impl.rkt"].isInvoked!==false){return(_6106)(M);}else{M.c.push(new RT.CallFrame(_6106,M.p));
return(M.modules["whalesong/resource/specialize/impl.rkt"].label)(M);}};

var _6101=function(M){if(M.modules["whalesong/resource/structs.rkt"].isInvoked!==false){return(_6103)(M);}else{M.c.push(new RT.CallFrame(_6103,M.p));
return(M.modules["whalesong/resource/structs.rkt"].label)(M);}};

_6103.mvr=_6102;
_6106.mvr=_6105;
_6098.mvr=_6097;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6107, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/compile-time.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/compile-time.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/resource/specialize/impl.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/resource/specialize/impl.rkt",
        function(M) {
            var afterName2862 = function() { 
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/resource/specialize/impl.rkt"];
             modrec.prefix=[void(0)];modrec.prefix.names=["specialize!1.1"];modrec.prefix.internalNames=["specialize!"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){var resourceType = MACHINE.modules['whalesong/resource/structs.rkt'].getNamespace().get('struct:resource');

var makeClosure = plt.baselib.functions.makeClosure;
var finalizeClosureCall = plt.baselib.functions.finalizeClosureCall;

var checkResource = plt.baselib.check.makeCheckArgumentType(
    resourceType.predicate,
    "resource");

var getResourcePath = function(r) { return resourceType.accessor(r, 0); };
var getResourceKey = function(r) { return resourceType.accessor(r, 1); };

var PAUSE = plt.runtime.PAUSE;




var imageExtensions = { 'png' : true,
                        'gif' : true,
                        'jpeg' : true,
                        'jpg' : true,
                        'bmp' : true };

var isImagePath = function(s) {
    var extensionMatch = s.toLowerCase().match(/\.(\w+)$/);
    if (extensionMatch !== null && imageExtensions[extensionMatch[1]])
        return true;
    return false;
};



// A lot of this comes from image/private/kernel.js
var injectImageMethods = function(r, img, after) {
    r.img = img;
    r.getWidth = function() { return img.width; };
    r.getHeight = function() { return img.height; };
    r.getBaseline = function() { return img.height; };
    r.updatePinhole = function() {
        var aCopy = plt.baselib.clone(this);
        aCopy.pinholeX = x;
        aCopy.pinholeY = y;
        return aCopy;
    };
    r.render = function(ctx, x, y) {
        ctx.drawImage(r.animationHackImg, x, y);
    };
    r.toDomNode = function(params) {
        return img.cloneNode(true);
    };

    installHackToSupportAnimatedGifs(r, after);
};

var installHackToSupportAnimatedGifs = function(r, after) {
    r.animationHackImg = r.img.cloneNode(true);
    document.body.appendChild(r.animationHackImg);
    r.animationHackImg.width = 0;
    r.animationHackImg.height = 0;
    
    if (r.animationHackImg.complete) {
        after();
    } else {
        r.animationHackImg.onload = function() {
            delete (r.animationHackImg.onload);
            after();
        };
    }
};







// If the resource is an image, decorate the value with the image properties.
EXPORTS['specialize!'] = makeClosure(
    'specialize!',
    1,
    function(MACHINE) {
        var resource = checkResource(MACHINE, 'specialize!', 0);

        if (isImagePath(getResourceKey(resource).toString())) {
            return PAUSE(
                function(restart) {
                    var rawImage = new Image();
                    rawImage.onload = function() {
                        delete(rawImage.onload);
                        delete(rawImage.onerror);
                        var after = function() {
                            restart(function(MACHINE) {
                                return finalizeClosureCall(MACHINE, resource);
                            });
                        };
                        injectImageMethods(resource, rawImage, after);
                    };
                    rawImage.onerror = function(e) {
                        delete(rawImage.onload);
                        delete(rawImage.onerror);
                        // on any kind of image-loading error, fail out and
                        // just return the resource unchanged.
                        restart(function(MACHINE) {
                            return finalizeClosureCall(MACHINE, resource);
                        });
                    }
                    rawImage.src = getResourceKey(resource).toString();
                });
        } else {
            return finalizeClosureCall(MACHINE, resource);
        }
    });
})(M, exports);
             modrec.prefix[0]=exports["specialize!"];

             modrec.privateExports = exports;
             modrec.finalizeModuleInvokation();
             return M.c.pop().label(M); };
             if (! M.modules["whalesong/resource/structs.rkt"].isInvoked) {
                 M.modules["whalesong/resource/structs.rkt"].internalInvoke(M,
                                            afterName2862,
                                            M.params.currentErrorHandler);
             } else {
                 afterName2862();
             }
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/structs.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6120=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym2881;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym2882;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym2883;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6122,M.p));
return((M.p).label)(M);};

var _6117=function(M){M.e.splice(M.e.length-10,5);
M.e[M.e.length-6][0]=M.v;
M.e[M.e.length-6][1]=M.e[M.e.length-1];
M.e[M.e.length-6][2]=M.e[M.e.length-2];
M.e[M.e.length-6][3]=M.e[M.e.length-3];
M.e[M.e.length-6][4]=M.e[M.e.length-4];
M.e[M.e.length-6][5]=M.e[M.e.length-5];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6121=function(M){if(--M.cbt<0){throw _6121;}
if((M.a-6)===0){return(_6117)(M);}else{RT.si_context_expected(6)(M);
}};

var _6118=function(M){if(--M.cbt<0){throw _6118;}
if((M.a-5)===0){return(_6120)(M);}else{RT.si_context_expected(5)(M);
}};

_6122=RT.si_context_expected(6);

var _6112=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_6119=RT.si_context_expected(5);

var _6113=function(M){M.modules["whalesong/resource/structs.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("struct:resource")||M.primitives["struct:resource"],M.params.currentNamespace.get("resource1.1")||M.primitives["resource1.1"],M.params.currentNamespace.get("resource?")||M.primitives["resource?"],M.params.currentNamespace.get("resource-path")||M.primitives["resource-path"],M.params.currentNamespace.get("resource-key")||M.primitives["resource-key"],M.params.currentNamespace.get("resource-content")||M.primitives["resource-content"]]);M.e[M.e.length-1].names=["struct:resource","resource1.1","resource?","resource-path","resource-key","resource-content"];
M.modules["whalesong/resource/structs.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_6115,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym2884;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=3;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=sym2885;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.makePair(1,RT.makePair(2,RT.NULL)));
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym2884;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6119,M.p));
return((M.p).label)(M);};

var _6109=function(M){M.c.push(new RT.PromptFrame(_6111,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/resource/structs.rkt"]=new RT.ModuleRecord("structs",_6113);
return(_6112)(M);};

var _6124=function(M){return(_6109)(M);};

var _6111=function(M){if(--M.cbt<0){throw _6111;}
};

var _6114=function(M){if(--M.cbt<0){throw _6114;}
M.e.length-=(M.a-1);
return(_6115)(M);};

var _6110=function(M){if(--M.cbt<0){throw _6110;}
M.e.length-=(M.a-1);
return(_6111)(M);};

var _6115=function(M){if(--M.cbt<0){throw _6115;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/resource/structs.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

_6119.mvr=_6118;
_6122.mvr=_6121;
_6115.mvr=_6114;
_6111.mvr=_6110;
var sym2884=RT.makeSymbol("resource");
var sym2882=RT.makeSymbol("key");
var sym2883=RT.makeSymbol("content");
var sym2885=RT.makeSymbol("prefab");
var sym2881=RT.makeSymbol("path");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6124, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/structs.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/resource/structs.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/resource/runtime.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/resource/runtime.rkt",
        function(M) {
            var afterName2781 = function() { 
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/resource/runtime.rkt"];
             modrec.prefix=[void(0)];modrec.prefix.names=["resource->url1.1"];modrec.prefix.internalNames=["resource->url"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){var resourceType = MACHINE.modules['whalesong/resource/structs.rkt'].getNamespace().get('struct:resource');

var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;

var checkResource = plt.baselib.check.makeCheckArgumentType(
    resourceType.predicate,
    "resource");

var getResourcePath = function(r) { return resourceType.accessor(r, 0); };
var getResourceKey = function(r) { return resourceType.accessor(r, 1); };



EXPORTS['resource->url'] = makePrimitiveProcedure(
    'resource->url',
    1,
    function(MACHINE) {
        var resource = checkResource(MACHINE, 'resource->url', 0);
        return String(getResourceKey(resource));
    });
})(M, exports);
             modrec.prefix[0]=exports["resource->url"];

             modrec.privateExports = exports;
             modrec.finalizeModuleInvokation();
             return M.c.pop().label(M); };
             if (! M.modules["whalesong/resource/structs.rkt"].isInvoked) {
                 M.modules["whalesong/resource/structs.rkt"].internalInvoke(M,
                                            afterName2781,
                                            M.params.currentErrorHandler);
             } else {
                 afterName2781();
             }
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6135=function(M){if(--M.cbt<0){throw _6135;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/web-world.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/web-world.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6130=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_6132)(M);}else{M.c.push(new RT.CallFrame(_6132,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _6125=function(M){M.c.push(new RT.PromptFrame(_6127,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/web-world.rkt"]=new RT.ModuleRecord("web-world",_6129);
return(_6128)(M);};

var _6133=function(M){if(M.modules["whalesong/web-world/main.rkt"].isInvoked!==false){return(_6135)(M);}else{M.c.push(new RT.CallFrame(_6135,M.p));
return(M.modules["whalesong/web-world/main.rkt"].label)(M);}};

var _6128=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6127=function(M){if(--M.cbt<0){throw _6127;}
};

var _6131=function(M){if(--M.cbt<0){throw _6131;}
M.e.length-=(M.a-1);
return(_6132)(M);};

var _6132=function(M){if(--M.cbt<0){throw _6132;}
if((M.modules["whalesong/web-world/main.rkt"]!==void(0))!==false){return(_6133)(M);}else{return(_6135)(M);}};

var _6126=function(M){if(--M.cbt<0){throw _6126;}
M.e.length-=(M.a-1);
return(_6127)(M);};

var _6134=function(M){if(--M.cbt<0){throw _6134;}
M.e.length-=(M.a-1);
return(_6135)(M);};

var _6129=function(M){M.modules["whalesong/web-world.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==void(0))!==false){return(_6130)(M);}else{return(_6132)(M);}};

var _6136=function(M){return(_6125)(M);};

_6132.mvr=_6131;
_6135.mvr=_6134;
_6127.mvr=_6126;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6136, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/main.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6148=function(M){M.v=false;
return(_6147)(M);};

var _6146=function(M){M.v=false;
return(_6147)(M);};

var _6216=function(M){if(--M.cbt<0){throw _6216;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/web-world/main.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6212=function(M){if(--M.cbt<0){throw _6212;}
M.c.push(new RT.PromptFrame(_6214,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6139,2,[M.e[M.e.length-1]],"view-bind-many*");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6188=function(M){if(--M.cbt<0){throw _6188;}
if(M.v===false){return(_6185)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3][15][0][M.e[M.e.length-3][15][1]];
M.e.push(void(0));
M.p=M.e[M.e.length-4][16][0][M.e[M.e.length-4][16][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6190,M.p));
return((M.p).label)(M);}};

var _6163=function(M){if(--M.cbt<0){throw _6163;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6165,M.p));
return((M.p).label)(M);};

var _6157=function(M){if(--M.cbt<0){throw _6157;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6159,M.p));
return((M.p).label)(M);};

var _6211=function(M){if(--M.cbt<0){throw _6211;}
M.e.length-=(M.a-1);
return(_6212)(M);};

var _6207=function(M){if(--M.cbt<0){throw _6207;}
M.e.length-=(M.a-1);
return(_6208)(M);};

var _6205=function(M){if(--M.cbt<0){throw _6205;}
if((M.modules["whalesong/web-world/event.rkt"]!==void(0))!==false){return(_6206)(M);}else{return(_6208)(M);}};

var _6178=function(M){if(--M.cbt<0){throw _6178;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6142=function(M){if(--M.cbt<0){throw _6142;}
M.e.length-=(M.a-1);
return(_6143)(M);};

var _6161=function(M){if(--M.cbt<0){throw _6161;}
M.e[M.e.length-1]=M.v;
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
return(_6147)(M);};


var _6209=function(M){if(--M.cbt<0){throw _6209;}
M.e.length-=(M.a-1);
return(_6210)(M);};

var _6138=function(M){if(--M.cbt<0){throw _6138;}
//"lambda body for #(struct:LamPositionalName string-or-symbol? whalesong/web-world/main.rkt 107 2 3911 71)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["string?"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_6173)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _6140=function(M){if(--M.cbt<0){throw _6140;}
//"lambda body for #(struct:LamPositionalName view-prepend-child whalesong/web-world/main.rkt 131 0 4896 286)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.p=M.e[M.e.length-2][13][0][M.e[M.e.length-2][13][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6184,M.p));
return((M.p).label)(M);};

var _6175=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3014;
M.e[M.e.length-2]="(listof (list id-string event-type-string world-updater))";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_6176)(M);};

var _6204=function(M){if(--M.cbt<0){throw _6204;}
M.e.length-=(M.a-1);
return(_6205)(M);};

var _6199=function(M){if(--M.cbt<0){throw _6199;}
if((M.modules["whalesong/web-world/impl.rkt"]!==void(0))!==false){return(_6200)(M);}else{return(_6202)(M);}};

var _6167=function(M){if(--M.cbt<0){throw _6167;}
M.e[M.e.length-2]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-5][8][0][M.e[M.e.length-5][8][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6169,M.p));
return((M.p).label)(M);};


var _6215=function(M){if(--M.cbt<0){throw _6215;}
M.e.length-=(M.a-1);
return(_6216)(M);};

var _6214=function(M){if(--M.cbt<0){throw _6214;}
M.c.push(new RT.PromptFrame(_6216,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6140,2,[M.e[M.e.length-1]],"view-prepend-child");
M.e[M.e.length-1][12]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6144=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3014;
M.e[M.e.length-2]="(list id-string event-type-string world-updater)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_6145)(M);};

var _6195=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6185=function(M){M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][17][0][M.e[M.e.length-3][17][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6181=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3015;
M.e[M.e.length-2]="view";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_6182)(M);};

var _6203=function(M){if(M.modules["whalesong/web-world/helpers.rkt"].isInvoked!==false){return(_6205)(M);}else{M.c.push(new RT.CallFrame(_6205,M.p));
return(M.modules["whalesong/web-world/helpers.rkt"].label)(M);}};

var _6200=function(M){if(M.modules["whalesong/web-world/impl.rkt"].isInvoked!==false){return(_6202)(M);}else{M.c.push(new RT.CallFrame(_6202,M.p));
return(M.modules["whalesong/web-world/impl.rkt"].label)(M);}};

var _6154=function(M){M.v=false;
return(_6147)(M);};

var _6182=function(M){M.e.push(void(0));
M.p=M.e[M.e.length-2][14][0][M.e[M.e.length-2][14][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6188,M.p));
return((M.p).label)(M);};

var _6217=function(M){return(_6141)(M);};

var _6143=function(M){if(--M.cbt<0){throw _6143;}
};

var _6190=function(M){if(--M.cbt<0){throw _6190;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6169=function(M){if(--M.cbt<0){throw _6169;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6153=function(M){if(--M.cbt<0){throw _6153;}
if(M.v===false){return(_6148)(M);}else{M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-2][18];
M.e.push(void(0));
M.p=M.e[M.e.length-3][6][0][M.e[M.e.length-3][6][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6157,M.p));
return((M.p).label)(M);}};

var _6151=function(M){if(--M.cbt<0){throw _6151;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6153,M.p));
return((M.p).label)(M);};

var _6208=function(M){if(--M.cbt<0){throw _6208;}
M.e.push([M.params.currentNamespace.get("view-bind-many*")||M.primitives["view-bind-many*"],M.primitives["string?"],M.primitives["symbol?"],M.primitives["raise-type-error"],[M.modules["whalesong/lang/private/list.rkt"].prefix,M.modules["whalesong/lang/private/list.rkt"].getPrefixOffset("foldl"),{moduleName:"whalesong/lang/private/list.rkt",name:"foldl"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("first"),{moduleName:"whalesong/lang/list.rkt",name:"first"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("second"),{moduleName:"whalesong/lang/list.rkt",name:"second"}],M.primitives["procedure?"],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("third"),{moduleName:"whalesong/lang/list.rkt",name:"third"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-bind27.53"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-bind27.53"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-focus12.23"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-focus12.23"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("->view9.17"),{moduleName:"whalesong/web-world/impl.rkt",name:"->view9.17"}],M.params.currentNamespace.get("view-prepend-child")||M.primitives["view-prepend-child"],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view?10.19"),{moduleName:"whalesong/web-world/impl.rkt",name:"view?10.19"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-down?19.37"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-down?19.37"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-insert-left41.81"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-insert-left41.81"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-down20.39"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-down20.39"}],[M.modules["whalesong/web-world/impl.rkt"].prefix,M.modules["whalesong/web-world/impl.rkt"].getPrefixOffset("view-append-child39.77"),{moduleName:"whalesong/web-world/impl.rkt",name:"view-append-child39.77"}],false,false]);M.e[M.e.length-1].names=["view-bind-many*","string?","symbol?","raise-type-error","foldl","first","second","procedure?","third","view-bind27.53","view-focus12.23","->view9.17","view-prepend-child","view?10.19","view-down?19.37","view-insert-left41.81","view-down20.39","view-append-child39.77",false,false];
M.modules["whalesong/web-world/main.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_6210,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6137,2,[M.e[M.e.length-1]],"...b-world/main.rkt:115:9");
M.e[M.e.length-1][19]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6210=function(M){if(--M.cbt<0){throw _6210;}
M.c.push(new RT.PromptFrame(_6212,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6138,1,[M.e[M.e.length-1]],"string-or-symbol?");
M.e[M.e.length-1][18]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6184=function(M){if(--M.cbt<0){throw _6184;}
if(M.v===false){return(_6181)(M);}else{M.v=RT.VOID;
return(_6182)(M);}};

var _6196=function(M){M.modules["whalesong/web-world/main.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==void(0))!==false){return(_6197)(M);}else{return(_6199)(M);}};

var _6159=function(M){if(--M.cbt<0){throw _6159;}
if(M.v===false){return(_6154)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][8][0][M.e[M.e.length-3][8][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6161,M.p));
return((M.p).label)(M);}};


var _6139=function(M){if(--M.cbt<0){throw _6139;}
//"lambda body for #(struct:LamPositionalName view-bind-many* whalesong/web-world/main.rkt 105 0 3851 1041)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_6175)(M);}else{M.v=RT.VOID;
return(_6176)(M);}};





var _6137=function(M){if(--M.cbt<0){throw _6137;}
//"lambda body for #(struct:LamPositionalName ...b-world/main.rkt:115:9 whalesong/web-world/main.rkt 115 9 4204 628)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_6146)(M);}else{M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-2][18];
M.e.push(void(0));
M.p=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6151,M.p));
return((M.p).label)(M);}};

var _6206=function(M){if(M.modules["whalesong/web-world/event.rkt"].isInvoked!==false){return(_6208)(M);}else{M.c.push(new RT.CallFrame(_6208,M.p));
return(M.modules["whalesong/web-world/event.rkt"].label)(M);}};


var _6202=function(M){if(--M.cbt<0){throw _6202;}
if((M.modules["whalesong/web-world/helpers.rkt"]!==void(0))!==false){return(_6203)(M);}else{return(_6205)(M);}};

var _6165=function(M){if(--M.cbt<0){throw _6165;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-5][6][0][M.e[M.e.length-5][6][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6167,M.p));
return((M.p).label)(M);};


var _6213=function(M){if(--M.cbt<0){throw _6213;}
M.e.length-=(M.a-1);
return(_6214)(M);};

var _6176=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-4][4][0][M.e[M.e.length-4][4][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][19];
M.e.push(void(0));
M.p=M.e[M.e.length-5][11][0][M.e[M.e.length-5][11][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6178,M.p));
return((M.p).label)(M);};

var _6201=function(M){if(--M.cbt<0){throw _6201;}
M.e.length-=(M.a-1);
return(_6202)(M);};

var _6198=function(M){if(--M.cbt<0){throw _6198;}
M.e.length-=(M.a-1);
return(_6199)(M);};

var _6147=function(M){if(M.v===false){return(_6144)(M);}else{M.v=RT.VOID;
return(_6145)(M);}};


var _6141=function(M){M.c.push(new RT.PromptFrame(_6143,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/web-world/main.rkt"]=new RT.ModuleRecord("main",_6196);
return(_6195)(M);};

var _6173=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["symbol?"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6145=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-4][9][0][M.e[M.e.length-4][9][1]];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-6][10][0][M.e[M.e.length-6][10][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.push(void(0));
M.p=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6163,M.p));
return((M.p).label)(M);};

var _6197=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_6199)(M);}else{M.c.push(new RT.CallFrame(_6199,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

_6199.mvr=_6198;
_6202.mvr=_6201;
_6205.mvr=_6204;
_6208.mvr=_6207;
_6210.mvr=_6209;
_6212.mvr=_6211;
_6214.mvr=_6213;
_6216.mvr=_6215;
_6143.mvr=_6142;
var sym3015=RT.makeSymbol("view-prepend-child");
var sym3014=RT.makeSymbol("view-bind-many*");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6217, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/main.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/main.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/web-world/impl.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/web-world/impl.rkt",
        function(M) {
            var afterName3047 = function() { var afterName3046 = function() { 
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/web-world/impl.rkt"];
             modrec.prefix=[void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0)];modrec.prefix.names=["->view9.17","big-bang1.1","initial-view2.3","on-location-change6.11","on-mock-location-change5.9","on-tick4.7","open-output-element8.15","remove-view-attr33.65","stop-when3.5","to-draw7.13","update-view-attr32.63","update-view-css35.69","update-view-form-value38.75","update-view-text26.51","view->xexp45.89","view-append-child39.77","view-attr30.59","view-backward24.47","view-backward?23.45","view-bind27.53","view-css34.67","view-down20.39","view-down?19.37","view-focus12.23","view-focus?11.21","view-form-value37.73","view-forward22.43","view-forward?21.41","view-has-attr?31.61","view-hide29.57","view-id36.71","view-insert-left41.81","view-insert-right40.79","view-left14.27","view-left?13.25","view-remove42.83","view-right16.31","view-right?15.29","view-show28.55","view-text25.49","view-up18.35","view-up?17.33","view?10.19","xexp->dom44.87","xexp?43.85"];modrec.prefix.internalNames=["->view","big-bang","initial-view","on-location-change","on-mock-location-change","on-tick","open-output-element","remove-view-attr","stop-when","to-draw","update-view-attr","update-view-css","update-view-form-value","update-view-text","view->xexp","view-append-child","view-attr","view-backward","view-backward?","view-bind","view-css","view-down","view-down?","view-focus","view-focus?","view-form-value","view-forward","view-forward?","view-has-attr?","view-hide","view-id","view-insert-left","view-insert-right","view-left","view-left?","view-remove","view-right","view-right?","view-show","view-text","view-up","view-up?","view?","xexp->dom","xexp?"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){/*jslint vars: true, white: true, plusplus: true, maxerr: 50, indent: 4 */



// Offers functional views, traversals of the DOM and other tree-like structures.
// See Functional Pearl: The Zipper, by G\'erard Huet
// J. Functional Programming 7 (5): 549--554 Sepember 1997


var TreeCursor = (function() {
    "use strict";

    var TreeCursor = function(parent, node, prevs, nexts, openF, closeF, atomicF) {
        this.parent = parent; // Parent can be the top (undefined), or a TreeCursor
        this.node = node;
        this.prevs = prevs;
        this.nexts = nexts;

        // openF: node -> (arrayof node)
        this.openF = openF;

        // closeF: node (arrayof node) -> node
        // Given a node and its array of children, return a new node.
        this.closeF = closeF;

        // atomicF: node -> boolean
        // Produces true if the node should be treated atomically.
        this.atomicF = atomicF;
    };

    TreeCursor.prototype.isOnAtomicElement = function() {
        return this.atomicF(this.node);
    };

    TreeCursor.prototype.canDown = function() {
        return (!(this.atomicF(this.node)) &&
                this.openF(this.node).length !== 0);
    };

    TreeCursor.prototype.down = function() {
        if (this.atomicF(this.node)) {
            throw new Error("down of atomic element");
        }
        var opened = this.openF(this.node);
        if (opened.length === 0) {
            throw new Error("down of empty");
        }
        return new TreeCursor(this, 
                              opened[0],
                              [],
                              opened.slice(1),
                              this.openF, 
                              this.closeF,
                              this.atomicF);
    };


    TreeCursor.prototype.canUp = function() {
        return this.parent !== undefined;
    };

    TreeCursor.prototype.up = function() {
        var parent = this.parent;
        return new TreeCursor(parent.parent,
                              this.closeF(parent.node,
                                          this.prevs.concat([this.node]).concat(this.nexts)),
                              parent.prevs,
                              parent.nexts,
                              this.openF,
                              this.closeF,
                              this.atomicF);
    };

    TreeCursor.prototype.canLeft = function() { return this.prevs.length !== 0; };

    TreeCursor.prototype.left = function() {
        if (this.prevs.length === 0) { throw new Error("left of first"); }
        return new TreeCursor(this.parent,
                              this.prevs[this.prevs.length - 1],
                              this.prevs.slice(0, this.prevs.length - 1),
                              [this.node].concat(this.nexts),
                              this.openF,
                              this.closeF,
                              this.atomicF);
    };

    TreeCursor.prototype.canRight = function() { return this.nexts.length !== 0; };

    TreeCursor.prototype.right = function() {
        if (this.nexts.length === 0) { throw new Error("right of last"); }
        return new TreeCursor(this.parent,
                              this.nexts[0],
                              this.prevs.concat([this.node]),
                              this.nexts.slice(1),
                              this.openF, 
                              this.closeF,
                              this.atomicF);
    };
    
    TreeCursor.prototype.succ = function() {
        var n;
        if (this.canDown()) {
            return this.down();
        } else if (this.canRight()) {
            return this.right();
        } else {
            n = this;
            while (true) {
                n = n.up();
                if (n.canRight()) {
                    return n.right();
                }
            }
        }
    };
 
    TreeCursor.prototype.pred = function() {
        var n;
        if (this.canLeft()) {
            n = this.left();
            while (n.canDown()) {
                n = n.down();
                while (n.canRight()) {
                    n = n.right();
                }
            }
            return n;
        } else {
            return this.up();
        }
    };

    TreeCursor.prototype.canPred = function() {
        return this.canLeft() || this.canUp();
    };

    TreeCursor.prototype.canSucc = function() {
        var n;
        if (this.canDown()) {
            return true;
        } else if (this.canRight()) {
            return true;
        } else {
            n = this;
            while (true) {
                if (! n.canUp()) { return false; }
                n = n.up();
                if (n.canRight()) {
                    return true;
                }
            }
        }
    };

    TreeCursor.prototype.top = function() {
        var n = this;
        while (n.canUp()) { n = n.up(); }
        return n;
    };


    //////////////////////////////////////////////////////////////////////


    TreeCursor.prototype.replaceNode = function(n) {
        return new TreeCursor(this.parent,
                              n,
                              this.prevs,
                              this.nexts,
                              this.openF,
                              this.closeF,
                              this.atomicF);
    };

    TreeCursor.prototype.insertRight = function(n) {
        return new TreeCursor(this.parent,
                              n,
                              this.prevs.concat([this.node]),
                              this.nexts,
                              this.openF,
                              this.closeF,
                              this.atomicF);
    };

    TreeCursor.prototype.insertLeft = function(n) {
        return new TreeCursor(this.parent,
                              n,
                              this.prevs,
                              [this.node].concat(this.nexts),
                              this.openF,
                              this.closeF,
                              this.atomicF);
    };

    TreeCursor.prototype.insertDown = function(n) {
        if (this.atomicF(this.node)) {
            throw new Error("down of atomic element");
        }
        return new TreeCursor(this,
                              n,
                              [],
                              this.openF(this.node),
                              this.openF,
                              this.closeF,
                              this.atomicF);
    };

    TreeCursor.prototype.deleteNode = function() {
        var parent;
        if (this.nexts.length !== 0) {
            return new TreeCursor(this.parent,
                                  this.nexts[0],
                                  this.prevs,
                                  this.nexts.slice(1),
                                  this.openF,
                                  this.closeF,
                                  this.atomicF);
        } else if (this.prevs.length !== 0) {
            return new TreeCursor(this.parent,
                                  this.prevs[this.prevs.length - 1],
                                  this.prevs.slice(0, this.prevs.length - 1),
                                  this.nexts,
                                  this.openF,
                                  this.closeF,
                                  this.atomicF);
        } else {
            parent = this.parent;
            return new TreeCursor(parent.parent,
                                  this.closeF(parent.node, []),
                                  parent.prevs,
                                  parent.nexts,
                                  this.openF,
                                  this.closeF,
                                  this.atomicF);
        }
    };






    //////////////////////////////////////////////////////////////////////



    TreeCursor.adaptTreeCursor = function(node, openF, closeF, atomicF) {
        return new TreeCursor(undefined,
                              node,
                              [],
                              [],
                              openF,
                              closeF,
                              atomicF);
    };


    TreeCursor.arrayToCursor = function(anArray) {
        var arrayOpenF = function(n) { 
            if (n instanceof Array) { 
                return n;
            } else {
                return [];
            }
        };
        var arrayCloseF = function(n, children) { 
            if (n instanceof Array) {
                return children;
            } else {
                return n;
            }
        };

        var arrayAtomicF = function(n) {
            return !(n instanceof Array);
        };
        return TreeCursor.adaptTreeCursor(anArray,
                                          arrayOpenF,
                                          arrayCloseF,
                                          arrayAtomicF);
    };


    TreeCursor.domToCursor = function(dom) {
        var domOpenF = 
            // To go down, just take the children.
            function(n) { 
                return [].slice.call(n.childNodes, 0);
            };
        var domCloseF = 
            // To go back up, take the node, do a shallow cloning, and replace the children.
            function(node, children) { 
                var i;
                var newNode = node.cloneNode(false);
                for (i = 0; i < children.length; i++) {
                    newNode.appendChild(children[i].cloneNode(true));
                }
                return newNode; 
            };
        var domAtomicF =
            function(node) {
                return node.nodeType !== 1;
            };
        return TreeCursor.adaptTreeCursor(dom.cloneNode(true),
                                          domOpenF,
                                          domCloseF,
                                          domAtomicF);
    };


    return TreeCursor;
}());
/*jslint browser: true, unparam: true, vars: true, white: true, plusplus: true, maxerr: 50, indent: 4, forin: true */
/*global plt,MACHINE,$,EXPORTS,TreeCursor*/
(function() {

    "use strict";

    var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;
    var makeClosure = plt.baselib.functions.makeClosure;
    var finalizeClosureCall = plt.baselib.functions.finalizeClosureCall;
    var PAUSE = plt.runtime.PAUSE;
    var isString = plt.baselib.strings.isString;
    var isSymbol = plt.baselib.symbols.isSymbol;
    var isList = plt.baselib.lists.isList;
    var isEmpty = plt.baselib.lists.isEmpty;
    var listLength = plt.baselib.lists.length;
    var makeList = plt.baselib.lists.makeList;
    var makePair = plt.baselib.lists.makePair;
    var makeSymbol = plt.baselib.symbols.makeSymbol;
    var isArityMatching = plt.baselib.arity.isArityMatching;
    var makeArityMismatchError = plt.baselib.exceptions.makeArityMismatchError;


    // EventHandler and the other classes here will be defined below.
    // We're just trying to keep jslint happy.
    var EventHandler, DomEventSource;



    // FIXME: as soon as we get real parameters, use parameters
    // instead.  Global: defines the currently running big bang.
    // Parameterized around the call to bigBang.
    var currentBigBangRecord;



    var resourceStructType = 
        MACHINE.modules['whalesong/resource/structs.rkt'].getNamespace().get('struct:resource');

    var eventStructType = 
        MACHINE.modules['whalesong/web-world/event.rkt'].getNamespace().get('struct:event');




    // Returns true if it is a DOM element.
    // Comes from:
    // http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object
    var isElement = function(o){
        return (
            typeof HTMLElement === "object" ? o instanceof HTMLElement : //DOM2
            o && typeof o === "object" && o.nodeType === 1 && typeof o.nodeName==="string"
        );
    };

    var shallowCloneNode = function(node) {
        var result = node.cloneNode(false);
        var i;
        // copy over the attributes as well
        if (node.attributes) {
            for (i = 0; i < node.attributes.length; i++) {
                $(result).attr(node.attributes[i].name,
                               node.attributes[i].value);
            }
        }
        $(result).data($(node).data());
        return result;
    };


    // Deeply clones a dom node.  
    //
    // Note: we have to do a small hack to propagate the values of
    // select forms.  See: https://github.com/dyoo/whalesong/issues/91
    var deepClone = function(dom) {
        var theClone = $(dom).clone(true).get(0);
        var sourceSelects = $(dom).find("select");
        var destSelects = $(theClone).find("select");
        var i;
        for (i = 0; i < sourceSelects.length; ++i) {
            $(destSelects[i]).val($(sourceSelects[i]).val());
        }
        return theClone;
    };


    
    // CPS'd version of for-each, used on JavaScript arrays.
    //
    // Take care: elts can't be too large or else we'll stack
    // overflow.
    var forEachK = function(f, elts, k) {
        var loop = function(i) {
            if (i === elts.length) {
                return k();
            } else {
                return f(elts[i], function() { loop(i+1); });
            }
        };
        return loop(0);
    };



    //////////////////////////////////////////////////////////////////////
    

    // domNodeToArrayTree: dom -> dom-tree
    // Given a native dom node, produces the appropriate array tree representation
    var domNodeToArrayTree = function(domNode) {
        var result = [domNode];
        var c;
        for (c = domNode.firstChild; c !== null; c = c.nextSibling) {
	    result.push(domNodeToArrayTree(c));
        }
        return result;
    };


    var arrayTreeToDomNode = function(tree) {
        var result = shallowCloneNode(tree[0]);
        var i;
        for (i = 1; i < tree.length; i++) {
            result.appendChild(arrayTreeToDomNode(tree[i]));
        }
        return result;
    };


    var domToArrayTreeCursor = function(dom) {
        var domOpenF = 
            // To go down, just take the children.
            function(tree) { 
                return tree.slice(1);
            };
        var domCloseF = 
            // To go back up, take the tree and reconstruct it.
            function(tree, children) { 
                return [tree[0]].concat(children);
            };
        var domAtomicF =
            function(tree) {
                return tree[0].nodeType !== 1;
            };
        return TreeCursor.adaptTreeCursor(domNodeToArrayTree(deepClone(dom)),
                                          domOpenF,
                                          domCloseF,
                                          domAtomicF);
    };

    var treeText = function(tree) {
        var text = [];
        var visit = function(tree) {
            var i;
            if (tree[0].nodeType === 3) {
                text.push(tree[0].nodeValue);
            }
            for (i = 1; i < tree.length; i++) {
                visit(tree[i]);
            }
        };
        visit(tree);
        return text.join('');
    };

    //////////////////////////////////////////////////////////////////////

    

    // For the moment, we only support selection by id.
    var selectorMatches = function(selector, tree) {
        if (tree[0].nodeType === 1) {
            return tree[0].getAttribute('id') === selector;
        } else {
            return false;
        }
    };

    var EMPTY_PENDING_ACTIONS = plt.baselib.lists.EMPTY;


    //////////////////////////////////////////////////////////////////////
    // A MockView provides a functional interface to the DOM.  It
    // includes a cursor to the currently focused dom, the pending
    // actions to perform on the actual view, and a nonce to detect
    // freshness of the MockView.
    var MockView = function(lazyCursor, cursor, pendingActions, eventHandlers, nonce) {
        this.lazyCursor = lazyCursor;
        this.cursor = cursor;

        // (listof (view -> void))
        this.pendingActions = pendingActions;

        this.eventHandlers = eventHandlers;
        this.nonce = nonce;
    };

    var isMockView = plt.baselib.makeClassPredicate(MockView);

    MockView.prototype.getCursor = function() {
        if (this.cursor === void(0)) {
            this.cursor = this.lazyCursor();
        }
        return this.cursor;
    };

    MockView.prototype.toString = function() {
        return "<#view>";
    };

    MockView.prototype.getPendingActions = function() {
        return plt.baselib.lists.listToArray(this.pendingActions).reverse();
    };


    MockView.prototype.act = function(actionForCursor, actionForEventHandlers, actionForReal) {
        if (arguments.length !== 3) { throw new Error("act: insufficient arguments"); }
        return new MockView(undefined,
                            actionForCursor(this.getCursor()),
                            plt.baselib.lists.makePair(actionForReal, this.pendingActions),
                            actionForEventHandlers(this.eventHandlers),
                            this.nonce);
    };


    MockView.prototype.updateFocus = function(selector) {
        selector = selector.toString();
        return this.act(
            function(cursor) {
                var c = cursor.top();
                while (true) {
                    if (selectorMatches(selector, c.node)) {
                        return c;
                    }
                    if (c.canSucc()) {
                        c = c.succ();
                    } else {
                        throw new Error("unable to find " + selector);
                    }
                }
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                view.focus = document.getElementById(selector);
            }
        );
    };

    MockView.prototype.getText = function() {        
        var tree = this.getCursor().node;
        return treeText(tree);
    };

    MockView.prototype.updateText = function(text) {
        return this.act(
            function(cursor) {
                return cursor.replaceNode([cursor.node[0]]
                                          .concat([[document.createTextNode(text)]]));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                $(view.focus).text(text);
            }
        );
    };

    MockView.prototype.getAttr = function(name) {        
        return $(this.getCursor().node[0]).attr(name);
    };

    MockView.prototype.hasAttr = function(name) {        
        return $(this.getCursor().node[0]).attr(name) !== undefined;
    };


    MockView.prototype.updateAttr = function(name, value) {
        return this.act(
            function(cursor) {
                return cursor.replaceNode([$(shallowCloneNode(cursor.node[0]))
                                           .attr(name, value).get(0)]
                                          .concat(cursor.node.slice(1)));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                $(view.focus).attr(name, value);
            });
    };

    MockView.prototype.removeAttr = function(name) {
        return this.act(
            function(cursor) {
                return cursor.replaceNode([$(shallowCloneNode(cursor.node[0]))
                                           .removeAttr(name).get(0)]
                                          .concat(cursor.node.slice(1)));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                $(view.focus).removeAttr(name);
            });
    };






    MockView.prototype.getCss = function(name) {        
        return $(this.getCursor().node[0]).css(name);
    };


    MockView.prototype.updateCss = function(name, value) {
        return this.act(
            function(cursor) {
                return cursor.replaceNode([$(shallowCloneNode(cursor.node[0]))
                                           .css(name, value).get(0)]
                                          .concat(cursor.node.slice(1)));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                $(view.focus).css(name, value);
            });
    };



    MockView.prototype.getFormValue = function() {        
        return $(this.getCursor().node[0]).val();
    };

    MockView.prototype.updateFormValue = function(value) {        
        return this.act(
            function(cursor) {
                return cursor.replaceNode([$(shallowCloneNode(cursor.node[0]))
                                           .val(value).get(0)]
                                          .concat(cursor.node.slice(1)));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                $(view.focus).val(value);
            });
    };



    MockView.prototype.left = function() {
        return this.act(
            function(cursor) {
                return cursor.left();
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                view.focus = view.focus.previousSibling;
            });
    };

    MockView.prototype.right = function() {
        return this.act(
            function(cursor) {
                return cursor.right();
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                view.focus = view.focus.nextSibling;
            });
    };

    MockView.prototype.up = function() {
        return this.act(
            function(cursor) {
                return cursor.up();
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                view.focus = view.focus.parentNode;
            });
   };

    MockView.prototype.down = function() {
        return this.act(
            function(cursor) {
                return cursor.down();
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                view.focus = view.focus.firstChild;
            });
    };


    MockView.prototype.forward = function() {
        return this.act(
            function(cursor) {
                return cursor.succ();
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                if (view.focus.firstChild) {
                    view.focus = view.focus.firstChild;
                } else if (view.focus.nextSibling) {
                    view.focus = view.focus.nextSibling;
                } else {
                    while (view.focus !== view.top) {
                        view.focus = view.focus.parentNode;
                        if (view.focus.nextSibling) {
                            view.focus = view.focus.nextSibling;
                            return;
                        }
                    }
                }
            });
};

    MockView.prototype.backward = function() {
        return this.act(
            function(cursor) {
                return cursor.pred();
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                if (view.focus.previousSibling) {
                    view.focus = view.focus.previousSibling;
                    while (view.focus.children().length > 0) {
                        view.focus = view.focus.firstChild;
                        while(view.focus.nextSibling) { view.focus = view.focus.nextSibling; }
                    }
                } else {
                    view.focus = view.focus.parentNode;
                }

            });
    };







    
    var mockViewIdGensym = 0;

    MockView.prototype.bind = function(name, worldF) {
        var that = this;

        // HACK: every node that is bound needs to have an id.  We
        // enforce this by mutating the node.
        if (! this.getCursor().node[0].id) {
            this.getCursor().node[0].id = ("__webWorldId_" + mockViewIdGensym++);
        }   
        return this.act(
            function(cursor) {
                return cursor;
            },
            function(eventHandlers) {
                var handler = new EventHandler(name,
                                               new DomEventSource(
                                                   name,
                                                   that.getCursor().node[0].id),
                                               worldF);
                var newHandlers = eventHandlers.concat([handler]);
                return newHandlers;
            },
            function(view) {
                // HACK: every node that is bound needs to have an id.  We
                // enforce this by mutating the node.
                if (! view.focus.id) {
                    view.focus.id = ("__webWorldId_" + mockViewIdGensym++);
                }
                var handler = new EventHandler(name, 
                                               new DomEventSource(
                                                   name, 
                                                   view.focus.id),
                                               worldF);
                view.addEventHandler(handler);
                currentBigBangRecord.startEventHandler(handler, 
                                                       function() {});
            });
    };

    MockView.prototype.show = function() {
        return this.act(
            function(cursor) {
                return cursor.replaceNode([$(shallowCloneNode(cursor.node[0]))
                                           .show().get(0)]
                                          .concat(cursor.node.slice(1)));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                $(view.focus).show();
            }
        );
    };

    MockView.prototype.hide = function() {
        return this.act(
            function(cursor) {
                return cursor.replaceNode([$(shallowCloneNode(cursor.node[0]))
                                           .hide().get(0)]
                                          .concat(cursor.node.slice(1)));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                $(view.focus).hide();
            }
        );
    };


    MockView.prototype.remove = function() {
        return this.act(
            function(cursor) {
                return cursor.deleteNode();
            },
            function(eventHandlers) {
                return eventHandlers;
            },
            function(view) {
                var elt = view.focus;
                if (view.focus.nextSibling) {
                    view.focus = view.focus.nextSibling;
                } else if (view.focus.previousSibling) {
                    view.focus = view.focus.previousSibling;
                } else {
                    view.focus = view.focus.parentNode;
                }
                $(elt).remove();
            });
    };


    MockView.prototype.appendChild = function(domNode) {
        return this.act(
            function(cursor) {
                if (cursor.canDown()) {
                    cursor = cursor.down();
                    while (cursor.canRight()) {
                        cursor = cursor.right();
                    }
                    return cursor.insertRight(domNodeToArrayTree(domNode));
                } else {
                    return cursor.insertDown(domNodeToArrayTree(domNode));
                }
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                var clone = deepClone(domNode);
                $(clone).appendTo($(view.focus));
                view.focus = $(clone).get(0);
            }
        );
    };

    MockView.prototype.insertRight = function(domNode) {
        return this.act(
            function(cursor) {
                return cursor.insertRight(domNodeToArrayTree(domNode));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                var clone = deepClone(domNode);
                clone.insertAfter($(view.focus));
                view.focus = clone.get(0);
            }
        );
    };

    MockView.prototype.insertLeft = function(domNode) {
        return this.act(
            function(cursor) {
                return cursor.insertLeft(domNodeToArrayTree(domNode));
            },
            function(eventHandlers) { return eventHandlers; },
            function(view) {
                var clone = deepClone(domNode);
                clone.insertBefore($(view.focus));
                view.focus = clone.get(0);
            }
        );
    };



    MockView.prototype.id = function() {
        return this.getCursor().node[0].id;
    };

    MockView.prototype.isUpMovementOk = function() {
        return this.getCursor().canUp();
    };

    MockView.prototype.isDownMovementOk = function() {
        return this.getCursor().canDown();
    };

    MockView.prototype.isLeftMovementOk = function() {
        return this.getCursor().canLeft();
    };

    MockView.prototype.isRightMovementOk = function() {
        return this.getCursor().canRight();
    };

    MockView.prototype.isForwardMovementOk = function() {
        return this.getCursor().canSucc();
    };

    MockView.prototype.isBackwardMovementOk = function() {
        return this.getCursor().canPred();
    };


    //////////////////////////////////////////////////////////////////////


    
    

    // A View represents a representation of the DOM tree.
    var View = function(top, eventHandlers) {
        // top: dom node
        this.top = top;
        // focus: dom node
        this.focus = top;
        this.eventHandlers = eventHandlers;
    };

    View.prototype.toString = function() { return "#<View>"; };


    var defaultToRender = function(){};
 
   View.prototype.initialRender = function(top) {
       $(top).empty();
       // Special case: if this.top is an html, we merge into the
       // existing page.
       if ($(this.top).children("title").length !== 0) {
           $(document.head).find('title').remove();
       }
       $(document.head).append($(this.top).children("title").clone(true));
       $(document.head).append($(this.top).children("link").clone(true));
       
       $(top).append($(this.top));

       // The snip here is meant to accomodate weirdness with canvas dom
       // elements.  cloning a canvas doesn't preserve how it draws.
       // However, we attach a toRender using jQuery's data(), which does
       // do the preservation we need.  On an initial render, we walk
       // through all the elements and toRender them.

       // It may be that this will deprecate the afterAttach stuff
       // that I'm using earlier.
       ($(this.top).data('toRender') || defaultToRender)();
       $('*', this.top).each(
           function(index, elt) {
               ($(elt).data('toRender') || defaultToRender).call(elt);
           });
   };


    View.prototype.addEventHandler = function(handler) {
        this.eventHandlers.push(handler);
    };

    // Return a list of the event sources from the view.
    // fixme: may need to apply the pending actions to get the real set.
    View.prototype.getEventHandlers = function() {
        return this.eventHandlers;
    };

    View.prototype.getMockAndResetFocus = function(nonce) {
        this.focus = this.top;
        var that = this;
        return new MockView(function() { return domToArrayTreeCursor($(that.top).get(0)); },
                            undefined,
                            EMPTY_PENDING_ACTIONS,
                            this.eventHandlers.slice(0),
                            nonce);
    };





    var isView = plt.baselib.makeClassPredicate(View);
    var isResource = resourceStructType.predicate;


    // var resourcePath = function(r) { return resourceStructType.accessor(r, 0); };
    // var resourceKey = function(r) { return resourceStructType.accessor(r, 1); };
    var resourceContent = function(r) { return resourceStructType.accessor(r, 2); };



    var rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;

    // We have to do some kludgery to support the android browser,
    // which does not properly parse <link ...>.
    var rlink = /<link\b[^\/>]* \/>(.*?)/gi;

    var parseStringAsHtml = function(str) {
        var div = document.createElement("div");
        // inject the contents of the document in, removing the scripts
	// to avoid any 'Permission Denied' errors in IE
        div.innerHTML = str.replace(rscript, "").replace(rlink, "");
        var linkMatches = str.match(rlink);
        if (linkMatches) {
            for (var i = 0; i < linkMatches.length; i++) {
                $(div).append($(linkMatches[i]));
            }
        }
        return $(div);
    };

 
    // coerseToView: (U resource View) -> View
    // Coerse a value into a view.
    var coerseToView = function(x, onSuccess, onFail) {
        var dom;
        if (isView(x)) { 
            return onSuccess(x); 
        } else  if (isResource(x)) {
            try {
                dom = parseStringAsHtml(resourceContent(x).toString())
                    .css("margin", "0px")
                    .css("padding", "0px")
                    .css("border", "0px");
                dom.children("body").css("margin", "0px");
            } catch (exn1) {
                return onFail(exn1);
            }
            return onSuccess(new View(dom.get(0), []));
        } else if (isMockView(x)) {
            return onSuccess(new View(arrayTreeToDomNode(x.getCursor().top().node),
                                      x.eventHandlers.slice(0)));
        } else {
            try {
                dom = plt.baselib.format.toDomNode(x);
            } catch (exn2) {
                return onFail(exn2);
            }
            return onSuccess(new View(dom, []));
        }
    };

    var coerseToMockView = function(x, onSuccess, onFail) {
        var dom;
        if (isMockView(x)) { 
            return onSuccess(x); 
        } else  if (isResource(x)) {
            try {
                dom = parseStringAsHtml(resourceContent(x).toString())
                    .css("margin", "0px")
                    .css("padding", "0px")
                    .css("border", "0px");
                dom.children("body").css("margin", "0px");
            } catch (exn1) {
                return onFail(exn1);
            }
            return onSuccess(new MockView(undefined,
                                          domToArrayTreeCursor(dom.get(0)),
                                          EMPTY_PENDING_ACTIONS,
                                          [], 
                                          undefined));
        } else {
            try {
                dom = plt.baselib.format.toDomNode(x);
            } catch (exn2) {
                return onFail(exn2);
            }
            return onSuccess(new MockView(undefined,
                                          domToArrayTreeCursor(dom), 
                                          EMPTY_PENDING_ACTIONS, 
                                          [],
                                          undefined));
        }
    };


    var isDomNode = function(x) {
        return (x.nodeType === 1);
    };


    var coerseToDomNode = function(x, onSuccess, onFail) {
        var dom;
        if (isDomNode(x)) { 
            return onSuccess(x); 
        } else  if (isResource(x)) {
            try {
                dom = parseStringAsHtml(resourceContent(x).toString())
                    .css("margin", "0px")
                    .css("padding", "0px")
                    .css("border", "0px");
            } catch (exn1) {
                return onFail(exn1);
            }
            return onSuccess(dom.get(0));
        } else if (isMockView(x)) {
            return onSuccess(arrayTreeToDomNode(x.getCursor().top().node));
        } else {
            try {
                dom = plt.baselib.format.toDomNode(x);
            } catch (exn2) {
                return onFail(exn2);
            }
            return onSuccess(dom);
        }
    };








    //////////////////////////////////////////////////////////////////////
    //
    // The inputs into a big bang are WorldHandlers, which configure the big
    // bang in terms of the initial view, the inputs, event sources, etc.
    //

    var WorldHandler = function() {};
    var isWorldHandler = plt.baselib.makeClassPredicate(WorldHandler);


    var InitialViewHandler = function(view) {
        WorldHandler.call(this);
        // view: View
        this.view = view;
    };

    InitialViewHandler.prototype = plt.baselib.heir(WorldHandler.prototype);
    InitialViewHandler.prototype.toString = function() { return "#<initial-view>"; };
    var isInitialViewHandler = plt.baselib.makeClassPredicate(InitialViewHandler);


    var StopWhenHandler = function(stopWhen) {
        WorldHandler.call(this);
        // stopWhen: Racket procedure (World -> boolean)
        this.stopWhen = stopWhen;
    };

    StopWhenHandler.prototype = plt.baselib.heir(WorldHandler.prototype);
    StopWhenHandler.prototype.toString = function() { return "#<stop-when>"; };
    var isStopWhenHandler = plt.baselib.makeClassPredicate(StopWhenHandler);



    var ToDrawHandler = function(toDraw) {
        WorldHandler.call(this);
        // toDraw: Racket procedure (World View -> View)
        this.toDraw = toDraw;
    };

    ToDrawHandler.prototype = plt.baselib.heir(WorldHandler.prototype);
    ToDrawHandler.prototype.toString = function() { return "#<to-draw>"; };
    var isToDrawHandler = plt.baselib.makeClassPredicate(ToDrawHandler);





    // An EventHandler combines a EventSource with a racketWorldCallback.
    EventHandler = function(name, eventSource, racketWorldCallback) {
        WorldHandler.call(this);
        this.name = name;
        this.eventSource = eventSource;
        this.racketWorldCallback = racketWorldCallback;
    };
    EventHandler.prototype = plt.baselib.heir(WorldHandler.prototype);
    EventHandler.prototype.toString = function() { return "#<" + this.name + ">"; };
    var isEventHandler = plt.baselib.makeClassPredicate(EventHandler);



    var WithOutputToHandler = function(outputPort) {
        this.outputPort = outputPort;
    };
    WithOutputToHandler.prototype = plt.baselib.heir(WorldHandler.prototype);
    var isWithOutputToHandler = plt.baselib.makeClassPredicate(WithOutputToHandler);


    //////////////////////////////////////////////////////////////////////


    var find = function(handlers, pred) {
        var i;
        for (i = 0; i < handlers.length; i++) {
            if (pred(handlers[i])) {
                return handlers[i];
            }
        }
        return undefined;
    };

    var filter = function(handlers, pred) {
        var i, lst = [];
        for (i = 0; i < handlers.length; i++) {
            if (pred(handlers[i])) {
                lst.push(handlers[i]);
            }
        }
        return lst;
    };




    // convert an object to an event.
    // At the moment, we only copy over those values which are numbers or strings.
    var objectToEvent = function(obj) {
        var key, val;
        var result = makeList();
        // Note: for some reason, jslint is not satisfied that I check
        // that the object has a hasOwnProperty before I use it.  I've intentionally
        // turned off jslint's forin check because it's breaking here:
        for (key in obj) {
            if (obj.hasOwnProperty && obj.hasOwnProperty(key)) {
                val = obj[key];
                if (typeof(val) === 'number') {
                    result = makePair(makeList(makeSymbol(key),
                                               plt.baselib.numbers.makeFloat(val)),
                                      result);
                } else if (typeof(val) === 'string') {
                    result = makePair(makeList(makeSymbol(key), val),
                                      result);
                }                         
            }
        }
        return eventStructType.constructor([result]);
    };





    /* Event sources.
       
       An event source is a way to send input to a web-world program.

       An event source may be started or stopped.


       Pause and Unpause are semantically meant to be cheaper than start, stop, so
       that's why they're a part of this API.
    */

    var EventSource = function() {};
    EventSource.prototype.onStart = function(fireEvent, internalCall, k) {
        k();
    };

    EventSource.prototype.onStop = function(k) {
        k();
    };

    

    // TickEventSource sends tick events.
    var TickEventSource = function(delay) {
        this.delay = delay; // delay in milliseconds.

        this.id = undefined;
        // either undefined, or an integer representing the
        // id to cancel a timeout.
    };

    TickEventSource.prototype = plt.baselib.heir(EventSource.prototype);

    TickEventSource.prototype.onStart = function(fireEvent, internalCall, k) {
        if (this.id === undefined) {
            this.id = setInterval(
                function(evt) {
                    fireEvent(undefined,
                              objectToEvent(evt));
                },
                this.delay);
        }
        k();
    };

    TickEventSource.prototype.onStop = function(k) {
        if (this.id !== undefined) {
            clearInterval(this.id);
            this.id = undefined;
        }
        k();
    };






    var MockLocationEventSource = function() {
        this.elt = undefined;
    };
    MockLocationEventSource.prototype = plt.baselib.heir(EventSource.prototype);
    MockLocationEventSource.prototype.onStart = function(fireEvent, internalCall, k) {
        if (this.elt === undefined) {
            var mockLocationSetter = document.createElement("div");
	    
            var latInput = document.createElement("input");
            latInput.type = "text";
	    
            var latOutput = document.createElement("input");
            latOutput.type = "text";
            
            var submitButton = document.createElement("input");
            submitButton.type = "button";
            submitButton.value = "send lat/lng";
            submitButton.onclick = function() {
                fireEvent(undefined,
                          objectToEvent({ latitude: Number(latInput.value),
                                          longitude: Number(latOutput.value)}));
                return false;
            };
	    
            mockLocationSetter.style.border = "1pt solid black";
            mockLocationSetter.appendChild(
                document.createTextNode("mock location setter"));
            mockLocationSetter.appendChild(latInput);
            mockLocationSetter.appendChild(latOutput);
            mockLocationSetter.appendChild(submitButton);
            document.body.appendChild(mockLocationSetter);

            this.elt = mockLocationSetter;
        }
        k();
    };

    MockLocationEventSource.prototype.onStop = function(k) {
        if (this.elt !== undefined) { 
            document.body.removeChild(this.elt);
            this.elt = undefined;
        }
        k();
    };

    



    // This version really does use the geolocation object.
    var LocationEventSource = function() {
        this.id = undefined;
    };

    LocationEventSource.prototype = plt.baselib.heir(EventSource.prototype);

    LocationEventSource.prototype.onStart = function(fireEvent, internalCall, k) {
        var that = this;
        if (this.id === undefined) {
            var success = function(position) {
                if (position.hasOwnProperty &&
                    position.hasOwnProperty('coords') &&
                    position.coords.hasOwnProperty &&
                    position.coords.hasOwnProperty('latitude') &&
                    position.coords.hasOwnProperty('longitude')) {
                    fireEvent(undefined,
                              objectToEvent({ 'latitude' : Number(position.coords.latitude),
                                              'longitude' : Number(position.coords.longitude) }));
                }
            };
            var fail = function(err) {
                // Quiet failure
            };
            // If we fail while trying to watch the position
            // using high accuracy, switch over to the coarse one.
            var onFailSwitchoverToCoerse = function() {
                navigator.geolocation.clearWatch(that.id);
                that.id = navigator.geolocation.watchPosition(
                    success,
                    fail);
            };
            if (!!(navigator.geolocation)) {
                navigator.geolocation.getCurrentPosition(success, fail);
                this.id = navigator.geolocation.watchPosition(
                    success,
                    onFailSwitchoverToCoerse,
                    { enableHighAccuracy : true,
                      // Try every ten seconds
                      maximumAge : 10000}); 
            }
        }
        k();
    };
    
    LocationEventSource.prototype.onStop = function(k) {
        if (this.id !== undefined) { 
            navigator.geolocation.clearWatch(this.id);
            this.id = undefined;
        }
        k();
    };






    // DomElementSource: string (U DOM string) -> EventSource
    // A DomEventSource allows DOM elements to send events over to
    // web-world.
    DomEventSource = function(type, elementOrId) {
        this.type = type;
        this.elementOrId = elementOrId;
        this.handler = undefined;
    };

    DomEventSource.prototype = plt.baselib.heir(EventSource.prototype);

    DomEventSource.prototype.onStart = function(fireEvent, internalCall, k) {
        var element = this.elementOrId;
        if (typeof(this.elementOrId) === 'string') {
            element = document.getElementById(this.elementOrId);
        }

        if (! element) { return; }
        if (this.handler !== undefined) {
            $(element).unbind(this.type, this.handler);
            this.handler = undefined;
        }

        this.handler = function(evt) {
            if (element !== undefined) {
                fireEvent(element, objectToEvent(evt));
            }
        };
        $(element).bind(this.type, this.handler);
        k();
    };


    DomEventSource.prototype.onStop = function(k) {
        var element = this.elementOrId;
        if (typeof(this.elementOrId) === 'string') {
            element = document.getElementById(this.elementOrId);
        }

        if (this.handler !== undefined) {
            if (element !== undefined) {
                $(element).unbind(this.type, this.handler);
            }
            this.handler = undefined;
        }
        k();
    };







    var EventQueue = function() {
        this.elts = [];
    };
    EventQueue.prototype.queue = function(elt) {
        this.elts.push(elt);
    };

    EventQueue.prototype.dequeue = function() {
        return this.elts.shift();
    };

    EventQueue.prototype.isEmpty = function() {
        return this.elts.length === 0;
    };


    var EventQueueElement = function(who, handler, data) {
        this.who = who;
        this.handler = handler;
        this.data = data;
    };



    var defaultToDraw = function(MACHINE, world, view, success, fail) {
        coerseToMockView(world,
                         success,
                         fail);
    };


    var defaultStopWhen = function(MACHINE, world, view, success, fail) {
        return success(false);
    };


    // bigBang.
    var bigBang = function(MACHINE, world, handlers) {
        var oldCurrentBigBangRecord = currentBigBangRecord;

        var running = true;
        var dispatchingEvents = false;

        var top = $("<div/>").get(0);
        var view = (find(handlers, isInitialViewHandler) ||
                    { view : new View($('<div/>').get(0), []) }).view;
        var stopWhen = (find(handlers, isStopWhenHandler) ||
                        { stopWhen: defaultStopWhen }).stopWhen;
        var toDraw = (find(handlers, isToDrawHandler) || {toDraw : defaultToDraw} ).toDraw;

        var oldOutputPort = MACHINE.params.currentOutputPort;

        var eventQueue = new EventQueue();
        var eventHandlers = filter(handlers, isEventHandler).concat(view.getEventHandlers());
        view.eventHandlers = eventHandlers;

        MACHINE.params.currentDisplayer(MACHINE, top);
        
        // From this point forward, redirect standard output if requested.
        if (find(handlers, isWithOutputToHandler)) {
            MACHINE.params.currentOutputPort = find(handlers, isWithOutputToHandler).outputPort;
        }

        PAUSE(function(restart, internalCall) {
            var onCleanRestart, onMessyRestart, 
            startEventHandlers, stopEventHandlers, 
            startEventHandler, stopEventHandler,
            dispatchEventsInQueue, refreshView;

            onCleanRestart = function() {
                running = false;
                stopEventHandlers(
                    function() {
                        restart(function(MACHINE) {
                            MACHINE.params.currentOutputPort = oldOutputPort;
                            currentBigBangRecord = oldCurrentBigBangRecord;
                            finalizeClosureCall(MACHINE, world);
                        });
                    });
            };

            onMessyRestart = function(exn) {
                running = false;
                stopEventHandlers(
                    function() {
                        restart(function(MACHINE) {
                            currentBigBangRecord = oldCurrentBigBangRecord;
                            MACHINE.params.currentOutputPort = oldOutputPort;
                            plt.baselib.exceptions.raise(MACHINE, exn);
                        });
                    });
            };

            startEventHandlers = function(k) {
                forEachK(startEventHandler, eventHandlers, k);
            };

            stopEventHandlers = function(k) {
                forEachK(stopEventHandler, eventHandlers, k);
            };

            startEventHandler = function(handler, k) {
                var fireEvent = function(who) {
                    if (! running) { return; }
                    var args = [].slice.call(arguments, 1);
                    eventQueue.queue(new EventQueueElement(who, handler, args));
                    if (! dispatchingEvents) {
                        dispatchingEvents = true;
                        dispatchEventsInQueue(
                            function() {
                                refreshView(function() {}, onMessyRestart);
                            }, 
                            onMessyRestart);
                    }
                };
                handler.eventSource.onStart(fireEvent, internalCall, k);
            };

            stopEventHandler = function(handler, k) {
                handler.eventSource.onStop(k);
            };


            dispatchEventsInQueue = function(success, fail) {
                // Apply all the events on the queue, call toDraw, and then stop.
                // If the world ever satisfies stopWhen, stop immediately and quit.
                var nextEvent;
                var args;
                var racketWorldCallback;
                var mockView;
                dispatchingEvents = true;
                if(! eventQueue.isEmpty() ) {
                    // Set up the proxy object so we can do what appear to be functional
                    // queries.
                    mockView = view.getMockAndResetFocus();
                    nextEvent = eventQueue.dequeue();
                    if (nextEvent.who !== undefined) {
                        mockView = mockView.updateFocus(nextEvent.who.id);
                    }

                    racketWorldCallback = nextEvent.handler.racketWorldCallback;
                    args = nextEvent.data.slice(0);
                    var onGoodWorldUpdate = 
                        function (newWorld) {
                            world = newWorld;
                            stopWhen(internalCall,
                                     world,
                                     mockView,
                                     function(shouldStop) {
                                         if (shouldStop) {
                                             refreshView(onCleanRestart,
                                                         fail);
                                         } else {
                                             dispatchEventsInQueue(success, fail);
                                         }
                                     },
                                     fail);
                        };
                    if (isArityMatching(racketWorldCallback.racketArity, 1)) {
                        racketWorldCallback(internalCall, 
                                            world,
                                            onGoodWorldUpdate,
                                            fail);
                    } else if (isArityMatching(racketWorldCallback.racketArity, 2)) {
                        racketWorldCallback(internalCall, 
                                            world,
                                            mockView,
                                            onGoodWorldUpdate,
                                            fail);
                    } else { 
                        args = ([internalCall, world, mockView]
                                .concat(args)
                                .concat([onGoodWorldUpdate, fail]));
                        racketWorldCallback.apply(null, args);
                    }
                } else {
                    dispatchingEvents = false;
                    success();
                }
            };

            refreshView = function(success, failure) {
                // Note: we create a random nonce, and watch to see if the MockView we get back
                // from the user came from here.  If not, we have no hope to do a nice, efficient
                // update, and have to do it from scratch.
                var nonce = Math.random();
                var originalMockView = view.getMockAndResetFocus(nonce);
                toDraw(internalCall, 
                       world,
                       originalMockView,
                       function(newMockView) {
                           if (newMockView.nonce === nonce) {
                               var i;
                               var actions = newMockView.getPendingActions();
                               for (i = 0; i < actions.length; i++) {
                                   actions[i](view);
                               }
                               success();
                           } else {
                               view.top = arrayTreeToDomNode(newMockView.getCursor().top().node);
                               view.initialRender(top);
                               var oldEventHandlers = eventHandlers;
                               eventHandlers = newMockView.eventHandlers.slice(0);
                               startEventHandlers(function() {
                                   eventHandlers = eventHandlers.concat(oldEventHandlers);
                                   view.eventHandlers = eventHandlers;
                                   success();
                               });
                           }
                       },
                       function(err) {
                           failure(err);
                       });
            };

            currentBigBangRecord = { stop : onCleanRestart,
                                     stopWithExn : onMessyRestart,
                                     startEventHandler : startEventHandler,
                                     stopEventHandler : stopEventHandler };
            view.initialRender(top);
            startEventHandlers(
                function() {
                    refreshView(function() {}, onMessyRestart);
                });

        });
    };

    var wrapFunction = function(proc) {
        var f = function(internalCall) {
            var success = arguments[arguments.length - 2];
            var fail = arguments[arguments.length - 1];
            var args = [].slice.call(arguments, 1, arguments.length - 2);
            return internalCall.apply(null,
                                      [proc,
                                       success,
                                       fail].concat(args));
        };
        f.displayName = proc.displayName;
        f.racketArity = proc.racketArity;
        return f;
    };




    var DomElementOutputPort = function(id) {
        this.id = id;
    };

    DomElementOutputPort.prototype = plt.baselib.heir(plt.baselib.ports.OutputPort.prototype);

    DomElementOutputPort.prototype.writeDomNode = function (MACHINE, v) {
        $(document.getElementById(this.id)).append(v);
        $(v).trigger({type : 'afterAttach'});
        $('*', v).trigger({type : 'afterAttach'});
    };




    var isAttributeList = function(x) {
        var children;
        if (isList(x) && (! isEmpty(x))){
            if (isSymbol(x.first) && x.first.val === '@') {
                children = x.rest;
                while(! isEmpty(children)) {
                    if (isList(children.first) &&
                        listLength(children.first) === 2 &&
                        isSymbol(children.first.first) &&
                        isString(children.first.rest.first)) {

                        children = children.rest;

                    } else {
                        return false;
                    }
                }
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    };



    // We keep a cache of valid element names.  The only keys here are
    // those elements whose names are valid.  We don't record invalid
    // ones, since there's an unbound number of those.
    var validElementNames = {};  
    var isValidElementName = function(name) {
        if (! (validElementNames.hasOwnProperty(name))) {
            // Permissive parsing: see that the name is a valid
            // element type.
            // Is there a nicer way to do this besides exception
            // handling?
            try {
                document.createElement(name);
                validElementNames[name] = true;
            } catch(e) {
                return false;
            }
        }
        return true;
    };


    // An xexp is one of the following:
    // xexp :== (name (@ (key value) ...) xexp ...)
    //      :== (name xexp ...)
    //      :== string
    var isXexp = function(x) {
        var children;
        if (isElement(x)) {
            return true;
        }
        if (isString(x)) { 
            return true; 
        }
        if (isSymbol(x)) {
            return true;
        }
        if (isList(x) && !(isEmpty(x))) {
            if (isSymbol(x.first)) {
                if (! isValidElementName(x.first.val)) {
                    return false;
                }

                children = x.rest;
                // Check the rest of the children.  The first is special.
                if (isEmpty(children)) {
                    return true;
                }
                if (isAttributeList(children.first)) {
                    children = children.rest;
                }
                while (! (isEmpty(children))) {
                    if (! isXexp(children.first)) {
                        return false;
                    }
                    children = children.rest;
                }
                return true;
            } else {
                return false;
            }
        }
        return false;
    };




    var assignAttributes = function(node, x) {
        var children, key, value;
        if (isList(x) && (! isEmpty(x))){
            if (isSymbol(x.first) && x.first.val === '@') {
                children = x.rest;
                while(! isEmpty(children)) {
                    if (isList(children.first) &&
                        listLength(children.first) === 2 &&
                        isSymbol(children.first.first) &&
                        isString(children.first.rest.first)) {
                        
                        key = children.first.first;
                        value = children.first.rest.first;
                        $(node).attr(key.val, value.toString());

                        children = children.rest;

                    } else {
                        return;
                    }
                }
                return;
            } else {
                return;
            }
        } else {
            return;
        }
    };
    var xexpToDom = function(x) {
        var children;
        var name;
        var node;
        if (isElement(x)) {
            return x;
        }
        if (isString(x)) { 
            return document.createTextNode(x); 
        }
        if (isSymbol(x)) {
            return $("<div>&" + x.val + ";</div>").get(0).firstChild;
        }
        if (isList(x) && !(isEmpty(x))) {
            if (isSymbol(x.first)) {
                name = x.first.val;
                node = document.createElement(name);
                children = x.rest;
                // Check the rest of the children.  The first is special.
                if (isEmpty(children)) {
                    return node;
                }
                if (isAttributeList(children.first)) {
                    assignAttributes(node, children.first);
                    children = children.rest;
                }
                while (! (isEmpty(children))) {
                    node.appendChild(xexpToDom(children.first));
                    children = children.rest;
                }
                return node;
            } else {
                return false;
            }
        }
        return false;
    };

    var firstLessThan = function(x, y) {
        return x[0] < y[0];
    };

    var domToXexp = function(dom) {
        var child, attrs, name, convertedChildren, i, attributes;
        if (dom.nodeType === 1) {
            attributes = [];
            attrs = plt.baselib.lists.EMPTY;
            name = plt.baselib.symbols.makeSymbol(dom.nodeName.toLowerCase());
            child = dom.firstChild;
            convertedChildren = plt.baselib.lists.EMPTY;
            for (i = 0; i < dom.attributes.length; i++) {
                attributes.push([dom.attributes[i].nodeName, dom.attributes[i].nodeValue]);
            } 
            attributes.sort(firstLessThan);
            for (i = 0; i < attributes.length; i++) {
                attrs = plt.baselib.lists.makePair(
                    plt.baselib.lists.makeList(plt.baselib.symbols.makeSymbol(attributes[i][0]),
                                               attributes[i][1]),
                    attrs);
            }
            while(child !== null) {
                if (child.nodeType === 1) {
                    convertedChildren = 
                        plt.baselib.lists.makePair(
                            domToXexp(child),
                            convertedChildren);
                } else if (child.nodeType === 3) {
                    convertedChildren = plt.baselib.lists.makePair(
                        domToXexp(child),
                        convertedChildren);
                }
                // Ignore other types.
                child = child.nextSibling;
            }

            if (attrs === plt.baselib.lists.EMPTY) {
                return plt.baselib.lists.makePair(
                    name,
                    plt.baselib.lists.reverse(convertedChildren));
            } else {
                return plt.baselib.lists.makePair(
                    name,
                    plt.baselib.lists.makePair(
                        plt.baselib.lists.makePair(plt.baselib.symbols.makeSymbol("@"),
                                                   attrs),
                        plt.baselib.lists.reverse(convertedChildren)));
            }
        } else if (dom.nodeType === 3) {
            return dom.nodeValue;
        } else {
            // If we can't convert it, return false.
            return false;
        }
    };     










    //////////////////////////////////////////////////////////////////////

    var checkReal = plt.baselib.check.checkReal;
    var checkString = plt.baselib.check.checkString;
    var checkSymbolOrString = plt.baselib.check.checkSymbolOrString;
    var checkProcedure = plt.baselib.check.checkProcedure;


    var checkWorldHandler = plt.baselib.check.makeCheckArgumentType(
        isWorldHandler,
        'world handler');

    var checkMockView = plt.baselib.check.makeCheckArgumentType(
        isMockView, 'view');

    var checkMockViewOnElement = plt.baselib.check.makeCheckArgumentType(
        function(x) {
            return isMockView(x) && (!(x.getCursor().isOnAtomicElement()));
        },
        'element-focused view');


    var checkSelector = plt.baselib.check.makeCheckArgumentType(
        isString, 'selector');

    var checkXexp = plt.baselib.check.makeCheckArgumentType(
        isXexp, 'xexp');


    EXPORTS['big-bang'] = makeClosure(
        'big-bang',
        plt.baselib.arity.makeArityAtLeast(1),
        function(MACHINE) {
            var world = MACHINE.e[MACHINE.e.length - 1];
            var handlers = [];
            var i;
            for (i = 1; i < MACHINE.a; i++) {
                handlers.push(checkWorldHandler(MACHINE, 'big-bang', i));
            }
            return bigBang(MACHINE, world, handlers);
        });


    EXPORTS['initial-view'] = makeClosure(
        'initial-view',
        1,
        function(MACHINE) {
            var viewable = MACHINE.e[MACHINE.e.length - 1];
            PAUSE(function(restart) {
                coerseToView(viewable,
                             function(v) {
                                 restart(function(MACHINE) {
                                     finalizeClosureCall(MACHINE,
                                                         new InitialViewHandler(v));
                                 });
                             },
                             function(exn) {
                                 restart(function(MACHINE) {
                                     plt.baselib.exceptions.raiseFailure(
                                         MACHINE, 
                                         plt.baselib.format.format(
                                             "unable to translate ~s to view: ~a",
                                             [viewable, exn.message]));
                                 });
                             });
            });
        });

    EXPORTS['view?'] = makePrimitiveProcedure(
        'view?',
        1,
        function(M) {
            return isMockView(M.e[M.e.length - 1]);
        });


    EXPORTS['->view'] = makeClosure(
        '->view',
        1,
        function(MACHINE) {
            var viewable = MACHINE.e[MACHINE.e.length - 1];
            PAUSE(function(restart) {
                coerseToMockView(viewable,
                                 function(v) {
                                     restart(function(MACHINE) {
                                         finalizeClosureCall(MACHINE, v);
                                     });
                                 },
                                 function(exn) {
                                     restart(function(MACHINE) {
                                         plt.baselib.exceptions.raiseFailure(
                                             MACHINE, 
                                             plt.baselib.format.format(
                                                 "unable to translate ~s to view: ~a",
                                                 [viewable, exn.message]));
                                     });
                                 });
            });
        });
    
    EXPORTS['stop-when'] = makePrimitiveProcedure(
        'stop-when',
        1,
        function(MACHINE) {
            var stopWhen = wrapFunction(checkProcedure(MACHINE, 'stop-when', 0));
            return new StopWhenHandler(stopWhen);
        });

    EXPORTS['to-draw'] = makePrimitiveProcedure(
        'to-draw',
        1,
        function(MACHINE) {
            var toDraw = wrapFunction(checkProcedure(MACHINE, 'to-draw', 0));

            var coersingToMockView = function(MACHINE, world, view, success, fail) {
                return toDraw(MACHINE, world, view, 
                              function(v) { 
                                  coerseToMockView(v, success, fail);
                              },
                              fail);
            };
            return new ToDrawHandler(coersingToMockView);
        });

    EXPORTS['on-tick'] = makePrimitiveProcedure(
        'on-tick',
        plt.baselib.lists.makeList(1, 2),
        function(MACHINE) {
            var onTick = wrapFunction(checkProcedure(MACHINE, 'on-tick', 0));
            var delay = Math.floor(1000/28);
            if (MACHINE.a === 2) {
                delay = Math.floor(plt.baselib.numbers.toFixnum(checkReal(MACHINE, 'on-tick', 1)) * 1000);
            }
            return new EventHandler('on-tick', 
                                    new TickEventSource(delay), 
                                    onTick);
        });


    EXPORTS['view-focus?'] = makePrimitiveProcedure(
        'view-focus?',
        2,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-focus', 0);
            var selector = checkSelector(MACHINE, 'view-focus', 1);
            try {
                view.updateFocus(selector);
                return true;
            } catch (e) {
                return false;
            }
        });


    EXPORTS['view-focus'] = makePrimitiveProcedure(
        'view-focus',
        2,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-focus', 0);
            var selector = checkSelector(MACHINE, 'view-focus', 1);
            try {
                return view.updateFocus(selector);
            } catch (e) {
                plt.baselib.exceptions.raiseFailure(
                    MACHINE, 
                    plt.baselib.format.format(
                        "unable to focus to ~s: ~s",
                        [selector, e.message]));
            }
        });


    EXPORTS['view-left'] = makePrimitiveProcedure(
        'view-left',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-left', 0);
            try {
                return view.left();
            } catch (e) {
                plt.baselib.exceptions.raiseFailure(
                    MACHINE, 
                    "unable to focus left");
            }
        });

    EXPORTS['view-right'] = makePrimitiveProcedure(
        'view-right',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-right', 0);
            try {
                return view.right();
            } catch (e) {
                plt.baselib.exceptions.raiseFailure(
                    MACHINE, 
                    "unable to focus right");
            }
        });

    EXPORTS['view-up'] = makePrimitiveProcedure(
        'view-up',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-up', 0);
            try {
                return view.up();
            } catch (e) {
                plt.baselib.exceptions.raiseFailure(
                    MACHINE, 
                    "unable to focus up");
            }
        });

    EXPORTS['view-down'] = makePrimitiveProcedure(
        'view-down',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-down', 0);
            try {
                return view.down();
            } catch(e) {
                plt.baselib.exceptions.raiseFailure(
                    MACHINE, 
                    "unable to focus down");
            }
        });

    EXPORTS['view-forward'] = makePrimitiveProcedure(
        'view-forward',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-forward', 0);
            try {
                return view.forward();
            } catch(e) {
                plt.baselib.exceptions.raiseFailure(
                    MACHINE, 
                    "unable to focus forward");
            } 
        });

    EXPORTS['view-backward'] = makePrimitiveProcedure(
        'view-backward',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-backward', 0);
            try {
                return view.backward();
            } catch(e) {
                plt.baselib.exceptions.raiseFailure(
                    MACHINE, 
                    "unable to focus backward");
            }
        });


    EXPORTS['view-left?'] = makePrimitiveProcedure(
        'view-left?',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-left?', 0);
            return view.isLeftMovementOk();
        });

    EXPORTS['view-right?'] = makePrimitiveProcedure(
        'view-right?',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-right?', 0);
            return view.isRightMovementOk();
        });

    EXPORTS['view-up?'] = makePrimitiveProcedure(
        'view-up?',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-up?', 0);
            return view.isUpMovementOk();
        });

    EXPORTS['view-down?'] = makePrimitiveProcedure(
        'view-down?',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-down?', 0);
            return view.isDownMovementOk();
        });


    EXPORTS['view-forward?'] = makePrimitiveProcedure(
        'view-down?',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-forward?', 0);
            return view.isForwardMovementOk();
        });

    EXPORTS['view-backward?'] = makePrimitiveProcedure(
        'view-backward?',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-backward?', 0);
            return view.isBackwardMovementOk();
        });



    EXPORTS['view-text'] = makePrimitiveProcedure(
        'view-text',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-text', 0);
            return view.getText();
        });


    EXPORTS['update-view-text'] = makePrimitiveProcedure(
        'update-view-text',
        2,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'update-view-text', 0);
            var text = plt.baselib.format.toDisplayedString(MACHINE.e[MACHINE.e.length - 2]);
            return view.updateText(text);
        });




    EXPORTS['view-attr'] = makePrimitiveProcedure(
        'view-attr',
        2,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'view-attr', 0);
            var name = checkSymbolOrString(MACHINE, 'view-attr', 1).toString();
            return view.getAttr(name);
        });

    EXPORTS['view-has-attr?'] = makePrimitiveProcedure(
        'view-has-attr?',
        2,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'view-has-attr?', 0);
            var name = checkSymbolOrString(MACHINE, 'view-has-attr?', 1).toString();
            return view.hasAttr(name);
        });

    EXPORTS['update-view-attr'] = makePrimitiveProcedure(
        'update-view-attr',
        3,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'update-view-attr', 0);
            var name = checkSymbolOrString(MACHINE, 'update-view-attr', 1).toString();
            var value = checkSymbolOrString(MACHINE, 'update-view-attr', 2).toString();
            return view.updateAttr(name, value);
        });

    EXPORTS['remove-view-attr'] = makePrimitiveProcedure(
        'remove-view-attr',
        2,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'remove-view-attr', 0);
            var name = checkSymbolOrString(MACHINE, 'remove-view-attr', 1).toString();
            return view.removeAttr(name);
        });

    EXPORTS['view-css'] = makePrimitiveProcedure(
        'view-css',
        2,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'view-css', 0);
            var name = checkSymbolOrString(MACHINE, 'view-css', 1).toString();
            return view.getCss(name);
        });


    EXPORTS['update-view-css'] = makePrimitiveProcedure(
        'update-view-css',
        3,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'update-view-css', 0);
            var name = checkSymbolOrString(MACHINE, 'update-view-css', 1).toString();
            var value = checkSymbolOrString(MACHINE, 'update-view-css', 2).toString();
            return view.updateCss(name, value);
        });


    EXPORTS['view-bind'] = makePrimitiveProcedure(
        'view-bind',
        3,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'view-bind', 0);
            var name = checkSymbolOrString(MACHINE, 'view-bind', 1);
            var worldF = wrapFunction(checkProcedure(MACHINE, 'view-bind', 2));
            return view.bind(name, worldF);
        });


    EXPORTS['view-form-value'] = makePrimitiveProcedure(
        'view-form-value',
        1,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'view-form-value', 0);
            return view.getFormValue();
        });


    EXPORTS['update-view-form-value'] = makePrimitiveProcedure(
        'update-view-form-value',
        2,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'update-view-form-value', 0);
            var value = checkSymbolOrString(MACHINE, 'update-view-form-value', 1).toString();
            return view.updateFormValue(value);
        });

    EXPORTS['view-show'] = makePrimitiveProcedure(
        'view-show',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-show', 0);
            return view.show();
        });


    EXPORTS['view-hide'] = makePrimitiveProcedure(
        'view-hide',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-hide', 0);
            return view.hide();
        });


    EXPORTS['view-remove'] = makePrimitiveProcedure(
        'view-remove',
        1,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-remove', 0);
            return view.remove();
        });


    
    EXPORTS['view-append-child'] = makeClosure(
        'view-append-child',
        2,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'view-append-child', 0);
            var x = MACHINE.e[MACHINE.e.length - 2];
            PAUSE(function(restart) {
                coerseToDomNode(x,
                                function(dom) {
                                     restart(function(MACHINE) {
                                         var updatedView = view.appendChild(dom);
                                         finalizeClosureCall(MACHINE, updatedView);
                                     });
                                },
                                function(err) {
                                    restart(function(MACHINE) {
                                         plt.baselib.exceptions.raiseFailure(
                                             MACHINE, 
                                             plt.baselib.format.format(
                                                 "unable to translate ~s to dom node: ~a",
                                                 [x, err.message]));
                                        
                                    });
                                });
            });
        });


    EXPORTS['view-insert-right'] = makeClosure(
        'view-insert-right',
        2,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-insert-right', 0);
            var x = MACHINE.e[MACHINE.e.length - 2];
            PAUSE(function(restart) {
                coerseToDomNode(x,
                                function(dom) {
                                     restart(function(MACHINE) {
                                         var updatedView = view.insertRight(dom);
                                         finalizeClosureCall(MACHINE, updatedView);
                                     });
                                },
                                function(err) {
                                    restart(function(MACHINE) {
                                         plt.baselib.exceptions.raiseFailure(
                                             MACHINE, 
                                             plt.baselib.format.format(
                                                 "unable to translate ~s to dom node: ~a",
                                                 [x, err.message]));
                                        
                                    });
                                });
            });
        });




    EXPORTS['view-insert-left'] = makeClosure(
        'view-insert-left',
        2,
        function(MACHINE) {
            var view = checkMockView(MACHINE, 'view-insert-left', 0);
            var x = MACHINE.e[MACHINE.e.length - 2];
            PAUSE(function(restart) {
                coerseToDomNode(x,
                                function(dom) {
                                     restart(function(MACHINE) {
                                         var updatedView = view.insertLeft(dom);
                                         finalizeClosureCall(MACHINE, updatedView);
                                     });
                                },
                                function(err) {
                                    restart(function(MACHINE) {
                                         plt.baselib.exceptions.raiseFailure(
                                             MACHINE, 
                                             plt.baselib.format.format(
                                                 "unable to translate ~s to dom node: ~a",
                                                 [x, err.message]));
                                        
                                    });
                                });
            });
        });



    EXPORTS['view-id'] = makePrimitiveProcedure(
        'view-id',
        1,
        function(MACHINE) {
            var view = checkMockViewOnElement(MACHINE, 'view-hide', 0);
            return view.id();
        });




    EXPORTS['on-location-change'] = makePrimitiveProcedure(
        'on-location-change',
        1,
        function(MACHINE) {
            var onChange = wrapFunction(checkProcedure(MACHINE, 'on-location-change', 0));
            return new EventHandler('on-location-change', 
                                    new LocationEventSource(), 
                                    onChange);
        });


    EXPORTS['on-mock-location-change'] = makePrimitiveProcedure(
        'on-mock-location-change',
        1,
        function(MACHINE) {
            var onChange = wrapFunction(checkProcedure(MACHINE, 'on-mock-location-change', 0));
            return new EventHandler('on-mock-location-change', 
                                    new MockLocationEventSource(), 
                                    onChange);
        });


    EXPORTS['open-output-element'] = makePrimitiveProcedure(
        'open-output-element',
        1,
        function(MACHINE) {
            var id = checkString(MACHINE, 'open-output-element', 0);
            return new DomElementOutputPort(id.toString());
        });


    EXPORTS['xexp?'] = makePrimitiveProcedure(
        'xexp?',
        1,
        function(MACHINE) {
            return isXexp(MACHINE.e[MACHINE.e.length - 1]);
        });


    EXPORTS['xexp->dom'] = makePrimitiveProcedure(
        'xexp->dom',
        1,
        function(MACHINE) {
            var xexp = checkXexp(MACHINE, 'xexp->dom', 0);
            return xexpToDom(xexp);
        });


    EXPORTS['view->xexp'] = makePrimitiveProcedure(
        'view->xexp',
        1,
        function(MACHINE) {
            var mockView = checkMockView(MACHINE, 'view-hide', 0);
            var domNode = arrayTreeToDomNode(mockView.getCursor().top().node);
            return domToXexp(domNode);
        });




    // For private importers of the web-world library, like the FFI's js/world library.
    EXPORTS['EventSource'] = EventSource;
    EXPORTS['EventHandler'] = EventHandler;
    EXPORTS['wrapFunction'] = wrapFunction;
    //////////////////////////////////////////////////////////////////////
}());})(M, exports);
             modrec.prefix[0]=exports["->view"];
modrec.prefix[1]=exports["big-bang"];
modrec.prefix[2]=exports["initial-view"];
modrec.prefix[3]=exports["on-location-change"];
modrec.prefix[4]=exports["on-mock-location-change"];
modrec.prefix[5]=exports["on-tick"];
modrec.prefix[6]=exports["open-output-element"];
modrec.prefix[7]=exports["remove-view-attr"];
modrec.prefix[8]=exports["stop-when"];
modrec.prefix[9]=exports["to-draw"];
modrec.prefix[10]=exports["update-view-attr"];
modrec.prefix[11]=exports["update-view-css"];
modrec.prefix[12]=exports["update-view-form-value"];
modrec.prefix[13]=exports["update-view-text"];
modrec.prefix[14]=exports["view->xexp"];
modrec.prefix[15]=exports["view-append-child"];
modrec.prefix[16]=exports["view-attr"];
modrec.prefix[17]=exports["view-backward"];
modrec.prefix[18]=exports["view-backward?"];
modrec.prefix[19]=exports["view-bind"];
modrec.prefix[20]=exports["view-css"];
modrec.prefix[21]=exports["view-down"];
modrec.prefix[22]=exports["view-down?"];
modrec.prefix[23]=exports["view-focus"];
modrec.prefix[24]=exports["view-focus?"];
modrec.prefix[25]=exports["view-form-value"];
modrec.prefix[26]=exports["view-forward"];
modrec.prefix[27]=exports["view-forward?"];
modrec.prefix[28]=exports["view-has-attr?"];
modrec.prefix[29]=exports["view-hide"];
modrec.prefix[30]=exports["view-id"];
modrec.prefix[31]=exports["view-insert-left"];
modrec.prefix[32]=exports["view-insert-right"];
modrec.prefix[33]=exports["view-left"];
modrec.prefix[34]=exports["view-left?"];
modrec.prefix[35]=exports["view-remove"];
modrec.prefix[36]=exports["view-right"];
modrec.prefix[37]=exports["view-right?"];
modrec.prefix[38]=exports["view-show"];
modrec.prefix[39]=exports["view-text"];
modrec.prefix[40]=exports["view-up"];
modrec.prefix[41]=exports["view-up?"];
modrec.prefix[42]=exports["view?"];
modrec.prefix[43]=exports["xexp->dom"];
modrec.prefix[44]=exports["xexp?"];

             modrec.privateExports = exports;
             modrec.finalizeModuleInvokation();
             return M.c.pop().label(M); };
             if (! M.modules["whalesong/resource.rkt"].isInvoked) {
                 M.modules["whalesong/resource.rkt"].internalInvoke(M,
                                            afterName3046,
                                            M.params.currentErrorHandler);
             } else {
                 afterName3046();
             } };
             if (! M.modules["whalesong/web-world/event.rkt"].isInvoked) {
                 M.modules["whalesong/web-world/event.rkt"].internalInvoke(M,
                                            afterName3047,
                                            M.params.currentErrorHandler);
             } else {
                 afterName3047();
             }
        });
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/event.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
_6294=RT.si_context_expected(5);

var _6301=function(M){if(--M.cbt<0){throw _6301;}
M.e.length-=(M.a-1);
return(_6302)(M);};

var _6300=function(M){if(--M.cbt<0){throw _6300;}
M.c.push(new RT.PromptFrame(_6302,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6264,2,[M.e[M.e.length-1]],"event-ref");
M.e[M.e.length-1][6]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6290=function(M){if(--M.cbt<0){throw _6290;}
M.c.push(new RT.PromptFrame(_6300,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6263,1,[M.e[M.e.length-1]],"event-keys");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6299=function(M){if(--M.cbt<0){throw _6299;}
M.e.length-=(M.a-1);
return(_6300)(M);};

_6297=RT.si_context_expected(4);

var _6289=function(M){if(--M.cbt<0){throw _6289;}
M.e.length-=(M.a-1);
return(_6290)(M);};

var _6278=function(M){if(--M.cbt<0){throw _6278;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6280,M.p));
return((M.p).label)(M);};

var _6296=function(M){if(--M.cbt<0){throw _6296;}
if((M.a-4)===0){return(_6292)(M);}else{RT.si_context_expected(4)(M);
}};

var _6288=function(M){if(--M.cbt<0){throw _6288;}
M.e.push([M.params.currentNamespace.get("struct:event")||M.primitives["struct:event"],M.params.currentNamespace.get("make-event")||M.primitives["make-event"],M.params.currentNamespace.get("event?")||M.primitives["event?"],M.params.currentNamespace.get("event-kvpairs")||M.primitives["event-kvpairs"],M.params.currentNamespace.get("event-keys")||M.primitives["event-keys"],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("map2"),{moduleName:"whalesong/lang/private/map.rkt",name:"map2"}],M.params.currentNamespace.get("event-ref")||M.primitives["event-ref"],M.primitives["symbol?"],M.primitives["string?"],M.primitives["string->symbol"],M.primitives["raise-type-error"],[M.modules["whalesong/lang/private/list.rkt"].prefix,M.modules["whalesong/lang/private/list.rkt"].getPrefixOffset("assq"),{moduleName:"whalesong/lang/private/list.rkt",name:"assq"}],M.primitives["error"]]);M.e[M.e.length-1].names=["struct:event","make-event","event?","event-kvpairs","event-keys","map2","event-ref","symbol?","string?","string->symbol","raise-type-error","assq","error"];
M.modules["whalesong/web-world/event.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_6290,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym3153;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.a=0;
M.v=M.primitives["current-inspector"]._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.NULL);
M.e[M.e.length-10]=false;
M.v=sym3153;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6294,M.p));
return((M.p).label)(M);};

var _6285=function(M){M.modules["whalesong/web-world/event.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==void(0))!==false){return(_6286)(M);}else{return(_6288)(M);}};

var _6302=function(M){if(--M.cbt<0){throw _6302;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/web-world/event.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6287=function(M){if(--M.cbt<0){throw _6287;}
M.e.length-=(M.a-1);
return(_6288)(M);};

var _6292=function(M){M.e.splice(M.e.length-8,5);
M.e[M.e.length-4][0]=M.v;
M.e[M.e.length-4][1]=M.e[M.e.length-1];
M.e[M.e.length-4][2]=M.e[M.e.length-2];
M.e[M.e.length-4][3]=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6295=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym3154;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6297,M.p));
return((M.p).label)(M);};


var _6265=function(M){M.c.push(new RT.PromptFrame(_6267,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/web-world/event.rkt"]=new RT.ModuleRecord("event",_6285);
return(_6284)(M);};

var _6282=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6286=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_6288)(M);}else{M.c.push(new RT.CallFrame(_6288,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _6284=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6273=function(M){M.e.push(void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5][11][0][M.e[M.e.length-5][11][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][3];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6278,M.p));
return((M.p).label)(M);};

var _6272=function(M){M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["string?"]._i(M);
M.e.pop();
if(M.v===false){return(_6274)(M);}else{M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["string->symbol"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
return(_6273)(M);}};

var _6274=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3155;
M.e[M.e.length-2]="symbol or string";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
M.e[M.e.length-1]=M.v;
return(_6273)(M);};

var _6303=function(M){return(_6265)(M);};

var _6267=function(M){if(--M.cbt<0){throw _6267;}
};

var _6269=function(M){if(--M.cbt<0){throw _6269;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6293=function(M){if(--M.cbt<0){throw _6293;}
if((M.a-5)===0){return(_6295)(M);}else{RT.si_context_expected(5)(M);
}};

var _6280=function(M){if(--M.cbt<0){throw _6280;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
if(M.v===false){return(_6282)(M);}else{M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3155;
M.e[M.e.length-2]="Could not find key ~a";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _6266=function(M){if(--M.cbt<0){throw _6266;}
M.e.length-=(M.a-1);
return(_6267)(M);};


var _6264=function(M){if(--M.cbt<0){throw _6264;}
//"lambda body for #(struct:LamPositionalName event-ref whalesong/web-world/event.rkt 12 0 162 491)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["symbol?"]._i(M);
M.e.pop();
if(M.v===false){return(_6272)(M);}else{M.e[M.e.length-1]=M.e[M.e.length-4];
return(_6273)(M);}};

var _6263=function(M){if(--M.cbt<0){throw _6263;}
//"lambda body for #(struct:LamPositionalName event-keys whalesong/web-world/event.rkt 8 0 96 63)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.e[M.e.length-1]=M.primitives["car"];
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6269,M.p));
return((M.p).label)(M);};


_6288.mvr=_6287;
_6294.mvr=_6293;
_6297.mvr=_6296;
_6290.mvr=_6289;
_6300.mvr=_6299;
_6302.mvr=_6301;
_6267.mvr=_6266;
var sym3153=RT.makeSymbol("event");
var sym3155=RT.makeSymbol("event-ref");
var sym3154=RT.makeSymbol("kvpairs");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6303, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/event.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/event.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/helpers.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6307=function(M){if(--M.cbt<0){throw _6307;}
};

var _6312=function(M){if(--M.cbt<0){throw _6312;}
M.e.push([M.params.currentNamespace.get("fresh-id")||M.primitives["fresh-id"],M.primitives["symbol->string"]]);M.e[M.e.length-1].names=["fresh-id","symbol->string"];
M.modules["whalesong/web-world/helpers.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_6314,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6304,0,[M.e[M.e.length-1]],"fresh-id");
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6309=function(M){M.modules["whalesong/web-world/helpers.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==void(0))!==false){return(_6310)(M);}else{return(_6312)(M);}};

var _6314=function(M){if(--M.cbt<0){throw _6314;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/web-world/helpers.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6313=function(M){if(--M.cbt<0){throw _6313;}
M.e.length-=(M.a-1);
return(_6314)(M);};

var _6306=function(M){if(--M.cbt<0){throw _6306;}
M.e.length-=(M.a-1);
return(_6307)(M);};

var _6305=function(M){M.c.push(new RT.PromptFrame(_6307,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/web-world/helpers.rkt"]=new RT.ModuleRecord("helpers",_6309);
return(_6308)(M);};

var _6310=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_6312)(M);}else{M.c.push(new RT.CallFrame(_6312,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _6308=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6315=function(M){return(_6305)(M);};

var _6311=function(M){if(--M.cbt<0){throw _6311;}
M.e.length-=(M.a-1);
return(_6312)(M);};

var _6304=function(M){if(--M.cbt<0){throw _6304;}
//"lambda body for #(struct:LamPositionalName fresh-id whalesong/web-world/helpers.rkt 8 0 112 67)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e.push(sym3172);
M.a=1;
M.v=M.primitives["gensym"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.primitives["symbol->string"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_6312.mvr=_6311;
_6314.mvr=_6313;
_6307.mvr=_6306;
var sym3172=RT.makeSymbol("fresh-web-world-id");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6315, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/helpers.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/web-world/helpers.rkt>");
                          }
                     },
                     {});
// ** Visiting <ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/js.rkt>
((function(M, success, fail, params) {
var param;
var RT = plt.runtime;
var _6368=function(M){return(_6319)(M);};

var _6321=function(M){if(--M.cbt<0){throw _6321;}
};

var _6327=function(M){if(--M.cbt<0){throw _6327;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _6354=function(M){if(--M.cbt<0){throw _6354;}
M.e.length-=(M.a-1);
return(_6355)(M);};

var _6333=function(M){if(--M.cbt<0){throw _6333;}
if(M.v===false){return(_6330)(M);}else{M.e.push(void(0));
M.p=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6320=function(M){if(--M.cbt<0){throw _6320;}
M.e.length-=(M.a-1);
return(_6321)(M);};



var _6317=function(M){if(--M.cbt<0){throw _6317;}
//"lambda body for #(struct:LamPositionalName -js-function->procedure whalesong/js.rkt 16 0 538 239)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["string?"]._i(M);
M.e.pop();
if(M.v===false){return(_6324)(M);}else{M.e.push(M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]]);
M.e.push(void(0));
M.p=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6327,M.p));
return((M.p).label)(M);}};

var _6318=function(M){if(--M.cbt<0){throw _6318;}
//"lambda body for #(struct:LamPositionalName -js-async-function->procedure whalesong/js.rkt 25 0 779 263)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["string?"]._i(M);
M.e.pop();
if(M.v===false){return(_6336)(M);}else{M.e.push(M.e[M.e.length-1][8][0][M.e[M.e.length-1][8][1]]);
M.e.push(void(0));
M.p=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6339,M.p));
return((M.p).label)(M);}};


var _6316=function(M){if(--M.cbt<0){throw _6316;}
//"lambda body for #(struct:LamPositionalName js-function? whalesong/js.rkt 13 0 488 48)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][0];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _6352=function(M){if(--M.cbt<0){throw _6352;}
if((M.modules["whalesong/js/main.rkt"]!==void(0))!==false){return(_6353)(M);}else{return(_6355)(M);}};

var _6349=function(M){M.modules["whalesong/js.rkt"].isInvoked=true;
if((M.modules["whalesong/lang/base.rkt"]!==void(0))!==false){return(_6350)(M);}else{return(_6352)(M);}};

var _6359=function(M){if(--M.cbt<0){throw _6359;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6361,M.p));
return((M.p).label)(M);};

var _6351=function(M){if(--M.cbt<0){throw _6351;}
M.e.length-=(M.a-1);
return(_6352)(M);};

var _6362=function(M){if(--M.cbt<0){throw _6362;}
M.e.length-=(M.a-1);
return(_6363)(M);};


var _6345=function(M){if(--M.cbt<0){throw _6345;}
if(M.v===false){return(_6342)(M);}else{M.e.push(void(0));
M.p=M.e[M.e.length-2][8][0][M.e[M.e.length-2][8][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _6363=function(M){if(--M.cbt<0){throw _6363;}
M.c.push(new RT.PromptFrame(_6365,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6317,1,[M.e[M.e.length-1]],"-js-function->procedure");
M.e[M.e.length-1][4]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6357=function(M){if(--M.cbt<0){throw _6357;}
M.c.push(new RT.PromptFrame(_6363,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6316,1,[M.e[M.e.length-1]],"js-function?");
M.e[M.e.length-1][3]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6339=function(M){if(--M.cbt<0){throw _6339;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _6364=function(M){if(--M.cbt<0){throw _6364;}
M.e.length-=(M.a-1);
return(_6365)(M);};

var _6356=function(M){if(--M.cbt<0){throw _6356;}
M.e.length-=(M.a-1);
return(_6357)(M);};

var _6330=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3189;
M.e[M.e.length-2]="js-function or string";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6365=function(M){if(--M.cbt<0){throw _6365;}
M.c.push(new RT.PromptFrame(_6367,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.v=new RT.Closure(_6318,1,[M.e[M.e.length-1]],"-js-async-function->procedure");
M.e[M.e.length-1][7]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6355=function(M){if(--M.cbt<0){throw _6355;}
M.e.push([M.params.currentNamespace.get("raw-js-function?")||M.primitives["raw-js-function?"],[M.modules["whalesong/js/main.rkt"].prefix,M.modules["whalesong/js/main.rkt"].getPrefixOffset("js-function->procedure5.9"),{moduleName:"whalesong/js/main.rkt",name:"js-function->procedure5.9"}],[M.modules["whalesong/js/main.rkt"].prefix,M.modules["whalesong/js/main.rkt"].getPrefixOffset("js-eval21.41"),{moduleName:"whalesong/js/main.rkt",name:"js-eval21.41"}],M.params.currentNamespace.get("js-function?")||M.primitives["js-function?"],M.params.currentNamespace.get("-js-function->procedure")||M.primitives["-js-function->procedure"],M.primitives["string?"],M.primitives["raise-type-error"],M.params.currentNamespace.get("-js-async-function->procedure")||M.primitives["-js-async-function->procedure"],[M.modules["whalesong/js/main.rkt"].prefix,M.modules["whalesong/js/main.rkt"].getPrefixOffset("js-async-function->procedure6.11"),{moduleName:"whalesong/js/main.rkt",name:"js-async-function->procedure6.11"}]]);M.e[M.e.length-1].names=["raw-js-function?","js-function->procedure5.9","js-eval21.41","js-function?","-js-function->procedure","string?","raise-type-error","-js-async-function->procedure","js-async-function->procedure6.11"];
M.modules["whalesong/js.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.PromptFrame(_6357,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push(M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]]);
M.e.push(void(0));
M.p=M.e[M.e.length-3][2][0][M.e[M.e.length-3][2][1]];
M.e[M.e.length-1]="function(x) { return typeof(x) === 'function'}";
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6359,M.p));
return((M.p).label)(M);};

var _6324=function(M){M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][3];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6333,M.p));
return((M.p).label)(M);};

var _6366=function(M){if(--M.cbt<0){throw _6366;}
M.e.length-=(M.a-1);
return(_6367)(M);};

var _6361=function(M){if(--M.cbt<0){throw _6361;}
M.e[M.e.length-1][0]=M.v;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6353=function(M){if(M.modules["whalesong/js/main.rkt"].isInvoked!==false){return(_6355)(M);}else{M.c.push(new RT.CallFrame(_6355,M.p));
return(M.modules["whalesong/js/main.rkt"].label)(M);}};

var _6367=function(M){if(--M.cbt<0){throw _6367;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
M.modules["whalesong/js.rkt"].finalizeModuleInvokation();
return(M.p)(M);};

var _6336=function(M){M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][3];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_6345,M.p));
return((M.p).label)(M);};

var _6350=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_6352)(M);}else{M.c.push(new RT.CallFrame(_6352,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _6319=function(M){M.c.push(new RT.PromptFrame(_6321,RT.DEFAULT_CONTINUATION_PROMPT_TAG,M.e.length,false));
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.modules["whalesong/js.rkt"]=new RT.ModuleRecord("js",_6349);
return(_6348)(M);};

var _6348=function(M){M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _6342=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3190;
M.e[M.e.length-2]="js-function or string";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_6352.mvr=_6351;
_6355.mvr=_6354;
_6357.mvr=_6356;
_6363.mvr=_6362;
_6365.mvr=_6364;
_6367.mvr=_6366;
_6321.mvr=_6320;
var sym3189=RT.makeSymbol("js-function->procedure");
var sym3190=RT.makeSymbol("js-async-function->procedure");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (params.hasOwnProperty(param)) {
        M.params[param] = params[param];
    }
}M.trampoline(_6368, true); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/js.rkt>");
                          }
                     },
                     function(err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /Users/soegaard/Dropbox/GitHub/new-whalesong/whalesong/js.rkt>");
                          }
                     },
                     {});
// ** Visiting <UninterpretedSource>
(function(M) { 
M.modules["whalesong/js/main.rkt"] =
    new plt.runtime.ModuleRecord("whalesong/js/main.rkt",
        function(M) {
            
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/js/main.rkt"];
             modrec.prefix=[void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0)];modrec.prefix.names=["$4.7","alert1.1","body2.3","call-method3.5","get-attr8.15","in-javascript-context?18.35","js-async-function->procedure6.11","js-eval21.41","js-function->procedure5.9","js-null20.39","js-null?19.37","js-number->number15.29","js-number?13.25","js-string->string12.23","js-string?10.19","load-script22.43","number->js-number14.27","set-attr!9.17","string->js-string11.21","viewport-height17.33","viewport-width16.31","window7.13"];modrec.prefix.internalNames=["$","alert","body","call-method","get-attr","in-javascript-context?","js-async-function->procedure","js-eval","js-function->procedure","js-null","js-null?","js-number->number","js-number?","js-string->string","js-string?","load-script","number->js-number","set-attr!","string->js-string","viewport-height","viewport-width","window"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){/*jslint devel: true, browser: false, unparam: true, sub: true, windows: false, vars: true, white: true, maxerr: 50, indent: 4 */

/*global $,plt,EXPORTS,document,window*/
(function() {
    "use strict";

    var VOID = plt.baselib.constants.VOID_VALUE;
    var PAUSE = plt.runtime.PAUSE;
    var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;
    var makeClosure = plt.baselib.functions.makeClosure;
    var makeCheckArgumentType = plt.baselib.check.makeCheckArgumentType;
    var checkSymbolOrString = plt.baselib.check.checkSymbolOrString;
    var checkString = plt.baselib.check.checkString;
    var checkJSFunction = makeCheckArgumentType(function(x) { return typeof(x) === 'function'; },
                                                "js function");
    var checkAny = makeCheckArgumentType(function(x) { return true; },
                                         "any");

    var isJsString = function(x) { return typeof(x) === 'string'; };
    var checkJsString = makeCheckArgumentType(isJsString, 'JavaScript string');



    var isJsNumber = function(x) { return typeof(x) === 'number'; };
    var checkNumber = plt.baselib.check.checkNumber;
    var checkJsNumber = makeCheckArgumentType(isJsNumber, 'JavaScript number');



    //////////////////////////////////////////////////////////////////////
    /* Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public
     * License along with this library; if not, write to the Free Software
     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
     *
     * Contact information:
     *   Dao Gottwald  <dao at design-noir.de>
     *
     * @version  1.6
     * @url      http://design-noir.de/webdev/JS/loadScript/
     */
    var _loadScriptQueue = {};
    var loadScript = function(url, callback, onError) {
        var queue = _loadScriptQueue;
        if (url in queue) { // script is already in the document
	    if (callback) {
	        if (queue[url]) // still loading
		    queue[url].push(callback);
	        else // loaded
		    callback();
	    }
	    return;
        }
        queue[url] = callback ? [callback] : [];
        var script = document.createElement("script");
        script.type = "text/javascript";
        script.onload = script.onreadystatechange = function() {
	    if (script.readyState && script.readyState != "loaded" && script.readyState != "complete")
	        return;
	    script.onreadystatechange = script.onload = null;
	    document.getElementsByTagName("head")[0].removeChild(script);
	    var work = queue[url];
	    delete(queue[url]);
	    while (work.length)
	        work.shift()();
        };
        script.onerror = function() {
	    script.onreadystatechange = script.onload = null;
	    document.getElementsByTagName("head")[0].removeChild(script);
            onError();
        };
        script.src = url;
        document.getElementsByTagName("head")[0].appendChild(script);
    };



    EXPORTS['alert'] =
        makePrimitiveProcedure(
            'alert',
            1,
            function(MACHINE) {
                var elt = MACHINE.e[MACHINE.e.length - 1];
                alert(String(elt));
                return VOID;
            });

    EXPORTS['js-eval'] =
        makePrimitiveProcedure(
            'myalert',
            1,
            function(MACHINE) {
                var elt = MACHINE.e[MACHINE.e.length - 1];
                var obj = eval('(' + String(elt) + ')');
                return obj;
            });

    EXPORTS['load-script'] =
        makeClosure(
            'load-script',
            1,
            function(MACHINE) {
                var url = checkString(MACHINE, 'load-string', 0);
                PAUSE(
                    function(restart) {
                        var onload = function() {
                            restart(function(MACHINE) {
                                plt.runtime.finalizeClosureCall(
                                    MACHINE, 
                                    VOID);
                            });
                        };
                        var onerror = function(e) {
                            restart(function(MACHINE) {
                                plt.baselib.exceptions.raiseFailure(
                                    MACHINE, 
                                    plt.baselib.format.format(
                                        "unable to load ~a: ~a",
                                        [url,
                                         ((e && e.message) ? e.message : "unknown error")]));
                            });
                        };
                        loadScript(url.toString(),
                                   onload,
                                   onerror);
                    }
                );                
            },
            void(0));
            


    EXPORTS['body'] = $(document.body);

    EXPORTS['$'] =
        makePrimitiveProcedure(
            '$',
            1,
            function(MACHINE) {
                var obj = MACHINE.e[MACHINE.e.length - 1];
                return $(obj);
            });

    EXPORTS['call-method'] = 
        makePrimitiveProcedure(
            'call-method',
            plt.baselib.arity.makeArityAtLeast(2),
            function(MACHINE) {
                var obj = MACHINE.e[MACHINE.e.length - 1];
                var methodName = MACHINE.e[MACHINE.e.length - 2];
                var args = [], i;
                for (i = 0; i < MACHINE.a - 2; i = i+1) {
                    args.push(MACHINE.e[MACHINE.e.length -1 - 2 - i]);
                }
                var result = obj[methodName].apply(obj, args);
                return result;
            });


    // Lift JavaScript functions to Whalesong functions.
    EXPORTS['js-function->procedure'] =
        makePrimitiveProcedure(
            'js-function->procedure',
            1,
            function(MACHINE) {
                var f = checkJSFunction(MACHINE, 'js function', 0);
                return makePrimitiveProcedure(
                    'lifted js function',
                    plt.baselib.arity.makeArityAtLeast(0),
                    function(MACHINE) {
                        var args = [], i;
                        for (i = 0; i < MACHINE.a ; i = i+1) {
                            args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
                        }
                        return f.apply(null, args);
                    });
            });

    EXPORTS['js-async-function->procedure'] =
        makePrimitiveProcedure(
            'js-async-function->procedure',
            1,
            function(MACHINE) {
                var f = checkJSFunction(MACHINE, 'js function', 0);
                return makeClosure(
                    'lifted asynchronous js function',
                    plt.baselib.arity.makeArityAtLeast(0),
                    function(MACHINE) {
                        var args = [], i;
                        for (i = 0; i < MACHINE.a ; i = i+1) {
                            args.push(MACHINE.e[MACHINE.e.length - 1 - i]);
                        }
                        MACHINE.e.length -= MACHINE.a;
                        MACHINE.a = 0;
                        return plt.runtime.PAUSE(
                            function(restart) {
                                var onFail = function(e) {
                                    restart(function(MACHINE) {
                                        plt.baselib.exceptions.raiseFailure(
                                            MACHINE, 
                                            plt.baselib.format.format(
                                                "~a",
                                                [((e && e.message) ? e.message : e || "unknown error")]));
                                        
                                    });
                                };
                                var onSuccess = function(v) {
                                    // Common case, return single argument
                                    if (arguments.length === 1) {
                                        restart(function(MACHINE) {
                                            MACHINE.a = 0;
                                            plt.runtime.finalizeClosureCall(MACHINE, v);
                                        });
                                    } else {
                                        // General case: return multiple arguments
                                        var args = Array.prototype.slice.call(arguments, 0);
                                        args.unshift(MACHINE);
                                        restart(function(MACHINE) {
                                            MACHINE.a = 0;
                                            plt.runtime.finalizeClosureCall.apply(
                                                null, args);
                                        });
                                    }
                                }
                                args.unshift(onFail);
                                args.unshift(onSuccess);
                                return f.apply(null, args);
                            });
                    });
            });


    EXPORTS['window'] = window;


    EXPORTS['get-attr'] =
        makePrimitiveProcedure(
            'get-attr',
            plt.baselib.arity.makeArityAtLeast(2),
            function(MACHINE) {
                var obj = checkAny(MACHINE, 'get-attr', 0), attr, i;
                for (i = 1; i < MACHINE.a; i = i + 1) {
                    attr = checkSymbolOrString(MACHINE, 'get-attr', i).toString();
                    obj = obj[attr];
                }
                return obj;
            });


    EXPORTS['set-attr!'] =
        makePrimitiveProcedure(
            'set-attr!',
            3,
            function(MACHINE) {
                var obj = checkAny(MACHINE, 'set-attr!', 0);
                var attr = checkSymbolOrString(MACHINE, 'set-attr!', 1).toString();
                var val = checkAny(MACHINE, 'set-attr!', 2);
                obj[attr] = val;
                return VOID;
            });

    EXPORTS['js-string?'] = 
        makePrimitiveProcedure(
            'js-string?',
            1,
            function(MACHINE) {
                return typeof(checkAny(MACHINE, 'js-string?', 0)) === 'string';
            });

    EXPORTS['string->js-string'] =
        makePrimitiveProcedure(
            'string->js-string',
            1,
            function(MACHINE) {
                return checkString(MACHINE, 'string->js-string', 0).toString();
            });

    EXPORTS['js-string->string'] =
        makePrimitiveProcedure(
            'js-string->string',
            1,
            function(MACHINE) {
                return checkJsString(MACHINE, 'string->js-string', 0);
            });




    EXPORTS['js-number?'] = 
        makePrimitiveProcedure(
            'js-number?',
            1,
            function(MACHINE) {
                return isJsNumber(checkAny(MACHINE, 'js-string?', 0));
            });    
    EXPORTS['js-number->number'] = 
        makePrimitiveProcedure(
            'js-number->number',
            1,
            function(MACHINE) {
                return plt.baselib.numbers.makeFloat(checkJsNumber(MACHINE, 'js-string?', 0));
            });    

    EXPORTS['number->js-number'] = 
        makePrimitiveProcedure(
            'number->js-number',
            1,
            function(MACHINE) {
                return plt.baselib.numbers.toFixnum(checkNumber(MACHINE, 'js-string?', 0));
            });    


    EXPORTS['js-null?'] = 
        makePrimitiveProcedure(
            'js-null?',
            1,
            function(MACHINE) {
                return checkAny(MACHINE, 'js-null?', 0) === null;
            });    

    EXPORTS['js-null'] = null;



    // Javascript-specific extensions.  A small experiment.
    EXPORTS['viewport-width'] = 
        makePrimitiveProcedure(
            'viewport-width',
            0,
            function(MACHINE) {
                return $(window).width();
            });

    EXPORTS['viewport-height'] = 
        makePrimitiveProcedure(
            'viewport-height',
            0,
            function(MACHINE) {
                return $(window).height();
            });


    EXPORTS['in-javascript-context?'] =
        makePrimitiveProcedure(
            'in-javascript-context?',
            0,
            function(MACHINE) {
                return true;
            });
}());})(M, exports);
             modrec.prefix[0]=exports["$"];
modrec.prefix[1]=exports["alert"];
modrec.prefix[2]=exports["body"];
modrec.prefix[3]=exports["call-method"];
modrec.prefix[4]=exports["get-attr"];
modrec.prefix[5]=exports["in-javascript-context?"];
modrec.prefix[6]=exports["js-async-function->procedure"];
modrec.prefix[7]=exports["js-eval"];
modrec.prefix[8]=exports["js-function->procedure"];
modrec.prefix[9]=exports["js-null"];
modrec.prefix[10]=exports["js-null?"];
modrec.prefix[11]=exports["js-number->number"];
modrec.prefix[12]=exports["js-number?"];
modrec.prefix[13]=exports["js-string->string"];
modrec.prefix[14]=exports["js-string?"];
modrec.prefix[15]=exports["load-script"];
modrec.prefix[16]=exports["number->js-number"];
modrec.prefix[17]=exports["set-attr!"];
modrec.prefix[18]=exports["string->js-string"];
modrec.prefix[19]=exports["viewport-height"];
modrec.prefix[20]=exports["viewport-width"];
modrec.prefix[21]=exports["window"];

             modrec.privateExports = exports;
             modrec.finalizeModuleInvokation();
             return M.c.pop().label(M);
        });
 }(plt.runtime.currentMachine));